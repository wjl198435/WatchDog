{"version":3,"sources":["webpack:///./node_modules/@polymer/paper-dialog-behavior/paper-dialog-behavior.js","webpack:///./node_modules/@polymer/paper-dialog-behavior/paper-dialog-shared-styles.js","webpack:///./src/dialogs/ha-voice-command-dialog.js","webpack:///./src/mixins/dialog-mixin.js"],"names":["__webpack_require__","d","__webpack_exports__","PaperDialogBehaviorImpl","PaperDialogBehavior","_polymer_iron_overlay_behavior_iron_overlay_behavior_js__WEBPACK_IMPORTED_MODULE_1__","_polymer_polymer_lib_legacy_polymer_dom_js__WEBPACK_IMPORTED_MODULE_2__","hostAttributes","role","tabindex","properties","modal","type","Boolean","value","__readied","observers","listeners","tap","ready","this","__prevNoCancelOnOutsideClick","noCancelOnOutsideClick","__prevNoCancelOnEscKey","noCancelOnEscKey","__prevWithBackdrop","withBackdrop","_modalChanged","readied","_updateClosingReasonConfirmed","confirmed","closingReason","_onDialogClick","event","path","dom","i","l","indexOf","target","hasAttribute","close","stopPropagation","IronOverlayBehavior","$_documentContainer","document","createElement","setAttribute","innerHTML","head","appendChild","content","r","_polymer_polymer_lib_utils_html_tag__WEBPACK_IMPORTED_MODULE_3__","_polymer_polymer_polymer_element__WEBPACK_IMPORTED_MODULE_4__","_mixins_dialog_mixin__WEBPACK_IMPORTED_MODULE_5__","customElements","define","DialogMixin","PolymerElement","template","html","hass","Object","results","observer","_conversation","Array","who","text","showDialog","opened","initRecognition","recognition","webkitSpeechRecognition","onstart","final","interim","bind","onerror","abort","push","error","onend","callApi","then","response","speech","plain","set","length","onresult","oldResults","finalTranscript","interimTranscript","ind","resultIndex","isFinal","transcript","startListening","start","_scrollMessagesBottom","setTimeout","$","messages","scrollTop","scrollHeight","dialog","fire","dialogOpenChanged","newVal","_computeMessageClasses","message","_polymer_polymer_lib_utils_mixin__WEBPACK_IMPORTED_MODULE_0__","_polymer_paper_dialog_behavior_paper_dialog_behavior__WEBPACK_IMPORTED_MODULE_1__","_polymer_polymer_lib_legacy_class__WEBPACK_IMPORTED_MODULE_2__","_events_mixin__WEBPACK_IMPORTED_MODULE_3__","dedupingMixin","superClass","mixinBehaviors","EventsMixin"],"mappings":"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","file":"chunk.52971ba97f158819f908.js","sourcesContent":["/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nimport {IronOverlayBehavior} from '@polymer/iron-overlay-behavior/iron-overlay-behavior.js';\nimport {dom} from '@polymer/polymer/lib/legacy/polymer.dom.js';\n\n/**\n  Use `Polymer.PaperDialogBehavior` and `paper-dialog-shared-styles.html` to\n  implement a Material Design dialog.\n\n  For example, if `<paper-dialog-impl>` implements this behavior:\n\n      <paper-dialog-impl>\n          <h2>Header</h2>\n          <div>Dialog body</div>\n          <div class=\"buttons\">\n              <paper-button dialog-dismiss>Cancel</paper-button>\n              <paper-button dialog-confirm>Accept</paper-button>\n          </div>\n      </paper-dialog-impl>\n\n  `paper-dialog-shared-styles.html` provide styles for a header, content area,\n  and an action area for buttons. Use the `<h2>` tag for the header and the\n  `buttons` class for the action area. You can use the `paper-dialog-scrollable`\n  element (in its own repository) if you need a scrolling content area.\n\n  Use the `dialog-dismiss` and `dialog-confirm` attributes on interactive\n  controls to close the dialog. If the user dismisses the dialog with\n  `dialog-confirm`, the `closingReason` will update to include `confirmed:\n  true`.\n\n  ### Accessibility\n\n  This element has `role=\"dialog\"` by default. Depending on the context, it may\n  be more appropriate to override this attribute with `role=\"alertdialog\"`.\n\n  If `modal` is set, the element will prevent the focus from exiting the\n  element. It will also ensure that focus remains in the dialog.\n\n  @hero hero.svg\n  @demo demo/index.html\n  @polymerBehavior PaperDialogBehavior\n */\nexport const PaperDialogBehaviorImpl = {\n\n  hostAttributes: {'role': 'dialog', 'tabindex': '-1'},\n\n  properties: {\n\n    /**\n     * If `modal` is true, this implies `no-cancel-on-outside-click`,\n     * `no-cancel-on-esc-key` and `with-backdrop`.\n     */\n    modal: {type: Boolean, value: false},\n\n    __readied: {type: Boolean, value: false}\n\n  },\n\n  observers: ['_modalChanged(modal, __readied)'],\n\n  listeners: {'tap': '_onDialogClick'},\n\n  /**\n   * @return {void}\n   */\n  ready: function() {\n    // Only now these properties can be read.\n    this.__prevNoCancelOnOutsideClick = this.noCancelOnOutsideClick;\n    this.__prevNoCancelOnEscKey = this.noCancelOnEscKey;\n    this.__prevWithBackdrop = this.withBackdrop;\n    this.__readied = true;\n  },\n\n  _modalChanged: function(modal, readied) {\n    // modal implies noCancelOnOutsideClick, noCancelOnEscKey and withBackdrop.\n    // We need to wait for the element to be ready before we can read the\n    // properties values.\n    if (!readied) {\n      return;\n    }\n\n    if (modal) {\n      this.__prevNoCancelOnOutsideClick = this.noCancelOnOutsideClick;\n      this.__prevNoCancelOnEscKey = this.noCancelOnEscKey;\n      this.__prevWithBackdrop = this.withBackdrop;\n      this.noCancelOnOutsideClick = true;\n      this.noCancelOnEscKey = true;\n      this.withBackdrop = true;\n    } else {\n      // If the value was changed to false, let it false.\n      this.noCancelOnOutsideClick =\n          this.noCancelOnOutsideClick && this.__prevNoCancelOnOutsideClick;\n      this.noCancelOnEscKey =\n          this.noCancelOnEscKey && this.__prevNoCancelOnEscKey;\n      this.withBackdrop = this.withBackdrop && this.__prevWithBackdrop;\n    }\n  },\n\n  _updateClosingReasonConfirmed: function(confirmed) {\n    this.closingReason = this.closingReason || {};\n    this.closingReason.confirmed = confirmed;\n  },\n\n  /**\n   * Will dismiss the dialog if user clicked on an element with dialog-dismiss\n   * or dialog-confirm attribute.\n   */\n  _onDialogClick: function(event) {\n    // Search for the element with dialog-confirm or dialog-dismiss,\n    // from the root target until this (excluded).\n    var path = dom(event).path;\n    for (var i = 0, l = path.indexOf(this); i < l; i++) {\n      var target = path[i];\n      if (target.hasAttribute &&\n          (target.hasAttribute('dialog-dismiss') ||\n           target.hasAttribute('dialog-confirm'))) {\n        this._updateClosingReasonConfirmed(\n            target.hasAttribute('dialog-confirm'));\n        this.close();\n        event.stopPropagation();\n        break;\n      }\n    }\n  }\n\n};\n\n/** @polymerBehavior */\nexport const PaperDialogBehavior =\n    [IronOverlayBehavior, PaperDialogBehaviorImpl];\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\n/*\n### Styling\n\nThe following custom properties and mixins are available for styling.\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-dialog-background-color` | Dialog background color | `--primary-background-color`\n`--paper-dialog-color` | Dialog foreground color | `--primary-text-color`\n`--paper-dialog` | Mixin applied to the dialog | `{}`\n`--paper-dialog-title` | Mixin applied to the title (`<h2>`) element | `{}`\n`--paper-dialog-button-color` | Button area foreground color | `--default-primary-color`\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport '@polymer/iron-flex-layout/iron-flex-layout.js';\nimport '@polymer/paper-styles/default-theme.js';\nimport '@polymer/paper-styles/typography.js';\nimport '@polymer/paper-styles/shadow.js';\nconst $_documentContainer = document.createElement('template');\n$_documentContainer.setAttribute('style', 'display: none;');\n\n$_documentContainer.innerHTML = `<dom-module id=\"paper-dialog-shared-styles\">\n  <template>\n    <style>\n      :host {\n        display: block;\n        margin: 24px 40px;\n\n        background: var(--paper-dialog-background-color, var(--primary-background-color));\n        color: var(--paper-dialog-color, var(--primary-text-color));\n\n        @apply --paper-font-body1;\n        @apply --shadow-elevation-16dp;\n        @apply --paper-dialog;\n      }\n\n      :host > ::slotted(*) {\n        margin-top: 20px;\n        padding: 0 24px;\n      }\n\n      :host > ::slotted(.no-padding) {\n        padding: 0;\n      }\n\n      \n      :host > ::slotted(*:first-child) {\n        margin-top: 24px;\n      }\n\n      :host > ::slotted(*:last-child) {\n        margin-bottom: 24px;\n      }\n\n      /* In 1.x, this selector was \\`:host > ::content h2\\`. In 2.x <slot> allows\n      to select direct children only, which increases the weight of this\n      selector, so we have to re-define first-child/last-child margins below. */\n      :host > ::slotted(h2) {\n        position: relative;\n        margin: 0;\n\n        @apply --paper-font-title;\n        @apply --paper-dialog-title;\n      }\n\n      /* Apply mixin again, in case it sets margin-top. */\n      :host > ::slotted(h2:first-child) {\n        margin-top: 24px;\n        @apply --paper-dialog-title;\n      }\n\n      /* Apply mixin again, in case it sets margin-bottom. */\n      :host > ::slotted(h2:last-child) {\n        margin-bottom: 24px;\n        @apply --paper-dialog-title;\n      }\n\n      :host > ::slotted(.paper-dialog-buttons),\n      :host > ::slotted(.buttons) {\n        position: relative;\n        padding: 8px 8px 8px 24px;\n        margin: 0;\n\n        color: var(--paper-dialog-button-color, var(--primary-color));\n\n        @apply --layout-horizontal;\n        @apply --layout-end-justified;\n      }\n    </style>\n  </template>\n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer.content);\n","import \"@polymer/iron-icon/iron-icon\";\nimport \"@polymer/paper-dialog-behavior/paper-dialog-shared-styles\";\nimport \"@polymer/paper-icon-button/paper-icon-button\";\nimport { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nimport DialogMixin from \"../mixins/dialog-mixin\";\n\n/*\n * @appliesMixin DialogMixin\n */\nclass HaVoiceCommandDialog extends DialogMixin(PolymerElement) {\n  static get template() {\n    return html`\n      <style include=\"paper-dialog-shared-styles\">\n        iron-icon {\n          margin-right: 8px;\n        }\n\n        .content {\n          width: 450px;\n          min-height: 80px;\n          font-size: 18px;\n          padding: 16px;\n        }\n\n        .messages {\n          max-height: 50vh;\n          overflow: auto;\n        }\n\n        .messages::after {\n          content: \"\";\n          clear: both;\n          display: block;\n        }\n\n        .message {\n          clear: both;\n          margin: 8px 0;\n          padding: 8px;\n          border-radius: 15px;\n        }\n\n        .message.user {\n          margin-left: 24px;\n          float: right;\n          text-align: right;\n          border-bottom-right-radius: 0px;\n          background-color: var(--light-primary-color);\n          color: var(--primary-text-color);\n        }\n\n        .message.hass {\n          margin-right: 24px;\n          float: left;\n          border-bottom-left-radius: 0px;\n          background-color: var(--primary-color);\n          color: var(--text-primary-color);\n        }\n\n        .message.error {\n          background-color: var(--google-red-500);\n          color: var(--text-primary-color);\n        }\n\n        .icon {\n          text-align: center;\n        }\n\n        .icon paper-icon-button {\n          height: 52px;\n          width: 52px;\n        }\n\n        .interimTranscript {\n          color: darkgrey;\n        }\n\n        [hidden] {\n          display: none;\n        }\n\n        :host {\n          border-radius: 2px;\n        }\n\n        @media all and (max-width: 450px) {\n          :host {\n            margin: 0;\n            width: 100%;\n            max-height: calc(100% - 64px);\n\n            position: fixed !important;\n            bottom: 0px;\n            left: 0px;\n            right: 0px;\n            overflow: scroll;\n            border-bottom-left-radius: 0px;\n            border-bottom-right-radius: 0px;\n          }\n\n          .content {\n            width: auto;\n          }\n\n          .messages {\n            max-height: 68vh;\n          }\n        }\n      </style>\n\n      <div class=\"content\">\n        <div class=\"messages\" id=\"messages\">\n          <template is=\"dom-repeat\" items=\"[[_conversation]]\" as=\"message\">\n            <div class$=\"[[_computeMessageClasses(message)]]\">\n              [[message.text]]\n            </div>\n          </template>\n        </div>\n        <template is=\"dom-if\" if=\"[[results]]\">\n          <div class=\"messages\">\n            <div class=\"message user\">\n              <span>{{results.final}}</span>\n              <span class=\"interimTranscript\">[[results.interim]]</span> …\n            </div>\n          </div>\n        </template>\n        <div class=\"icon\" hidden$=\"[[results]]\">\n          <paper-icon-button\n            icon=\"hass:text-to-speech\"\n            on-click=\"startListening\"\n          ></paper-icon-button>\n        </div>\n      </div>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n      results: {\n        type: Object,\n        value: null,\n        observer: \"_scrollMessagesBottom\",\n      },\n\n      _conversation: {\n        type: Array,\n        value: function() {\n          return [{ who: \"hass\", text: \"How can I help?\" }];\n        },\n        observer: \"_scrollMessagesBottom\",\n      },\n    };\n  }\n\n  static get observers() {\n    return [\"dialogOpenChanged(opened)\"];\n  }\n\n  showDialog() {\n    this.opened = true;\n  }\n\n  initRecognition() {\n    /* eslint-disable new-cap */\n    this.recognition = new webkitSpeechRecognition();\n    /* eslint-enable new-cap */\n\n    this.recognition.onstart = function() {\n      this.results = {\n        final: \"\",\n        interim: \"\",\n      };\n    }.bind(this);\n    this.recognition.onerror = function() {\n      this.recognition.abort();\n      var text = this.results.final || this.results.interim;\n      this.results = null;\n      if (text === \"\") {\n        text = \"<Home Assistant did not hear anything>\";\n      }\n      this.push(\"_conversation\", { who: \"user\", text: text, error: true });\n    }.bind(this);\n    this.recognition.onend = function() {\n      // Already handled by onerror\n      if (this.results == null) {\n        return;\n      }\n      var text = this.results.final || this.results.interim;\n      this.results = null;\n      this.push(\"_conversation\", { who: \"user\", text: text });\n\n      this.hass.callApi(\"post\", \"conversation/process\", { text: text }).then(\n        function(response) {\n          this.push(\"_conversation\", {\n            who: \"hass\",\n            text: response.speech.plain.speech,\n          });\n        }.bind(this),\n        function() {\n          this.set(\n            [\"_conversation\", this._conversation.length - 1, \"error\"],\n            true\n          );\n        }.bind(this)\n      );\n    }.bind(this);\n\n    this.recognition.onresult = function(event) {\n      var oldResults = this.results;\n      var finalTranscript = \"\";\n      var interimTranscript = \"\";\n\n      for (var ind = event.resultIndex; ind < event.results.length; ind++) {\n        if (event.results[ind].isFinal) {\n          finalTranscript += event.results[ind][0].transcript;\n        } else {\n          interimTranscript += event.results[ind][0].transcript;\n        }\n      }\n\n      this.results = {\n        interim: interimTranscript,\n        final: oldResults.final + finalTranscript,\n      };\n    }.bind(this);\n  }\n\n  startListening() {\n    if (!this.recognition) {\n      this.initRecognition();\n    }\n\n    this.results = {\n      interim: \"\",\n      final: \"\",\n    };\n    this.recognition.start();\n  }\n\n  _scrollMessagesBottom() {\n    setTimeout(() => {\n      this.$.messages.scrollTop = this.$.messages.scrollHeight;\n\n      if (this.$.messages.scrollTop !== 0) {\n        this.$.dialog.fire(\"iron-resize\");\n      }\n    }, 10);\n  }\n\n  dialogOpenChanged(newVal) {\n    if (newVal) {\n      this.startListening();\n    } else if (!newVal && this.results) {\n      this.recognition.abort();\n    }\n  }\n\n  _computeMessageClasses(message) {\n    return \"message \" + message.who + (message.error ? \" error\" : \"\");\n  }\n}\n\ncustomElements.define(\"ha-voice-command-dialog\", HaVoiceCommandDialog);\n","import { dedupingMixin } from \"@polymer/polymer/lib/utils/mixin\";\nimport { PaperDialogBehavior } from \"@polymer/paper-dialog-behavior/paper-dialog-behavior\";\nimport { mixinBehaviors } from \"@polymer/polymer/lib/legacy/class\";\nimport { EventsMixin } from \"./events-mixin\";\n/**\n * @polymerMixin\n * @appliesMixin EventsMixin\n * @appliesMixin PaperDialogBehavior\n */\nexport default dedupingMixin(\n  (superClass) =>\n    class extends mixinBehaviors(\n      [EventsMixin, PaperDialogBehavior],\n      superClass\n    ) {\n      static get properties() {\n        return {\n          withBackdrop: {\n            type: Boolean,\n            value: true,\n          },\n        };\n      }\n    }\n);\n"],"sourceRoot":""}