{"version":3,"sources":["webpack:///./src/panels/lovelace/common/structs/struct.ts","webpack:///./src/panels/lovelace/common/structs/is-entity-id.ts","webpack:///./src/panels/lovelace/common/structs/is-icon.ts","webpack:///./src/panels/lovelace/editor/config-elements/hui-thermostat-card-editor.ts"],"names":["__webpack_require__","d","__webpack_exports__","struct","superstruct","types","entity-id","value","includes","icon","cardConfigStruct","type","entity","name","theme","HuiThermostatCardEditor","_decorate","customElement","_initialize","_LitElement","F","[object Object]","args","super","this","kind","decorators","property","key","config","_config","hass","html","configElementStyle","_name","_valueChanged","_entity","_theme","ev","target","configValue","Object","assign","fireEvent","LitElement"],"mappings":"oGAAAA,EAAAC,EAAAC,EAAA,sBAAAC,IAIO,MAAMA,EAASC,YAAY,CAChCC,MAAO,CACLC,YCNG,SAAoBC,GACzB,MAAqB,iBAAVA,EACF,iCAEJA,EAAMC,SAAS,MACX,qDDEPC,KEPG,SAAgBF,GACrB,MAAqB,iBAAVA,EACF,4BAEJA,EAAMC,SAAS,MACX,64CCeX,MAAME,EAAmBP,YAAO,CAC9BQ,KAAM,SACNC,OAAQ,SACRC,KAAM,UACNC,MAAO,YAIF,IAAMC,80LAAbC,CAAA,CADCC,YAAc,+BACf,SAAAC,EAAAC,GAAA,OAAAC,EADA,cAAAD,EAEgCE,eAAAC,GAAAC,SAAAD,GAAAJ,EAAAM,QADhCvB,EAAA,EAAAwB,KAAA,QAAAC,WAAA,CAEGC,eAFHC,IAAA,OAAArB,WAAA,IAAAkB,KAAA,QAAAC,WAAA,CAIGC,eAJHC,IAAA,UAAArB,WAAA,IAAAkB,KAAA,SAAAG,IAAA,YAAArB,MAME,SAAiBsB,GACfA,EAASnB,EAAiBmB,GAC1BL,KAAKM,QAAUD,IARnB,CAAAJ,KAAA,MAAAG,IAAA,UAAArB,MAWE,WACE,OAAOiB,KAAKM,QAASlB,QAAU,KAZnC,CAAAa,KAAA,MAAAG,IAAA,QAAArB,MAeE,WACE,OAAOiB,KAAKM,QAASjB,MAAQ,KAhBjC,CAAAY,KAAA,MAAAG,IAAA,SAAArB,MAmBE,WACE,OAAOiB,KAAKM,QAAShB,OAAS,YApBlC,CAAAW,KAAA,SAAAG,IAAA,SAAArB,MAuBE,WACE,OAAKiB,KAAKO,KAIHC;QACHC;;;;oBAIYT,KAAKU;0BACC;4BACEV,KAAKW;;;;qBAIZX,KAAKO;sBACJP,KAAKY;2BACA;;uBAEJZ,KAAKW;;;;qBAIPX,KAAKO;sBACJP,KAAKa;4BACC;8BACEb,KAAKW;;;;MAzBtBH,QAzBb,CAAAP,KAAA,SAAAG,IAAA,gBAAArB,MAyDE,SAAsB+B,GACpB,IAAKd,KAAKM,UAAYN,KAAKO,KACzB,OAEF,MAAMQ,EAASD,EAAGC,OAEdf,SAASe,EAAOC,iBAAmBD,EAAOhC,QAG1CgC,EAAOC,cACY,KAAjBD,EAAOhC,aACFiB,KAAKM,QAAQS,EAAOC,aAE3BhB,KAAKM,QAALW,OAAAC,OAAA,GAAoBlB,KAAKM,QAAzB,CAAkCT,CAACkB,EAAOC,aAAeD,EAAOhC,SAGpEoC,YAAUnB,KAAM,iBAAkB,CAAEK,OAAQL,KAAKM,gBAzERc","file":"chunk.c566215f4c9d6b595d4b.js","sourcesContent":["import { superstruct } from \"superstruct\";\nimport { isEntityId } from \"./is-entity-id\";\nimport { isIcon } from \"./is-icon\";\n\nexport const struct = superstruct({\n  types: {\n    \"entity-id\": isEntityId,\n    icon: isIcon,\n  },\n});\n","export function isEntityId(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"entity id should be a string\";\n  }\n  if (!value.includes(\".\")) {\n    return \"entity id should be in the format 'domain.entity'\";\n  }\n  return true;\n}\n","export function isIcon(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"icon should be a string\";\n  }\n  if (!value.includes(\":\")) {\n    return \"icon should be in the format 'mdi:icon'\";\n  }\n  return true;\n}\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n} from \"lit-element\";\nimport \"@polymer/paper-input/paper-input\";\n\nimport \"../../components/hui-theme-select-editor\";\nimport \"../../../../components/entity/ha-entity-picker\";\n\nimport { struct } from \"../../common/structs/struct\";\nimport { EntitiesEditorEvent, EditorTarget } from \"../types\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { LovelaceCardEditor } from \"../../types\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { configElementStyle } from \"./config-elements-style\";\nimport { ThermostatCardConfig } from \"../../cards/types\";\n\nconst cardConfigStruct = struct({\n  type: \"string\",\n  entity: \"string\",\n  name: \"string?\",\n  theme: \"string?\",\n});\n\n@customElement(\"hui-thermostat-card-editor\")\nexport class HuiThermostatCardEditor extends LitElement\n  implements LovelaceCardEditor {\n  @property() public hass?: HomeAssistant;\n\n  @property() private _config?: ThermostatCardConfig;\n\n  public setConfig(config: ThermostatCardConfig): void {\n    config = cardConfigStruct(config);\n    this._config = config;\n  }\n\n  get _entity(): string {\n    return this._config!.entity || \"\";\n  }\n\n  get _name(): string {\n    return this._config!.name || \"\";\n  }\n\n  get _theme(): string {\n    return this._config!.theme || \"default\";\n  }\n\n  protected render(): TemplateResult | void {\n    if (!this.hass) {\n      return html``;\n    }\n\n    return html`\n      ${configElementStyle}\n      <div class=\"card-config\">\n        <paper-input\n          label=\"Name\"\n          .value=\"${this._name}\"\n          .configValue=\"${\"name\"}\"\n          @value-changed=\"${this._valueChanged}\"\n        ></paper-input>\n        <div class=\"side-by-side\">\n          <ha-entity-picker\n            .hass=\"${this.hass}\"\n            .value=\"${this._entity}\"\n            .configValue=${\"entity\"}\n            domain-filter=\"climate\"\n            @change=\"${this._valueChanged}\"\n            allow-custom-entity\n          ></ha-entity-picker>\n          <hui-theme-select-editor\n            .hass=\"${this.hass}\"\n            .value=\"${this._theme}\"\n            .configValue=\"${\"theme\"}\"\n            @theme-changed=\"${this._valueChanged}\"\n          ></hui-theme-select-editor>\n        </div>\n      </div>\n    `;\n  }\n\n  private _valueChanged(ev: EntitiesEditorEvent): void {\n    if (!this._config || !this.hass) {\n      return;\n    }\n    const target = ev.target! as EditorTarget;\n\n    if (this[`_${target.configValue}`] === target.value) {\n      return;\n    }\n    if (target.configValue) {\n      if (target.value === \"\") {\n        delete this._config[target.configValue!];\n      } else {\n        this._config = { ...this._config, [target.configValue!]: target.value };\n      }\n    }\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-thermostat-card-editor\": HuiThermostatCardEditor;\n  }\n}\n"],"sourceRoot":""}