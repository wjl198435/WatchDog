{"version":3,"sources":["webpack:///./src/panels/lovelace/common/structs/struct.ts","webpack:///./src/panels/lovelace/common/structs/is-entity-id.ts","webpack:///./src/panels/lovelace/common/structs/is-icon.ts","webpack:///./src/panels/lovelace/editor/config-elements/config-elements-style.ts","webpack:///./src/panels/lovelace/editor/config-elements/hui-markdown-card-editor.ts"],"names":["__webpack_require__","d","__webpack_exports__","struct","superstruct","types","entity-id","value","includes","icon","configElementStyle","html","cardConfigStruct","type","title","content","HuiMarkdownCardEditor","_decorate","customElement","_initialize","_LitElement","F","[object Object]","args","super","this","kind","decorators","property","key","config","_config","hass","_title","_valueChanged","_content","ev","target","configValue","Object","assign","fireEvent","LitElement"],"mappings":"oGAAAA,EAAAC,EAAAC,EAAA,sBAAAC,IAIO,MAAMA,EAASC,YAAY,CAChCC,MAAO,CACLC,YCNG,SAAoBC,GACzB,MAAqB,iBAAVA,EACF,iCAEJA,EAAMC,SAAS,MACX,qDDEPC,KEPG,SAAgBF,GACrB,MAAqB,iBAAVA,EACF,4BAEJA,EAAMC,SAAS,MACX,gFCLXR,EAAAC,EAAAC,EAAA,sBAAAQ,IAEO,MAAMA,EAFbV,EAAA,GAEkCW;;;;;;;;;;;;;;;;w1CCgBlC,MAAMC,EAAmBT,YAAO,CAC9BU,KAAM,SACNC,MAAO,UACPC,QAAS,WAIJ,IAAMC,80LAAbC,CAAA,CADCC,YAAc,6BACf,SAAAC,EAAAC,GAAA,OAAAC,EADA,cAAAD,EAEgCE,eAAAC,GAAAC,SAAAD,GAAAJ,EAAAM,QADhCxB,EAAA,EAAAyB,KAAA,QAAAC,WAAA,CAEGC,eAFHC,IAAA,OAAAtB,WAAA,IAAAmB,KAAA,QAAAC,WAAA,CAIGC,eAJHC,IAAA,UAAAtB,WAAA,IAAAmB,KAAA,SAAAG,IAAA,YAAAtB,MAME,SAAiBuB,GACfA,EAASlB,EAAiBkB,GAC1BL,KAAKM,QAAUD,IARnB,CAAAJ,KAAA,MAAAG,IAAA,SAAAtB,MAWE,WACE,OAAOkB,KAAKM,QAASjB,OAAS,KAZlC,CAAAY,KAAA,MAAAG,IAAA,WAAAtB,MAeE,WACE,OAAOkB,KAAKM,QAAShB,SAAW,KAhBpC,CAAAW,KAAA,SAAAG,IAAA,SAAAtB,MAmBE,WACE,OAAKkB,KAAKO,KAIHrB;QACHD;;;;oBAIYe,KAAKQ;0BACC;4BACER,KAAKS;;;;oBAIbT,KAAKU;0BACC;4BACEV,KAAKS;;;;;;MAhBpBvB,QArBb,CAAAe,KAAA,SAAAG,IAAA,gBAAAtB,MA8CE,SAAsB6B,GACpB,IAAKX,KAAKM,UAAYN,KAAKO,KACzB,OAEF,MAAMK,EAASD,EAAGC,OAEdZ,SAASY,EAAOC,iBAAmBD,EAAO9B,QAG1C8B,EAAOC,cACY,KAAjBD,EAAO9B,aACFkB,KAAKM,QAAQM,EAAOC,aAE3Bb,KAAKM,QAALQ,OAAAC,OAAA,GACKf,KAAKM,QADV,CAEET,CAACe,EAAOC,aAAeD,EAAO9B,SAIpCkC,YAAUhB,KAAM,iBAAkB,CAAEK,OAAQL,KAAKM,gBAjEVW","file":"chunk.5d29b3581372e7a960ff.js","sourcesContent":["import { superstruct } from \"superstruct\";\nimport { isEntityId } from \"./is-entity-id\";\nimport { isIcon } from \"./is-icon\";\n\nexport const struct = superstruct({\n  types: {\n    \"entity-id\": isEntityId,\n    icon: isIcon,\n  },\n});\n","export function isEntityId(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"entity id should be a string\";\n  }\n  if (!value.includes(\".\")) {\n    return \"entity id should be in the format 'domain.entity'\";\n  }\n  return true;\n}\n","export function isIcon(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"icon should be a string\";\n  }\n  if (!value.includes(\":\")) {\n    return \"icon should be in the format 'mdi:icon'\";\n  }\n  return true;\n}\n","import { html } from \"lit-element\";\n\nexport const configElementStyle = html`\n  <style>\n    paper-toggle-button {\n      padding-top: 16px;\n    }\n    .side-by-side {\n      display: flex;\n    }\n    .side-by-side > * {\n      flex: 1;\n      padding-right: 4px;\n    }\n    .suffix {\n      margin: 0 8px;\n    }\n  </style>\n`;\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n} from \"lit-element\";\nimport \"@polymer/paper-input/paper-input\";\nimport \"@polymer/paper-input/paper-textarea\";\n\nimport { struct } from \"../../common/structs/struct\";\nimport { EntitiesEditorEvent, EditorTarget } from \"../types\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { LovelaceCardEditor } from \"../../types\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { configElementStyle } from \"./config-elements-style\";\nimport { MarkdownCardConfig } from \"../../cards/types\";\n\nconst cardConfigStruct = struct({\n  type: \"string\",\n  title: \"string?\",\n  content: \"string\",\n});\n\n@customElement(\"hui-markdown-card-editor\")\nexport class HuiMarkdownCardEditor extends LitElement\n  implements LovelaceCardEditor {\n  @property() public hass?: HomeAssistant;\n\n  @property() private _config?: MarkdownCardConfig;\n\n  public setConfig(config: MarkdownCardConfig): void {\n    config = cardConfigStruct(config);\n    this._config = config;\n  }\n\n  get _title(): string {\n    return this._config!.title || \"\";\n  }\n\n  get _content(): string {\n    return this._config!.content || \"\";\n  }\n\n  protected render(): TemplateResult | void {\n    if (!this.hass) {\n      return html``;\n    }\n\n    return html`\n      ${configElementStyle}\n      <div class=\"card-config\">\n        <paper-input\n          label=\"Title\"\n          .value=\"${this._title}\"\n          .configValue=\"${\"title\"}\"\n          @value-changed=\"${this._valueChanged}\"\n        ></paper-input>\n        <paper-textarea\n          label=\"Content\"\n          .value=\"${this._content}\"\n          .configValue=\"${\"content\"}\"\n          @value-changed=\"${this._valueChanged}\"\n          autocapitalize=\"none\"\n          autocomplete=\"off\"\n          spellcheck=\"false\"\n        ></paper-textarea>\n      </div>\n    `;\n  }\n\n  private _valueChanged(ev: EntitiesEditorEvent): void {\n    if (!this._config || !this.hass) {\n      return;\n    }\n    const target = ev.target! as EditorTarget;\n\n    if (this[`_${target.configValue}`] === target.value) {\n      return;\n    }\n    if (target.configValue) {\n      if (target.value === \"\") {\n        delete this._config[target.configValue!];\n      } else {\n        this._config = {\n          ...this._config,\n          [target.configValue!]: target.value,\n        };\n      }\n    }\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-markdown-card-editor\": HuiMarkdownCardEditor;\n  }\n}\n"],"sourceRoot":""}