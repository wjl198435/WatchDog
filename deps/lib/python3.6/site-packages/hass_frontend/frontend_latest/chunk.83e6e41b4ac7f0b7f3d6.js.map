{"version":3,"sources":["webpack:///./src/panels/lovelace/common/structs/struct.ts","webpack:///./src/panels/lovelace/common/structs/is-entity-id.ts","webpack:///./src/panels/lovelace/common/structs/is-icon.ts","webpack:///./src/panels/lovelace/editor/config-elements/hui-sensor-card-editor.ts"],"names":["__webpack_require__","d","__webpack_exports__","struct","superstruct","types","entity-id","value","includes","icon","cardConfigStruct","type","entity","name","graph","unit","detail","theme","hours_to_show","HuiSensorCardEditor","_decorate","customElement","_initialize","_LitElement","F","[object Object]","args","super","this","kind","decorators","property","key","config","_config","number","hass","html","graphs","configElementStyle","_name","_valueChanged","_entity","_icon","indexOf","_graph","map","_unit","_detail","_theme","_hours_to_show","ev","target","configValue","isNaN","Number","Object","assign","fireEvent","LitElement"],"mappings":"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","file":"chunk.83e6e41b4ac7f0b7f3d6.js","sourcesContent":["import { superstruct } from \"superstruct\";\nimport { isEntityId } from \"./is-entity-id\";\nimport { isIcon } from \"./is-icon\";\n\nexport const struct = superstruct({\n  types: {\n    \"entity-id\": isEntityId,\n    icon: isIcon,\n  },\n});\n","export function isEntityId(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"entity id should be a string\";\n  }\n  if (!value.includes(\".\")) {\n    return \"entity id should be in the format 'domain.entity'\";\n  }\n  return true;\n}\n","export function isIcon(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"icon should be a string\";\n  }\n  if (!value.includes(\":\")) {\n    return \"icon should be in the format 'mdi:icon'\";\n  }\n  return true;\n}\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n} from \"lit-element\";\nimport \"@polymer/paper-input/paper-input\";\nimport \"@polymer/paper-dropdown-menu/paper-dropdown-menu\";\nimport \"@polymer/paper-item/paper-item\";\nimport \"@polymer/paper-listbox/paper-listbox\";\n\nimport \"../../components/hui-theme-select-editor\";\nimport \"../../../../components/entity/ha-entity-picker\";\n\nimport { struct } from \"../../common/structs/struct\";\nimport { EntitiesEditorEvent, EditorTarget } from \"../types\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { LovelaceCardEditor } from \"../../types\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { configElementStyle } from \"./config-elements-style\";\nimport { SensorCardConfig } from \"../../cards/types\";\n\nconst cardConfigStruct = struct({\n  type: \"string\",\n  entity: \"string?\",\n  name: \"string?\",\n  icon: \"string?\",\n  graph: \"string?\",\n  unit: \"string?\",\n  detail: \"number?\",\n  theme: \"string?\",\n  hours_to_show: \"number?\",\n});\n\n@customElement(\"hui-sensor-card-editor\")\nexport class HuiSensorCardEditor extends LitElement\n  implements LovelaceCardEditor {\n  @property() public hass?: HomeAssistant;\n\n  @property() private _config?: SensorCardConfig;\n\n  public setConfig(config: SensorCardConfig): void {\n    config = cardConfigStruct(config);\n    this._config = config;\n  }\n\n  get _entity(): string {\n    return this._config!.entity || \"\";\n  }\n\n  get _name(): string {\n    return this._config!.name || \"\";\n  }\n\n  get _icon(): string {\n    return this._config!.icon || \"\";\n  }\n\n  get _graph(): string {\n    return this._config!.graph || \"none\";\n  }\n\n  get _unit(): string {\n    return this._config!.unit || \"\";\n  }\n\n  get _detail(): number | string {\n    return this._config!.number || \"1\";\n  }\n\n  get _theme(): string {\n    return this._config!.theme || \"default\";\n  }\n\n  get _hours_to_show(): number | string {\n    return this._config!.hours_to_show || \"24\";\n  }\n\n  protected render(): TemplateResult | void {\n    if (!this.hass) {\n      return html``;\n    }\n\n    const graphs = [\"line\", \"none\"];\n\n    return html`\n      ${configElementStyle}\n      <div class=\"card-config\">\n        <div class=\"side-by-side\">\n          <paper-input\n            label=\"Name\"\n            .value=\"${this._name}\"\n            .configValue=\"${\"name\"}\"\n            @value-changed=\"${this._valueChanged}\"\n          ></paper-input>\n          <ha-entity-picker\n            .hass=\"${this.hass}\"\n            .value=\"${this._entity}\"\n            .configValue=${\"entity\"}\n            domain-filter=\"sensor\"\n            @change=\"${this._valueChanged}\"\n            allow-custom-entity\n          ></ha-entity-picker>\n        </div>\n        <div class=\"side-by-side\">\n          <paper-input\n            label=\"Icon\"\n            .value=\"${this._icon}\"\n            .configValue=\"${\"icon\"}\"\n            @value-changed=\"${this._valueChanged}\"\n          ></paper-input>\n          <paper-dropdown-menu\n            label=\"Graph Type\"\n            .configValue=\"${\"graph\"}\"\n            @value-changed=\"${this._valueChanged}\"\n          >\n            <paper-listbox\n              slot=\"dropdown-content\"\n              .selected=\"${graphs.indexOf(this._graph)}\"\n            >\n              ${graphs.map((graph) => {\n                return html`\n                  <paper-item>${graph}</paper-item>\n                `;\n              })}\n            </paper-listbox>\n          </paper-dropdown-menu>\n        </div>\n        <div class=\"side-by-side\">\n          <paper-input\n            label=\"Units\"\n            .value=\"${this._unit}\"\n            .configValue=\"${\"unit\"}\"\n            @value-changed=\"${this._valueChanged}\"\n          ></paper-input>\n          <paper-input\n            label=\"Graph Detail\"\n            type=\"number\"\n            .value=\"${this._detail}\"\n            .configValue=\"${\"detail\"}\"\n            @value-changed=\"${this._valueChanged}\"\n          ></paper-input>\n        </div>\n        <div class=\"side-by-side\">\n          <hui-theme-select-editor\n            .hass=\"${this.hass}\"\n            .value=\"${this._theme}\"\n            .configValue=\"${\"theme\"}\"\n            @theme-changed=\"${this._valueChanged}\"\n          ></hui-theme-select-editor>\n          <paper-input\n            label=\"Hours To Show\"\n            type=\"number\"\n            .value=\"${this._hours_to_show}\"\n            .configValue=\"${\"hours_to_show\"}\"\n            @value-changed=\"${this._valueChanged}\"\n          ></paper-input>\n        </div>\n      </div>\n    `;\n  }\n\n  private _valueChanged(ev: EntitiesEditorEvent): void {\n    if (!this._config || !this.hass) {\n      return;\n    }\n    const target = ev.target! as EditorTarget;\n\n    if (this[`_${target.configValue}`] === target.value) {\n      return;\n    }\n    if (target.configValue) {\n      if (\n        target.value === \"\" ||\n        (target.type === \"number\" && isNaN(Number(target.value)))\n      ) {\n        delete this._config[target.configValue!];\n      } else {\n        let value: any = target.value;\n        if (target.type === \"number\") {\n          value = Number(value);\n        }\n        this._config = { ...this._config, [target.configValue!]: value };\n      }\n    }\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-sensor-card-editor\": HuiSensorCardEditor;\n  }\n}\n"],"sourceRoot":""}