{"version":3,"sources":["webpack:///./src/panels/lovelace/common/compute-unused-entities.ts","webpack:///./src/panels/lovelace/hui-unused-entities.ts"],"names":["EXCLUDED_DOMAINS","addFromAction","entities","actionConfig","action","service_data","entity_id","entityIds","Array","isArray","entityId","add","addEntityId","entity","camera_image","tap_action","hold_action","addEntities","obj","forEach","card","cards","elements","badges","badge","computeUnusedEntities","hass","config","usedEntities","Set","views","view","computeUsedEntities","Object","keys","states","filter","has","includes","split","sort","__webpack_require__","d","__webpack_exports__","hui_unused_entities_HuiUnusedEntities","HuiUnusedEntities","LitElement","[object Object]","args","super","this","_hass","_config","_elements","properties","element","_createElements","setConfig","render","html","renderStyle","domains","domain","computeDomain","push","map","el","createCardElement","type","title","localize","secondary_info","show_header_toggle","customElements","define"],"mappings":"gHAGA,MAAMA,EAAmB,CAAC,QAEpBC,EAAgB,CAACC,EAAuBC,KAC5C,GAC0B,iBAAxBA,EAAaC,SACZD,EAAaE,eACbF,EAAaE,aAAaC,UAE3B,OAEF,IAAIC,EAAYJ,EAAaE,aAAaC,UACrCE,MAAMC,QAAQF,KACjBA,EAAY,CAACA,IAEf,IAAK,MAAMG,KAAYH,EACrBL,EAASS,IAAID,IAIXE,EAAc,CAACV,EAAuBW,KACpB,iBAAXA,GAKPA,EAAOA,QACTX,EAASS,IAAIE,EAAOA,QAElBA,EAAOC,cACTZ,EAASS,IAAIE,EAAOC,cAElBD,EAAOE,YACTd,EAAcC,EAAUW,EAAOE,YAE7BF,EAAOG,aACTf,EAAcC,EAAUW,EAAOG,cAd/Bd,EAASS,IAAIE,IAkBXI,EAAc,CAACf,EAAuBgB,KACtCA,EAAIL,QACND,EAAYV,EAAUgB,EAAIL,QAExBK,EAAIhB,UACNgB,EAAIhB,SAASiB,QAASN,GAAWD,EAAYV,EAAUW,IAErDK,EAAIE,MACNH,EAAYf,EAAUgB,EAAIE,MAExBF,EAAIG,OACNH,EAAIG,MAAMF,QAASC,GAASH,EAAYf,EAAUkB,IAEhDF,EAAII,UACNJ,EAAII,SAASH,QAASC,GAASH,EAAYf,EAAUkB,IAEnDF,EAAIK,QACNL,EAAIK,OAAOJ,QAASK,GAAUZ,EAAYV,EAAUsB,KAU3CC,EAAwB,CACnCC,EACAC,KAEA,MAAMC,EAVqBD,KAC3B,MAAMzB,EAAW,IAAI2B,IAErB,OADAF,EAAOG,MAAMX,QAASY,GAASd,EAAYf,EAAU6B,IAC9C7B,GAOc8B,CAAoBL,GACzC,OAAOM,OAAOC,KAAKR,EAAKS,QACrBC,OACEvB,IACEe,EAAaS,IAAIxB,KACjBb,EAAiBsC,SAASzB,EAAO0B,MAAM,IAAK,GAAG,KAEnDC,8BChFLC,EAAAC,EAAAC,EAAA,sCAAAC,IAgBO,MAAMC,UAA0BC,IAAWC,eAAAC,GAAAC,SAAAD,GAAAE,KACxCC,WADwC,EAAAD,KAExCE,aAFwC,EAAAF,KAGxCG,eAHwC,EAKhDC,wBACE,MAAO,CACLH,MAAO,GACPC,QAAS,IAIb1B,SAASA,GAEP,GADAwB,KAAKC,MAAQzB,EACRwB,KAAKG,UAIV,IAAK,MAAME,KAAWL,KAAKG,UACzBE,EAAQ7B,KAAOwB,KAAKC,WAJpBD,KAAKM,kBAQFC,UAAU9B,GACfuB,KAAKE,QAAUzB,EACfuB,KAAKM,kBAGGE,SACR,OAAKR,KAAKE,SAAYF,KAAKC,MAIpBQ;QACHT,KAAKU;uBACUV,KAAKG;MALfM,MASHC,cACN,OAAOD;;;;;;;;;;;;;MAgBDH,kBACN,IAAKN,KAAKC,MACR,OAEF,MAAMU,EAA0C,GAChDpC,EAAsByB,KAAKC,MAAOD,KAAKE,SAAUjC,QAASN,IACxD,MAAMiD,EAASC,YAAclD,GAEvBiD,KAAUD,IACdA,EAAQC,GAAU,IAEpBD,EAAQC,GAAQE,KAAKnD,KAEvBqC,KAAKG,UAAYpB,OAAOC,KAAK2B,GAC1BrB,OACAyB,IAAKH,IACJ,MAAMI,EAAKC,YAAkB,CAC3BC,KAAM,WACNC,MAAOnB,KAAKC,MAAOmB,mBAAmBR,MAAaA,EACnD5D,SAAU2D,EAAQC,GAAQG,IAAKpD,IAAD,CAC5BA,SACA0D,eAAgB,eAElBC,oBAAoB,IAGtB,OADAN,EAAGxC,KAAOwB,KAAKC,MACRe,KAUfO,eAAeC,OAAO,sBAAuB7B","file":"chunk.cb43b7856db3ebed4597.js","sourcesContent":["import { LovelaceConfig, ActionConfig } from \"../../../data/lovelace\";\nimport { HomeAssistant } from \"../../../types\";\n\nconst EXCLUDED_DOMAINS = [\"zone\"];\n\nconst addFromAction = (entities: Set<string>, actionConfig: ActionConfig) => {\n  if (\n    actionConfig.action !== \"call-service\" ||\n    !actionConfig.service_data ||\n    !actionConfig.service_data.entity_id\n  ) {\n    return;\n  }\n  let entityIds = actionConfig.service_data.entity_id;\n  if (!Array.isArray(entityIds)) {\n    entityIds = [entityIds];\n  }\n  for (const entityId of entityIds) {\n    entities.add(entityId);\n  }\n};\n\nconst addEntityId = (entities: Set<string>, entity) => {\n  if (typeof entity === \"string\") {\n    entities.add(entity);\n    return;\n  }\n\n  if (entity.entity) {\n    entities.add(entity.entity);\n  }\n  if (entity.camera_image) {\n    entities.add(entity.camera_image);\n  }\n  if (entity.tap_action) {\n    addFromAction(entities, entity.tap_action);\n  }\n  if (entity.hold_action) {\n    addFromAction(entities, entity.hold_action);\n  }\n};\n\nconst addEntities = (entities: Set<string>, obj) => {\n  if (obj.entity) {\n    addEntityId(entities, obj.entity);\n  }\n  if (obj.entities) {\n    obj.entities.forEach((entity) => addEntityId(entities, entity));\n  }\n  if (obj.card) {\n    addEntities(entities, obj.card);\n  }\n  if (obj.cards) {\n    obj.cards.forEach((card) => addEntities(entities, card));\n  }\n  if (obj.elements) {\n    obj.elements.forEach((card) => addEntities(entities, card));\n  }\n  if (obj.badges) {\n    obj.badges.forEach((badge) => addEntityId(entities, badge));\n  }\n};\n\nconst computeUsedEntities = (config) => {\n  const entities = new Set<string>();\n  config.views.forEach((view) => addEntities(entities, view));\n  return entities;\n};\n\nexport const computeUnusedEntities = (\n  hass: HomeAssistant,\n  config: LovelaceConfig\n): string[] => {\n  const usedEntities = computeUsedEntities(config);\n  return Object.keys(hass.states)\n    .filter(\n      (entity) =>\n        !usedEntities.has(entity) &&\n        !EXCLUDED_DOMAINS.includes(entity.split(\".\", 1)[0])\n    )\n    .sort();\n};\n","import {\n  html,\n  LitElement,\n  PropertyDeclarations,\n  TemplateResult,\n} from \"lit-element\";\n\nimport \"./cards/hui-entities-card\";\n\nimport { computeUnusedEntities } from \"./common/compute-unused-entities\";\nimport { createCardElement } from \"./common/create-card-element\";\nimport { HomeAssistant } from \"../../types\";\nimport { LovelaceCard } from \"./types\";\nimport { LovelaceConfig } from \"../../data/lovelace\";\nimport computeDomain from \"../../common/entity/compute_domain\";\n\nexport class HuiUnusedEntities extends LitElement {\n  private _hass?: HomeAssistant;\n  private _config?: LovelaceConfig;\n  private _elements?: LovelaceCard[];\n\n  static get properties(): PropertyDeclarations {\n    return {\n      _hass: {},\n      _config: {},\n    };\n  }\n\n  set hass(hass: HomeAssistant) {\n    this._hass = hass;\n    if (!this._elements) {\n      this._createElements();\n      return;\n    }\n    for (const element of this._elements) {\n      element.hass = this._hass;\n    }\n  }\n\n  public setConfig(config: LovelaceConfig): void {\n    this._config = config;\n    this._createElements();\n  }\n\n  protected render(): TemplateResult | void {\n    if (!this._config || !this._hass) {\n      return html``;\n    }\n\n    return html`\n      ${this.renderStyle()}\n      <div id=\"root\">${this._elements}</div>\n    `;\n  }\n\n  private renderStyle(): TemplateResult {\n    return html`\n      <style>\n        #root {\n          padding: 4px;\n          display: flex;\n          flex-wrap: wrap;\n        }\n        hui-entities-card {\n          max-width: 400px;\n          padding: 4px;\n          flex: 1 auto;\n        }\n      </style>\n    `;\n  }\n\n  private _createElements(): void {\n    if (!this._hass) {\n      return;\n    }\n    const domains: { [domain: string]: string[] } = {};\n    computeUnusedEntities(this._hass, this._config!).forEach((entity) => {\n      const domain = computeDomain(entity);\n\n      if (!(domain in domains)) {\n        domains[domain] = [];\n      }\n      domains[domain].push(entity);\n    });\n    this._elements = Object.keys(domains)\n      .sort()\n      .map((domain) => {\n        const el = createCardElement({\n          type: \"entities\",\n          title: this._hass!.localize(`domain.${domain}`) || domain,\n          entities: domains[domain].map((entity) => ({\n            entity,\n            secondary_info: \"entity-id\",\n          })),\n          show_header_toggle: false,\n        });\n        el.hass = this._hass;\n        return el;\n      });\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-unused-entities\": HuiUnusedEntities;\n  }\n}\ncustomElements.define(\"hui-unused-entities\", HuiUnusedEntities);\n"],"sourceRoot":""}