{"version":3,"sources":["webpack:///./src/common/dom/setup-leaflet-map.ts","webpack:///./src/data/core.ts","webpack:///./src/components/timezone-datalist.ts","webpack:///./src/components/map/ha-location-editor.ts","webpack:///./src/onboarding/onboarding-core-config.ts"],"names":["__webpack_require__","d","__webpack_exports__","setupLeafletMap","async","mapElement","darkMode","parentNode","Error","Leaflet","e","then","t","bind","Icon","Default","imagePath","map","style","document","createElement","setAttribute","appendChild","setView","tileLayer","Browser","retina","attribution","subdomains","minZoom","maxZoom","addTo","saveCoreConfig","detectCoreConfig","hass","values","callWS","Object","assign","type","createTimezoneListEl","google_timezones_json__WEBPACK_IMPORTED_MODULE_0__","google_timezones_json__WEBPACK_IMPORTED_MODULE_0___default","n","list","id","keys","timezones","forEach","key","option","value","innerHTML","customElement","LocationEditor","_LitElement","[object Object]","args","super","_initialize","this","property","_leafletMap","location","fitZoom","html","changedProps","_get","_getPrototypeOf","prototype","call","_initMap","_updateMarker","_ignoreFitToMap","fitMap","undefined","shadowRoot","querySelector","_mapEl","addEventListener","ev","_updateLocation","latlng","invalidateSize","lat","lng","fireEvent","bubbles","_locationMarker","setLatLng","marker","draggable","target","getLatLng","addLayer","remove","css","LitElement","amsterdam","OnboardingCoreConfig","onboardingLocalize","user","name","_working","_nameValue","_handleChange","_detect","_locationValue","_locationChanged","localize","_timeZoneValue","_elevationValue","_unitSystemValue","_unitSystemChanged","_save","setTimeout","focus","keyCode","inputElement","_name","_location","_elevation","_timeZone","_unitSystem","currentTarget","detail","latitude","longitude","Number","elevation","String","unit_system","time_zone","err","alert","message","preventDefault","location_name","result","onboardCoreConfigStep"],"mappings":"uFAEAA,EAAAC,EAAAC,EAAA,sBAAAC,IAGO,MAAMA,EAAkBC,MAC7BC,EACAC,GAAW,KAEX,IAAKD,EAAWE,WACd,MAAM,IAAIC,MAAM,oDAGlB,MAAMC,QAAiBT,EAAAU,EAAA,KAAAC,KAAAX,EAAAY,EAAAC,KAAA,aACvBJ,EAAQK,KAAKC,QAAQC,UAAY,iCAEjC,MAAMC,EAAMR,EAAQQ,IAAIZ,GAClBa,EAAQC,SAASC,cAAc,QAkBrC,OAjBAF,EAAMG,aAAa,OAAQ,sCAC3BH,EAAMG,aAAa,MAAO,cAC1BhB,EAAWE,WAAWe,YAAYJ,GAClCD,EAAIM,QAAQ,CAAC,WAAY,WAAY,IACrCd,EAAQe,+CAEJlB,EAAW,WAAa,0BACXG,EAAQgB,QAAQC,OAAS,UAAY,SACpD,CACEC,YACE,wIACFC,WAAY,OACZC,QAAS,EACTC,QAAS,KAEXC,MAAMd,GAED,CAACA,EAAKR,sCCvBfT,EAAAC,EAAAC,EAAA,sBAAA8B,IAAAhC,EAAAC,EAAAC,EAAA,sBAAA+B,IAAO,MAAMD,EAAiB,CAC5BE,EACAC,IAEAD,EAAKE,OAALC,OAAAC,OAAA,CACEC,KAAM,sBACHJ,IAGMF,EAAoBC,GAC/BA,EAAKE,OAAoC,CACvCG,KAAM,yDCvBVvC,EAAAC,EAAAC,EAAA,sBAAAsC,IAAA,IAAAC,EAAAzC,EAAA,KAAA0C,EAAA1C,EAAA2C,EAAAF,GAEO,MAAMD,EAAuB,KAClC,MAAMI,EAAOzB,SAASC,cAAc,YAQpC,OAPAwB,EAAKC,GAAK,YACVR,OAAOS,KAAKC,KAAWC,QAASC,IAC9B,MAAMC,EAAS/B,SAASC,cAAc,UACtC8B,EAAOC,MAAQF,EACfC,EAAOE,UAAYL,IAAUE,GAC7BL,EAAKtB,YAAY4B,KAEZN,s/OCMRS,YAAc,qCAAf,MACMC,UADNC,EACwCC,eAAAC,GAAAC,SAAAD,GAAAE,EAAAC,gBAAlCN,+BACHO,kFACgB,kOASjB,WACOD,KAAKE,aAAgBF,KAAKG,UAG/BH,KAAKE,YAAYvC,QAAQqC,KAAKG,SAAUH,KAAKI,6CAG/C,WACE,OAAOC;;gDAKT,SAAuBC,GACrBC,EAAAC,EAzBEd,EAyBFe,WAAA,eAAAT,MAAAU,KAAAV,KAAmBM,GACnBN,KAAKW,gDAGP,SAAkBL,GAChBC,EAAAC,EA9BEd,EA8BFe,WAAA,UAAAT,MAAAU,KAAAV,KAAcM,GAGTN,KAAKnD,UAIVmD,KAAKY,gBACAZ,KAAKa,iBAAmBb,KAAKa,kBAAoBb,KAAKG,UACzDH,KAAKc,SAEPd,KAAKa,qBAAkBE,oCAGzB,WACE,OAAOf,KAAKgB,WAAYC,cAAc,6CAGxCzE,kBACGwD,KAAKE,YAAaF,KAAKnD,eAAiBN,YAAgByD,KAAKkB,QAC9DlB,KAAKE,YAAYiB,iBACf,QAECC,GAA0BpB,KAAKqB,gBAAgBD,EAAGE,SAErDtB,KAAKY,gBACLZ,KAAKc,SACLd,KAAKE,YAAYqB,8DAGnB,SAAwBD,GACtBtB,KAAKG,SAAWH,KAAKa,gBAAkB,CAACS,EAAOE,IAAKF,EAAOG,KAC3DC,YAAU1B,KAAM,cAAUe,EAAW,CAAEY,SAAS,+CAGlD,WACO3B,KAAKG,SAQNH,KAAK4B,gBACP5B,KAAK4B,gBAAgBC,UAAU7B,KAAKG,WAGtCH,KAAK4B,gBAAkB5B,KAAKnD,QAASiF,OAAO9B,KAAKG,SAAU,CACzD4B,WAAW,IAEb/B,KAAK4B,gBAAgBT,iBACnB,UAECC,GAAqBpB,KAAKqB,gBAAgBD,EAAGY,OAAOC,cAEvDjC,KAAKE,YAAagC,SAASlC,KAAK4B,kBAnB1B5B,KAAK4B,kBACP5B,KAAK4B,gBAAgBO,SACrBnC,KAAK4B,qBAAkBb,8CAoB7B,WACE,OAAOqB;;;;;;;;WA1FkBC,4uDCU7B,MAAMC,EAAY,CAAC,WAAY,m1LAE9B7C,YAAc,yCAAf,MACM8C,UADN5C,EAC8CC,eAAAC,GAAAC,SAAAD,GAAAE,EAAAC,gBAAxCuC,+BACHtC,kEACAA,gFAEAA,yCAA8B,6BAE9BA,mEACAA,uEACAA,wEACAA,yEACAA,+EAED,WACE,OAAOI;;UAEDL,KAAKwC,mBACL,6CACA,OACAxC,KAAK1B,KAAKmE,KAAMC;;;;iBAKT1C,KAAKwC,mBACZ;;oBAGUxC,KAAK2C;iBACR3C,KAAK4C;yBACG5C,KAAK6C;;;;;YAKlB7C,KAAKwC,mBACL;;;;;cAMExC,KAAKwC,mBACL;;+BAGiBxC,KAAK8C;cACtB9C,KAAKwC,mBACL;;;;;;;;sBASQxC,KAAK+C;qBACN;oBACD/C,KAAKgD;;;;;;;mBAONhD,KAAK1B,KAAK2E,SACjB;;;sBAIUjD,KAAK2C;mBACR3C,KAAKkD;2BACGlD,KAAK6C;;;;;mBAKb7C,KAAK1B,KAAK2E,SACjB;;;sBAIUjD,KAAK2C;mBACR3C,KAAKmD;2BACGnD,KAAK6C;;;cAGlB7C,KAAK1B,KAAK2E,SACV;;;;;;;YAQFjD,KAAK1B,KAAK2E,SACV;;;;sBAKUjD,KAAKoD;8BACGpD,KAAKqD;;wDAEqBrD,KAAK2C;cAC/C3C,KAAK1B,KAAK2E,SACV;;gBAGEjD,KAAK1B,KAAK2E,SACV;;;0DAI0CjD,KAAK2C;cACjD3C,KAAK1B,KAAK2E,SACV;;gBAGEjD,KAAK1B,KAAK2E,SACV;;;;;;;6BAQajD,KAAKsD,mBAAmBtD,KAAK2C;YAC9C3C,KAAKwC,mBACL;;;gDAOV,SAAuBlC,GACrBC,EAAAC,EA3IE+B,EA2IF9B,WAAA,eAAAT,MAAAU,KAAAV,KAAmBM,GACnBiD,WACE,IAAMvD,KAAKgB,WAAYC,cAAc,eAAgBuC,QACrD,KAEFxD,KAAKmB,iBAAiB,WAAaC,IACd,KAAfA,EAAGqC,SACLzD,KAAKsD,MAAMlC,KAGDpB,KAAKgB,WAAYC,cAC7B,mBAEIyC,aAAahG,YAAYkB,oDAGjC,WACE,YAAsBmC,IAAff,KAAK2D,MACR3D,KAAK2D,MACL3D,KAAKwC,mBACH,uGAIR,WACE,OAAOxC,KAAK4D,WAAatB,4CAG3B,WACE,YAA2BvB,IAApBf,KAAK6D,WAA2B7D,KAAK6D,WAAa,2CAG3D,WACE,OAAO7D,KAAK8D,qDAGd,WACE,YAA4B/C,IAArBf,KAAK+D,YAA4B/D,KAAK+D,YAAc,oDAG7D,SAAsB3C,GACpB,MAAMY,EAASZ,EAAG4C,cAClBhE,SAASgC,EAAOU,QAAUV,EAAOzC,oDAGnC,SAAyB6B,GACvBpB,KAAK4D,UAAYxC,EAAG4C,cAAc7D,yDAGpC,SACEiB,GAEApB,KAAK+D,YAAc3C,EAAG6C,OAAO1E,2CAG/B/C,iBACEwD,KAAK2C,UAAW,EAChB,IACE,MAAMpE,QAAeF,YAAiB2B,KAAK1B,MACvCC,EAAO2F,UAAY3F,EAAO4F,YAC5BnE,KAAK4D,UAAY,CAACQ,OAAO7F,EAAO2F,UAAWE,OAAO7F,EAAO4F,aAEvD5F,EAAO8F,YACTrE,KAAK6D,WAAaS,OAAO/F,EAAO8F,YAE9B9F,EAAOgG,cACTvE,KAAK+D,YAAcxF,EAAOgG,aAExBhG,EAAOiG,YACTxE,KAAK8D,UAAYvF,EAAOiG,WAE1B,MAAOC,GACPC,gDAAgDD,EAAIE,WAftD,QAiBE3E,KAAK2C,UAAW,sCAIpBnG,eAAoB4E,GAClBA,EAAGwD,iBACH5E,KAAK2C,UAAW,EAChB,IACE,MAAMxC,EAAWH,KAAK+C,qBAChB3E,YAAe4B,KAAK1B,KAAM,CAC9BuG,cAAe7E,KAAK4C,WACpBsB,SAAU/D,EAAS,GACnBgE,UAAWhE,EAAS,GACpBkE,UAAWD,OAAOpE,KAAKmD,iBACvBoB,YAAavE,KAAKoD,iBAClBoB,UAAWxE,KAAKkD,gBAAkB,QAEpC,MAAM4B,QAAeC,YAAsB/E,KAAK1B,MAChDoD,YAAU1B,KAAM,kBAAmB,CACjCrB,KAAM,cACNmG,WAEF,MAAOL,GACPzE,KAAK2C,UAAW,EAChB+B,MAAM,oDAIV,WACE,OAAOtC;;;;;;;;;;;;;;;;;;;;;;;;;;;WAlPwBC","file":"chunk.617893ef89c2d98e166d.js","sourcesContent":["import { Map } from \"leaflet\";\n\n// Sets up a Leaflet map on the provided DOM element\nexport type LeafletModuleType = typeof import(\"leaflet\");\n\nexport const setupLeafletMap = async (\n  mapElement: HTMLElement,\n  darkMode = false\n): Promise<[Map, LeafletModuleType]> => {\n  if (!mapElement.parentNode) {\n    throw new Error(\"Cannot setup Leaflet map on disconnected element\");\n  }\n  // tslint:disable-next-line\n  const Leaflet = (await import(/* webpackChunkName: \"leaflet\" */ \"leaflet\")) as LeafletModuleType;\n  Leaflet.Icon.Default.imagePath = \"/static/images/leaflet/images/\";\n\n  const map = Leaflet.map(mapElement);\n  const style = document.createElement(\"link\");\n  style.setAttribute(\"href\", \"/static/images/leaflet/leaflet.css\");\n  style.setAttribute(\"rel\", \"stylesheet\");\n  mapElement.parentNode.appendChild(style);\n  map.setView([52.3731339, 4.8903147], 13);\n  Leaflet.tileLayer(\n    `https://{s}.basemaps.cartocdn.com/${\n      darkMode ? \"dark_all\" : \"light_all\"\n    }/{z}/{x}/{y}${Leaflet.Browser.retina ? \"@2x.png\" : \".png\"}`,\n    {\n      attribution:\n        '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a>, &copy; <a href=\"https://carto.com/attributions\">CARTO</a>',\n      subdomains: \"abcd\",\n      minZoom: 0,\n      maxZoom: 20,\n    }\n  ).addTo(map);\n\n  return [map, Leaflet];\n};\n","import { HomeAssistant } from \"../types\";\nimport { HassConfig } from \"home-assistant-js-websocket\";\n\nexport interface ConfigUpdateValues {\n  location_name: string;\n  latitude: number;\n  longitude: number;\n  elevation: number;\n  unit_system: \"metric\" | \"imperial\";\n  time_zone: string;\n}\n\nexport const saveCoreConfig = (\n  hass: HomeAssistant,\n  values: Partial<ConfigUpdateValues>\n) =>\n  hass.callWS<HassConfig>({\n    type: \"config/core/update\",\n    ...values,\n  });\n\nexport const detectCoreConfig = (hass: HomeAssistant) =>\n  hass.callWS<Partial<ConfigUpdateValues>>({\n    type: \"config/core/detect\",\n  });\n","import timezones from \"google-timezones-json\";\n\nexport const createTimezoneListEl = () => {\n  const list = document.createElement(\"datalist\");\n  list.id = \"timezones\";\n  Object.keys(timezones).forEach((key) => {\n    const option = document.createElement(\"option\");\n    option.value = key;\n    option.innerHTML = timezones[key];\n    list.appendChild(option);\n  });\n  return list;\n};\n","import {\n  LitElement,\n  property,\n  TemplateResult,\n  html,\n  CSSResult,\n  css,\n  customElement,\n  PropertyValues,\n} from \"lit-element\";\nimport { Marker, Map, LeafletMouseEvent, DragEndEvent, LatLng } from \"leaflet\";\nimport {\n  setupLeafletMap,\n  LeafletModuleType,\n} from \"../../common/dom/setup-leaflet-map\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\n\n@customElement(\"ha-location-editor\")\nclass LocationEditor extends LitElement {\n  @property() public location?: [number, number];\n  public fitZoom = 16;\n\n  private _ignoreFitToMap?: [number, number];\n\n  // tslint:disable-next-line\n  private Leaflet?: LeafletModuleType;\n  private _leafletMap?: Map;\n  private _locationMarker?: Marker;\n\n  public fitMap(): void {\n    if (!this._leafletMap || !this.location) {\n      return;\n    }\n    this._leafletMap.setView(this.location, this.fitZoom);\n  }\n\n  protected render(): TemplateResult | void {\n    return html`\n      <div id=\"map\"></div>\n    `;\n  }\n\n  protected firstUpdated(changedProps: PropertyValues): void {\n    super.firstUpdated(changedProps);\n    this._initMap();\n  }\n\n  protected updated(changedProps: PropertyValues): void {\n    super.updated(changedProps);\n\n    // Still loading.\n    if (!this.Leaflet) {\n      return;\n    }\n\n    this._updateMarker();\n    if (!this._ignoreFitToMap || this._ignoreFitToMap !== this.location) {\n      this.fitMap();\n    }\n    this._ignoreFitToMap = undefined;\n  }\n\n  private get _mapEl(): HTMLDivElement {\n    return this.shadowRoot!.querySelector(\"div\")!;\n  }\n\n  private async _initMap(): Promise<void> {\n    [this._leafletMap, this.Leaflet] = await setupLeafletMap(this._mapEl);\n    this._leafletMap.addEventListener(\n      \"click\",\n      // @ts-ignore\n      (ev: LeafletMouseEvent) => this._updateLocation(ev.latlng)\n    );\n    this._updateMarker();\n    this.fitMap();\n    this._leafletMap.invalidateSize();\n  }\n\n  private _updateLocation(latlng: LatLng) {\n    this.location = this._ignoreFitToMap = [latlng.lat, latlng.lng];\n    fireEvent(this, \"change\", undefined, { bubbles: false });\n  }\n\n  private _updateMarker(): void {\n    if (!this.location) {\n      if (this._locationMarker) {\n        this._locationMarker.remove();\n        this._locationMarker = undefined;\n      }\n      return;\n    }\n\n    if (this._locationMarker) {\n      this._locationMarker.setLatLng(this.location);\n      return;\n    }\n    this._locationMarker = this.Leaflet!.marker(this.location, {\n      draggable: true,\n    });\n    this._locationMarker.addEventListener(\n      \"dragend\",\n      // @ts-ignore\n      (ev: DragEndEvent) => this._updateLocation(ev.target.getLatLng())\n    );\n    this._leafletMap!.addLayer(this._locationMarker);\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      :host {\n        display: block;\n        height: 300px;\n      }\n      #map {\n        height: 100%;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-location-editor\": LocationEditor;\n  }\n}\n","import {\n  LitElement,\n  customElement,\n  property,\n  TemplateResult,\n  html,\n  CSSResult,\n  css,\n} from \"lit-element\";\nimport \"@material/mwc-button/mwc-button\";\nimport \"@polymer/paper-input/paper-input\";\nimport \"@polymer/paper-radio-group/paper-radio-group\";\nimport \"@polymer/paper-radio-button/paper-radio-button\";\n// tslint:disable-next-line: no-duplicate-imports\nimport { PaperInputElement } from \"@polymer/paper-input/paper-input\";\nimport { HomeAssistant } from \"../types\";\nimport {\n  ConfigUpdateValues,\n  detectCoreConfig,\n  saveCoreConfig,\n} from \"../data/core\";\nimport { PolymerChangedEvent } from \"../polymer-types\";\nimport { onboardCoreConfigStep } from \"../data/onboarding\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport { LocalizeFunc } from \"../common/translations/localize\";\nimport { createTimezoneListEl } from \"../components/timezone-datalist\";\nimport \"../components/map/ha-location-editor\";\n\nconst amsterdam = [52.3731339, 4.8903147];\n\n@customElement(\"onboarding-core-config\")\nclass OnboardingCoreConfig extends LitElement {\n  @property() public hass!: HomeAssistant;\n  @property() public onboardingLocalize!: LocalizeFunc;\n\n  @property() private _working = false;\n\n  @property() private _name!: ConfigUpdateValues[\"location_name\"];\n  @property() private _location!: [number, number];\n  @property() private _elevation!: string;\n  @property() private _unitSystem!: ConfigUpdateValues[\"unit_system\"];\n  @property() private _timeZone!: string;\n\n  protected render(): TemplateResult | void {\n    return html`\n      <p>\n        ${this.onboardingLocalize(\n          \"ui.panel.page-onboarding.core-config.intro\",\n          \"name\",\n          this.hass.user!.name\n        )}\n      </p>\n\n      <paper-input\n        .label=${this.onboardingLocalize(\n          \"ui.panel.page-onboarding.core-config.location_name\"\n        )}\n        name=\"name\"\n        .disabled=${this._working}\n        .value=${this._nameValue}\n        @value-changed=${this._handleChange}\n      ></paper-input>\n\n      <div class=\"middle-text\">\n        <p>\n          ${this.onboardingLocalize(\n            \"ui.panel.page-onboarding.core-config.intro_location\"\n          )}\n        </p>\n\n        <div class=\"row\">\n          <div>\n            ${this.onboardingLocalize(\n              \"ui.panel.page-onboarding.core-config.intro_location_detect\"\n            )}\n          </div>\n          <mwc-button @click=${this._detect}>\n            ${this.onboardingLocalize(\n              \"ui.panel.page-onboarding.core-config.button_detect\"\n            )}\n          </mwc-button>\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <ha-location-editor\n          class=\"flex\"\n          .location=${this._locationValue}\n          .fitZoom=${14}\n          @change=${this._locationChanged}\n        ></ha-location-editor>\n      </div>\n\n      <div class=\"row\">\n        <paper-input\n          class=\"flex\"\n          .label=${this.hass.localize(\n            \"ui.panel.config.core.section.core.core_config.time_zone\"\n          )}\n          name=\"timeZone\"\n          list=\"timezones\"\n          .disabled=${this._working}\n          .value=${this._timeZoneValue}\n          @value-changed=${this._handleChange}\n        ></paper-input>\n\n        <paper-input\n          class=\"flex\"\n          .label=${this.hass.localize(\n            \"ui.panel.config.core.section.core.core_config.elevation\"\n          )}\n          name=\"elevation\"\n          type=\"number\"\n          .disabled=${this._working}\n          .value=${this._elevationValue}\n          @value-changed=${this._handleChange}\n        >\n          <span slot=\"suffix\">\n            ${this.hass.localize(\n              \"ui.panel.config.core.section.core.core_config.elevation_meters\"\n            )}\n          </span>\n        </paper-input>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"flex\">\n          ${this.hass.localize(\n            \"ui.panel.config.core.section.core.core_config.unit_system\"\n          )}\n        </div>\n        <paper-radio-group\n          class=\"flex\"\n          .selected=${this._unitSystemValue}\n          @selected-changed=${this._unitSystemChanged}\n        >\n          <paper-radio-button name=\"metric\" .disabled=${this._working}>\n            ${this.hass.localize(\n              \"ui.panel.config.core.section.core.core_config.unit_system_metric\"\n            )}\n            <div class=\"secondary\">\n              ${this.hass.localize(\n                \"ui.panel.config.core.section.core.core_config.metric_example\"\n              )}\n            </div>\n          </paper-radio-button>\n          <paper-radio-button name=\"imperial\" .disabled=${this._working}>\n            ${this.hass.localize(\n              \"ui.panel.config.core.section.core.core_config.unit_system_imperial\"\n            )}\n            <div class=\"secondary\">\n              ${this.hass.localize(\n                \"ui.panel.config.core.section.core.core_config.imperial_example\"\n              )}\n            </div>\n          </paper-radio-button>\n        </paper-radio-group>\n      </div>\n\n      <div class=\"footer\">\n        <mwc-button @click=${this._save} .disabled=${this._working}>\n          ${this.onboardingLocalize(\n            \"ui.panel.page-onboarding.core-config.finish\"\n          )}\n        </mwc-button>\n      </div>\n    `;\n  }\n\n  protected firstUpdated(changedProps) {\n    super.firstUpdated(changedProps);\n    setTimeout(\n      () => this.shadowRoot!.querySelector(\"paper-input\")!.focus(),\n      100\n    );\n    this.addEventListener(\"keypress\", (ev) => {\n      if (ev.keyCode === 13) {\n        this._save(ev);\n      }\n    });\n    const input = this.shadowRoot!.querySelector(\n      \"[name=timeZone]\"\n    ) as PaperInputElement;\n    input.inputElement.appendChild(createTimezoneListEl());\n  }\n\n  private get _nameValue() {\n    return this._name !== undefined\n      ? this._name\n      : this.onboardingLocalize(\n          \"ui.panel.page-onboarding.core-config.location_name_default\"\n        );\n  }\n\n  private get _locationValue() {\n    return this._location || amsterdam;\n  }\n\n  private get _elevationValue() {\n    return this._elevation !== undefined ? this._elevation : 0;\n  }\n\n  private get _timeZoneValue() {\n    return this._timeZone;\n  }\n\n  private get _unitSystemValue() {\n    return this._unitSystem !== undefined ? this._unitSystem : \"metric\";\n  }\n\n  private _handleChange(ev: PolymerChangedEvent<string>) {\n    const target = ev.currentTarget as PaperInputElement;\n    this[`_${target.name}`] = target.value;\n  }\n\n  private _locationChanged(ev) {\n    this._location = ev.currentTarget.location;\n  }\n\n  private _unitSystemChanged(\n    ev: PolymerChangedEvent<ConfigUpdateValues[\"unit_system\"]>\n  ) {\n    this._unitSystem = ev.detail.value;\n  }\n\n  private async _detect() {\n    this._working = true;\n    try {\n      const values = await detectCoreConfig(this.hass);\n      if (values.latitude && values.longitude) {\n        this._location = [Number(values.latitude), Number(values.longitude)];\n      }\n      if (values.elevation) {\n        this._elevation = String(values.elevation);\n      }\n      if (values.unit_system) {\n        this._unitSystem = values.unit_system;\n      }\n      if (values.time_zone) {\n        this._timeZone = values.time_zone;\n      }\n    } catch (err) {\n      alert(`Failed to detect location information: ${err.message}`);\n    } finally {\n      this._working = false;\n    }\n  }\n\n  private async _save(ev) {\n    ev.preventDefault();\n    this._working = true;\n    try {\n      const location = this._locationValue;\n      await saveCoreConfig(this.hass, {\n        location_name: this._nameValue,\n        latitude: location[0],\n        longitude: location[1],\n        elevation: Number(this._elevationValue),\n        unit_system: this._unitSystemValue,\n        time_zone: this._timeZoneValue || \"UTC\",\n      });\n      const result = await onboardCoreConfigStep(this.hass);\n      fireEvent(this, \"onboarding-step\", {\n        type: \"core_config\",\n        result,\n      });\n    } catch (err) {\n      this._working = false;\n      alert(\"FAIL\");\n    }\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      .row {\n        display: flex;\n        flex-direction: row;\n        margin: 0 -8px;\n        align-items: center;\n      }\n\n      .secondary {\n        color: var(--secondary-text-color);\n      }\n\n      .flex {\n        flex: 1;\n      }\n\n      .middle-text {\n        margin: 24px 0;\n      }\n\n      .row > * {\n        margin: 0 8px;\n      }\n      .footer {\n        margin-top: 16px;\n        text-align: right;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"onboarding-core-config\": OnboardingCoreConfig;\n  }\n}\n"],"sourceRoot":""}