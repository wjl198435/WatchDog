{"version":3,"sources":["webpack:///./src/components/entity/ha-entity-picker.ts","webpack:///./src/panels/lovelace/common/structs/struct.ts","webpack:///./src/panels/lovelace/common/structs/is-entity-id.ts","webpack:///./src/panels/lovelace/common/structs/is-icon.ts","webpack:///./src/panels/lovelace/editor/config-elements/config-elements-style.ts","webpack:///./src/panels/lovelace/components/hui-entity-editor.ts","webpack:///./src/panels/lovelace/editor/process-editor-entities.ts","webpack:///./src/panels/lovelace/components/hui-input-list-editor.ts","webpack:///./src/panels/lovelace/editor/config-elements/hui-map-card-editor.ts"],"names":["HaEntityPicker","_LitElement","[object Object]","args","super","_initialize","this","property","type","Boolean","attribute","memoizeOne","hass","domainFilter","entityFilter","states","entityIds","Object","keys","filter","eid","substr","indexOf","sort","map","key","stateObj","entity_id","value","changedProps","_get","_getPrototypeOf","prototype","call","has","_opened","_hass","_getStates","html","_value","allowCustomEntity","root","_owner","model","firstElementChild","innerHTML","querySelector","item","textContent","computeStateName","_openedChanged","_valueChanged","autofocus","undefined","label","localize","disabled","length","ev","detail","setTimeout","fireEvent","css","LitElement","customElements","define","__webpack_require__","d","__webpack_exports__","struct","superstruct","types","entity-id","includes","icon","configElementStyle","_decorate","customElement","F","kind","decorators","entities","entityConf","index","entity","_entityDown","_entityUp","_addEntity","target","newConfigEntities","concat","newEntities","splice","assign","static","processEditorEntities","listEntry","inputLabel","_consolidateEntries","_removeEntry","_addEntry","newEntries","blur","stopPropagation","parent","currentTarget","parentElement","entitiesConfigStruct","union","name","cardConfigStruct","title","aspect_ratio","default_zoom","dark_mode","geo_location_sources","HuiMapCardEditor","hui_map_card_editor_decorate","config","_config","_configEntities","NaN","_title","_aspect_ratio","_default_zoom","_dark_mode","_entitiesValueChanged","_geo_location_sources","configValue","isNaN","Number","checked"],"mappings":"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","file":"chunk.5eb79e47c0f233001ab5.js","sourcesContent":["import \"@polymer/paper-icon-button/paper-icon-button\";\nimport \"@polymer/paper-input/paper-input\";\nimport \"@polymer/paper-item/paper-icon-item\";\nimport \"@polymer/paper-item/paper-item-body\";\nimport \"@vaadin/vaadin-combo-box/vaadin-combo-box-light\";\nimport memoizeOne from \"memoize-one\";\n\nimport \"./state-badge\";\n\nimport computeStateName from \"../../common/entity/compute_state_name\";\nimport {\n  LitElement,\n  TemplateResult,\n  html,\n  css,\n  CSSResult,\n  property,\n  PropertyValues,\n} from \"lit-element\";\nimport { HomeAssistant } from \"../../types\";\nimport { HassEntity } from \"home-assistant-js-websocket\";\nimport { PolymerChangedEvent } from \"../../polymer-types\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\n\nexport type HaEntityPickerEntityFilterFunc = (entityId: HassEntity) => boolean;\n\nconst rowRenderer = (\n  root: HTMLElement,\n  _owner,\n  model: { item: HassEntity }\n) => {\n  if (!root.firstElementChild) {\n    root.innerHTML = `\n      <style>\n        paper-icon-item {\n          margin: -10px;\n          padding: 0;\n        }\n      </style>\n      <paper-icon-item>\n        <state-badge state-obj=\"[[item]]\" slot=\"item-icon\"></state-badge>\n        <paper-item-body two-line=\"\">\n          <div class='name'>[[_computeStateName(item)]]</div>\n          <div secondary>[[item.entity_id]]</div>\n        </paper-item-body>\n      </paper-icon-item>\n    `;\n  }\n\n  root.querySelector(\"state-badge\")!.stateObj = model.item;\n  root.querySelector(\".name\")!.textContent = computeStateName(model.item);\n  root.querySelector(\"[secondary]\")!.textContent = model.item.entity_id;\n};\n\nclass HaEntityPicker extends LitElement {\n  @property({ type: Boolean }) public autofocus?: boolean;\n  @property({ type: Boolean }) public disabled?: boolean;\n  @property({ type: Boolean, attribute: \"allow-custom-entity\" })\n  public allowCustomEntity;\n  @property() public hass?: HomeAssistant;\n  @property() public label?: string;\n  @property() public value?: string;\n  @property({ attribute: \"domain-filter\" }) public domainFilter?: string;\n  @property() public entityFilter?: HaEntityPickerEntityFilterFunc;\n  @property({ type: Boolean }) private _opened?: boolean;\n  @property() private _hass?: HomeAssistant;\n\n  private _getStates = memoizeOne(\n    (\n      hass: this[\"hass\"],\n      domainFilter: this[\"domainFilter\"],\n      entityFilter: this[\"entityFilter\"]\n    ) => {\n      let states: HassEntity[] = [];\n\n      if (!hass) {\n        return [];\n      }\n      let entityIds = Object.keys(hass.states);\n\n      if (domainFilter) {\n        entityIds = entityIds.filter(\n          (eid) => eid.substr(0, eid.indexOf(\".\")) === domainFilter\n        );\n      }\n\n      states = entityIds.sort().map((key) => hass!.states[key]);\n\n      if (entityFilter) {\n        states = states.filter(\n          (stateObj) =>\n            // We always want to include the entity of the current value\n            stateObj.entity_id === this.value || entityFilter!(stateObj)\n        );\n      }\n      return states;\n    }\n  );\n\n  protected updated(changedProps: PropertyValues) {\n    super.updated(changedProps);\n\n    if (changedProps.has(\"hass\") && !this._opened) {\n      this._hass = this.hass;\n    }\n  }\n\n  protected render(): TemplateResult | void {\n    const states = this._getStates(\n      this._hass,\n      this.domainFilter,\n      this.entityFilter\n    );\n\n    return html`\n      <vaadin-combo-box-light\n        item-value-path=\"entity_id\"\n        item-label-path=\"entity_id\"\n        .items=${states}\n        .value=${this._value}\n        .allowCustomValue=${this.allowCustomEntity}\n        .renderer=${rowRenderer}\n        @opened-changed=${this._openedChanged}\n        @value-changed=${this._valueChanged}\n      >\n        <paper-input\n          .autofocus=${this.autofocus}\n          .label=${this.label === undefined && this._hass\n            ? this._hass.localize(\"ui.components.entity.entity-picker.entity\")\n            : this.label}\n          .value=${this._value}\n          .disabled=${this.disabled}\n          class=\"input\"\n          autocapitalize=\"none\"\n          autocomplete=\"off\"\n          autocorrect=\"off\"\n          spellcheck=\"false\"\n        >\n          ${this.value\n            ? html`\n                <paper-icon-button\n                  aria-label=\"Clear\"\n                  slot=\"suffix\"\n                  class=\"clear-button\"\n                  icon=\"hass:close\"\n                  no-ripple\n                >\n                  Clear\n                </paper-icon-button>\n              `\n            : \"\"}\n          ${states.length > 0\n            ? html`\n                <paper-icon-button\n                  aria-label=\"Show entities\"\n                  slot=\"suffix\"\n                  class=\"toggle-button\"\n                  .icon=${this._opened ? \"hass:menu-up\" : \"hass:menu-down\"}\n                >\n                  Toggle\n                </paper-icon-button>\n              `\n            : \"\"}\n        </paper-input>\n      </vaadin-combo-box-light>\n    `;\n  }\n\n  private get _value() {\n    return this.value || \"\";\n  }\n\n  private _openedChanged(ev: PolymerChangedEvent<boolean>) {\n    this._opened = ev.detail.value;\n  }\n\n  private _valueChanged(ev: PolymerChangedEvent<string>) {\n    const newValue = ev.detail.value;\n    if (newValue !== this._value) {\n      this.value = ev.detail.value;\n      setTimeout(() => {\n        fireEvent(this, \"value-changed\", { value: this.value });\n        fireEvent(this, \"change\");\n      }, 0);\n    }\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      paper-input > paper-icon-button {\n        width: 24px;\n        height: 24px;\n        padding: 2px;\n        color: var(--secondary-text-color);\n      }\n      [hidden] {\n        display: none;\n      }\n    `;\n  }\n}\n\ncustomElements.define(\"ha-entity-picker\", HaEntityPicker);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-entity-picker\": HaEntityPicker;\n  }\n}\n","import { superstruct } from \"superstruct\";\nimport { isEntityId } from \"./is-entity-id\";\nimport { isIcon } from \"./is-icon\";\n\nexport const struct = superstruct({\n  types: {\n    \"entity-id\": isEntityId,\n    icon: isIcon,\n  },\n});\n","export function isEntityId(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"entity id should be a string\";\n  }\n  if (!value.includes(\".\")) {\n    return \"entity id should be in the format 'domain.entity'\";\n  }\n  return true;\n}\n","export function isIcon(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"icon should be a string\";\n  }\n  if (!value.includes(\":\")) {\n    return \"icon should be in the format 'mdi:icon'\";\n  }\n  return true;\n}\n","import { html } from \"lit-element\";\n\nexport const configElementStyle = html`\n  <style>\n    paper-toggle-button {\n      padding-top: 16px;\n    }\n    .side-by-side {\n      display: flex;\n    }\n    .side-by-side > * {\n      flex: 1;\n      padding-right: 4px;\n    }\n    .suffix {\n      margin: 0 8px;\n    }\n  </style>\n`;\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n  css,\n  CSSResult,\n} from \"lit-element\";\nimport \"@polymer/paper-icon-button/paper-icon-button\";\n\nimport { HomeAssistant } from \"../../../types\";\nimport { fireEvent } from \"../../../common/dom/fire_event\";\nimport { EntityConfig } from \"../entity-rows/types\";\n\nimport \"../../../components/entity/ha-entity-picker\";\nimport { EditorTarget } from \"../editor/types\";\n\n@customElement(\"hui-entity-editor\")\nexport class HuiEntityEditor extends LitElement {\n  @property() protected hass?: HomeAssistant;\n\n  @property() protected entities?: EntityConfig[];\n\n  protected render(): TemplateResult | void {\n    if (!this.entities) {\n      return html``;\n    }\n\n    return html`\n      <h3>Entities</h3>\n      <div class=\"entities\">\n        ${this.entities.map((entityConf, index) => {\n          return html`\n            <div class=\"entity\">\n              <ha-entity-picker\n                .hass=\"${this.hass}\"\n                .value=\"${entityConf.entity}\"\n                .index=\"${index}\"\n                @change=\"${this._valueChanged}\"\n                allow-custom-entity\n              ></ha-entity-picker>\n              <paper-icon-button\n                title=\"Move entity down\"\n                icon=\"hass:arrow-down\"\n                .index=\"${index}\"\n                @click=\"${this._entityDown}\"\n                ?disabled=\"${index === this.entities!.length - 1}\"\n              ></paper-icon-button>\n              <paper-icon-button\n                title=\"Move entity up\"\n                icon=\"hass:arrow-up\"\n                .index=\"${index}\"\n                @click=\"${this._entityUp}\"\n                ?disabled=\"${index === 0}\"\n              ></paper-icon-button>\n            </div>\n          `;\n        })}\n        <ha-entity-picker\n          .hass=\"${this.hass}\"\n          @change=\"${this._addEntity}\"\n        ></ha-entity-picker>\n      </div>\n    `;\n  }\n\n  private _addEntity(ev: Event): void {\n    const target = ev.target! as EditorTarget;\n    if (target.value === \"\") {\n      return;\n    }\n    const newConfigEntities = this.entities!.concat({\n      entity: target.value as string,\n    });\n    target.value = \"\";\n    fireEvent(this, \"entities-changed\", { entities: newConfigEntities });\n  }\n\n  private _entityUp(ev: Event): void {\n    const target = ev.target! as EditorTarget;\n    const newEntities = this.entities!.concat();\n\n    [newEntities[target.index! - 1], newEntities[target.index!]] = [\n      newEntities[target.index!],\n      newEntities[target.index! - 1],\n    ];\n\n    fireEvent(this, \"entities-changed\", { entities: newEntities });\n  }\n\n  private _entityDown(ev: Event): void {\n    const target = ev.target! as EditorTarget;\n    const newEntities = this.entities!.concat();\n\n    [newEntities[target.index! + 1], newEntities[target.index!]] = [\n      newEntities[target.index!],\n      newEntities[target.index! + 1],\n    ];\n\n    fireEvent(this, \"entities-changed\", { entities: newEntities });\n  }\n\n  private _valueChanged(ev: Event): void {\n    const target = ev.target! as EditorTarget;\n    const newConfigEntities = this.entities!.concat();\n\n    if (target.value === \"\") {\n      newConfigEntities.splice(target.index!, 1);\n    } else {\n      newConfigEntities[target.index!] = {\n        ...newConfigEntities[target.index!],\n        entity: target.value!,\n      };\n    }\n\n    fireEvent(this, \"entities-changed\", { entities: newConfigEntities });\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      .entities {\n        padding-left: 20px;\n      }\n      .entity {\n        display: flex;\n        align-items: flex-end;\n      }\n      .entity ha-entity-picker {\n        flex-grow: 1;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-entity-editor\": HuiEntityEditor;\n  }\n}\n","import { EntityConfig } from \"../entity-rows/types\";\n\nexport function processEditorEntities(entities): EntityConfig[] {\n  return entities.map((entityConf) => {\n    if (typeof entityConf === \"string\") {\n      return { entity: entityConf };\n    }\n    return entityConf;\n  });\n}\n","import {\n  html,\n  css,\n  LitElement,\n  property,\n  TemplateResult,\n  CSSResult,\n  customElement,\n} from \"lit-element\";\nimport \"@polymer/paper-input/paper-input\";\n\nimport { HomeAssistant } from \"../../../types\";\nimport { fireEvent } from \"../../../common/dom/fire_event\";\n\nimport { EditorTarget } from \"../editor/types\";\n\n@customElement(\"hui-input-list-editor\")\nexport class HuiInputListEditor extends LitElement {\n  @property() protected value?: string[];\n  @property() protected hass?: HomeAssistant;\n  @property() protected inputLabel?: string;\n\n  protected render(): TemplateResult | void {\n    if (!this.value) {\n      return html``;\n    }\n\n    return html`\n      ${this.value.map((listEntry, index) => {\n        return html`\n          <paper-input\n            label=\"${this.inputLabel}\"\n            .value=\"${listEntry}\"\n            .configValue=\"${\"entry\"}\"\n            .index=\"${index}\"\n            @value-changed=\"${this._valueChanged}\"\n            @blur=\"${this._consolidateEntries}\"\n            ><paper-icon-button\n              slot=\"suffix\"\n              class=\"clear-button\"\n              icon=\"hass:close\"\n              no-ripple\n              @click=\"${this._removeEntry}\"\n              >Clear</paper-icon-button\n            ></paper-input\n          >\n        `;\n      })}\n      <paper-input\n        label=\"${this.inputLabel}\"\n        @change=\"${this._addEntry}\"\n      ></paper-input>\n    `;\n  }\n\n  private _addEntry(ev: Event): void {\n    const target = ev.target! as EditorTarget;\n    if (target.value === \"\") {\n      return;\n    }\n    const newEntries = this.value!.concat(target.value as string);\n    target.value = \"\";\n    fireEvent(this, \"value-changed\", {\n      value: newEntries,\n    });\n    (ev.target! as LitElement).blur();\n  }\n\n  private _valueChanged(ev: Event): void {\n    ev.stopPropagation();\n    const target = ev.target! as EditorTarget;\n    const newEntries = this.value!.concat();\n    newEntries[target.index!] = target.value!;\n    fireEvent(this, \"value-changed\", {\n      value: newEntries,\n    });\n  }\n\n  private _consolidateEntries(ev: Event): void {\n    const target = ev.target! as EditorTarget;\n    if (target.value === \"\") {\n      const newEntries = this.value!.concat();\n      newEntries.splice(target.index!, 1);\n      fireEvent(this, \"value-changed\", {\n        value: newEntries,\n      });\n    }\n  }\n\n  private _removeEntry(ev: Event): void {\n    const parent = (ev.currentTarget as any).parentElement;\n    const newEntries = this.value!.concat();\n    newEntries.splice(parent.index!, 1);\n    fireEvent(this, \"value-changed\", {\n      value: newEntries,\n    });\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      paper-input > paper-icon-button {\n        width: 24px;\n        height: 24px;\n        padding: 2px;\n        color: var(--secondary-text-color);\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-input-list-editor\": HuiInputListEditor;\n  }\n}\n","import {\n  html,\n  css,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n  CSSResult,\n} from \"lit-element\";\nimport \"@polymer/paper-input/paper-input\";\n\nimport \"../../components/hui-entity-editor\";\nimport \"../../components/hui-input-list-editor\";\n\nimport { struct } from \"../../common/structs/struct\";\nimport { EntitiesEditorEvent, EditorTarget } from \"../types\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { LovelaceCardEditor } from \"../../types\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { configElementStyle } from \"./config-elements-style\";\nimport { processEditorEntities } from \"../process-editor-entities\";\nimport { EntityConfig } from \"../../entity-rows/types\";\nimport { PolymerChangedEvent } from \"../../../../polymer-types\";\nimport { MapCardConfig } from \"../../cards/types\";\n\nconst entitiesConfigStruct = struct.union([\n  {\n    entity: \"entity-id\",\n    name: \"string?\",\n    icon: \"icon?\",\n  },\n  \"entity-id\",\n]);\n\nconst cardConfigStruct = struct({\n  type: \"string\",\n  title: \"string?\",\n  aspect_ratio: \"string?\",\n  default_zoom: \"number?\",\n  dark_mode: \"boolean?\",\n  entities: [entitiesConfigStruct],\n  geo_location_sources: \"array?\",\n});\n\n@customElement(\"hui-map-card-editor\")\nexport class HuiMapCardEditor extends LitElement implements LovelaceCardEditor {\n  @property() public hass?: HomeAssistant;\n\n  @property() private _config?: MapCardConfig;\n\n  @property() private _configEntities?: EntityConfig[];\n\n  public setConfig(config: MapCardConfig): void {\n    config = cardConfigStruct(config);\n    this._config = config;\n    this._configEntities = processEditorEntities(config.entities);\n  }\n\n  get _title(): string {\n    return this._config!.title || \"\";\n  }\n\n  get _aspect_ratio(): string {\n    return this._config!.aspect_ratio || \"\";\n  }\n\n  get _default_zoom(): number {\n    return this._config!.default_zoom || NaN;\n  }\n\n  get _geo_location_sources(): string[] {\n    return this._config!.geo_location_sources || [];\n  }\n\n  get _dark_mode(): boolean {\n    return this._config!.dark_mode || false;\n  }\n\n  protected render(): TemplateResult | void {\n    if (!this.hass) {\n      return html``;\n    }\n\n    return html`\n      ${configElementStyle}\n      <div class=\"card-config\">\n        <paper-input\n          label=\"Title\"\n          .value=\"${this._title}\"\n          .configValue=\"${\"title\"}\"\n          @value-changed=\"${this._valueChanged}\"\n        ></paper-input>\n        <div class=\"side-by-side\">\n          <paper-input\n            label=\"Aspect Ratio\"\n            .value=\"${this._aspect_ratio}\"\n            .configValue=\"${\"aspect_ratio\"}\"\n            @value-changed=\"${this._valueChanged}\"\n          ></paper-input>\n          <paper-input\n            label=\"Default Zoom\"\n            type=\"number\"\n            .value=\"${this._default_zoom}\"\n            .configValue=\"${\"default_zoom\"}\"\n            @value-changed=\"${this._valueChanged}\"\n          ></paper-input>\n        </div>\n        <paper-toggle-button\n          ?checked=\"${this._dark_mode !== false}\"\n          .configValue=\"${\"dark_mode\"}\"\n          @change=\"${this._valueChanged}\"\n          >Dark Mode?</paper-toggle-button\n        >\n        <hui-entity-editor\n          .hass=\"${this.hass}\"\n          .entities=\"${this._configEntities}\"\n          @entities-changed=\"${this._entitiesValueChanged}\"\n        ></hui-entity-editor>\n        <h3>Geolocation Sources</h3>\n        <div class=\"geo_location_sources\">\n          <hui-input-list-editor\n            inputLabel=\"Source\"\n            .hass=\"${this.hass}\"\n            .value=\"${this._geo_location_sources}\"\n            .configValue=\"${\"geo_location_sources\"}\"\n            @value-changed=\"${this._valueChanged}\"\n          ></hui-input-list-editor>\n        </div>\n      </div>\n    `;\n  }\n\n  private _entitiesValueChanged(ev: EntitiesEditorEvent): void {\n    if (!this._config || !this.hass) {\n      return;\n    }\n    if (ev.detail && ev.detail.entities) {\n      this._config.entities = ev.detail.entities;\n      this._configEntities = processEditorEntities(this._config.entities);\n      fireEvent(this, \"config-changed\", { config: this._config });\n    }\n  }\n\n  private _valueChanged(ev: PolymerChangedEvent<any>): void {\n    if (!this._config || !this.hass) {\n      return;\n    }\n    const target = ev.target! as EditorTarget;\n    if (\n      target.configValue &&\n      ev.detail &&\n      this[`_${target.configValue}`] === ev.detail.value\n    ) {\n      return;\n    }\n    if (target.configValue && ev.detail) {\n      if (\n        ev.detail.value === \"\" ||\n        (target.type === \"number\" && isNaN(Number(ev.detail.value)))\n      ) {\n        delete this._config[target.configValue!];\n      } else {\n        let value: any = ev.detail.value;\n        if (target.type === \"number\") {\n          value = Number(value);\n        }\n        this._config = {\n          ...this._config,\n          [target.configValue]:\n            target.checked !== undefined ? target.checked : value,\n        };\n      }\n    }\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      .geo_location_sources {\n        padding-left: 20px;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-map-card-editor\": HuiMapCardEditor;\n  }\n}\n"],"sourceRoot":""}