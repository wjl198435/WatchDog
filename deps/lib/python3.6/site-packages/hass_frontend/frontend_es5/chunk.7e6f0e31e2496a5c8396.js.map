{"version":3,"sources":["webpack:///./src/panels/lovelace/common/structs/struct.ts","webpack:///./src/panels/lovelace/common/structs/is-entity-id.ts","webpack:///./src/panels/lovelace/common/structs/is-icon.ts","webpack:///./src/panels/lovelace/editor/config-elements/hui-shopping-list-editor.ts"],"names":["__webpack_require__","d","__webpack_exports__","struct","superstruct","types","entity-id","value","includes","icon","cardConfigStruct","type","title","HuiShoppingListEditor","_decorate","customElement","_initialize","_LitElement","F","_LitElement2","_getPrototypeOf2","_this","_classCallCheck","this","_len","arguments","length","args","Array","_key","_getPrototypeOf","call","apply","concat","_assertThisInitialized","_inherits","kind","decorators","property","key","config","_config","hass","html","_templateObject2","_title","_valueChanged","_templateObject","ev","target","configValue","Object","assign","fireEvent","LitElement"],"mappings":"oGAAAA,EAAAC,EAAAC,EAAA,sBAAAC,IAIO,IAAMA,EAASC,YAAY,CAChCC,MAAO,CACLC,YCNG,SAAoBC,GACzB,MAAqB,iBAAVA,EACF,iCAEJA,EAAMC,SAAS,MACX,qDDEPC,KEPG,SAAgBF,GACrB,MAAqB,iBAAVA,EACF,4BAEJA,EAAMC,SAAS,MACX,m2ECWX,IAAME,EAAmBP,YAAO,CAC9BQ,KAAM,SACNC,MAAO,YAIIC,80LAAbC,CAAA,CADCC,YAAc,kCACf,SAAAC,EAAAC,GAAA,OAAAC,EAAA,SAAAC,GAAA,SAAAN,IAAA,IAAAO,EAAAC,mGAAAC,CAAAC,KAAAV,GAAA,QAAAW,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,SAAAN,KAAAF,OAAAD,EAAAU,EAAAjB,IAAAkB,KAAAC,MAAAZ,EAAA,CAAAG,MAAAU,OAAAN,mDAAAX,EAAAkB,EAAAb,MAAA,yOAAAc,CAAAtB,EAAAI,GAAAJ,EAAA,GAAAZ,EAAA,EAAAmC,KAAA,QAAAC,WAAA,CAEGC,eAFHC,IAAA,OAAAhC,WAAA,IAAA6B,KAAA,QAAAC,WAAA,CAIGC,eAJHC,IAAA,UAAAhC,WAAA,IAAA6B,KAAA,SAAAG,IAAA,YAAAhC,MAME,SAAiBiC,GACfA,EAAS9B,EAAiB8B,GAC1BjB,KAAKkB,QAAUD,IARnB,CAAAJ,KAAA,MAAAG,IAAA,SAAAhC,MAWE,WACE,OAAOgB,KAAKkB,QAAS7B,OAAS,KAZlC,CAAAwB,KAAA,SAAAG,IAAA,SAAAhC,MAeE,WACE,OAAKgB,KAAKmB,KAIHC,YAAPC,IAIgBrB,KAAKsB,OACC,QACEtB,KAAKuB,eATpBH,YAAPI,OAjBN,CAAAX,KAAA,SAAAG,IAAA,gBAAAhC,MAgCE,SAAsByC,GACpB,GAAKzB,KAAKkB,SAAYlB,KAAKmB,KAA3B,CAGA,UAAMO,EAASD,EAAGC,OAElB,GAAI1B,KAAA,IAAAU,OAASgB,EAAOC,gBAAmBD,EAAO1C,MAG1C0C,EAAOC,cACY,KAAjBD,EAAO1C,aACFgB,KAAKkB,QAAQQ,EAAOC,aAE3B3B,KAAKkB,QAALU,OAAAC,OAAA,GACK7B,KAAKkB,WADV,KAEGQ,EAAOC,cAAeD,EAAO1C,wGAIpC8C,YAAU9B,KAAM,iBAAkB,CAAEiB,OAAQjB,KAAKkB,gBAnDVa","file":"chunk.7e6f0e31e2496a5c8396.js","sourcesContent":["import { superstruct } from \"superstruct\";\nimport { isEntityId } from \"./is-entity-id\";\nimport { isIcon } from \"./is-icon\";\n\nexport const struct = superstruct({\n  types: {\n    \"entity-id\": isEntityId,\n    icon: isIcon,\n  },\n});\n","export function isEntityId(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"entity id should be a string\";\n  }\n  if (!value.includes(\".\")) {\n    return \"entity id should be in the format 'domain.entity'\";\n  }\n  return true;\n}\n","export function isIcon(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"icon should be a string\";\n  }\n  if (!value.includes(\":\")) {\n    return \"icon should be in the format 'mdi:icon'\";\n  }\n  return true;\n}\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n} from \"lit-element\";\nimport \"@polymer/paper-input/paper-input\";\n\nimport { struct } from \"../../common/structs/struct\";\nimport { EntitiesEditorEvent, EditorTarget } from \"../types\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { LovelaceCardEditor } from \"../../types\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { ShoppingListCardConfig } from \"../../cards/types\";\n\nconst cardConfigStruct = struct({\n  type: \"string\",\n  title: \"string?\",\n});\n\n@customElement(\"hui-shopping-list-card-editor\")\nexport class HuiShoppingListEditor extends LitElement\n  implements LovelaceCardEditor {\n  @property() public hass?: HomeAssistant;\n\n  @property() private _config?: ShoppingListCardConfig;\n\n  public setConfig(config: ShoppingListCardConfig): void {\n    config = cardConfigStruct(config);\n    this._config = config;\n  }\n\n  get _title(): string {\n    return this._config!.title || \"\";\n  }\n\n  protected render(): TemplateResult | void {\n    if (!this.hass) {\n      return html``;\n    }\n\n    return html`\n      <div class=\"card-config\">\n        <paper-input\n          label=\"Title\"\n          .value=\"${this._title}\"\n          .configValue=\"${\"title\"}\"\n          @value-changed=\"${this._valueChanged}\"\n        ></paper-input>\n      </div>\n    `;\n  }\n\n  private _valueChanged(ev: EntitiesEditorEvent): void {\n    if (!this._config || !this.hass) {\n      return;\n    }\n    const target = ev.target! as EditorTarget;\n\n    if (this[`_${target.configValue}`] === target.value) {\n      return;\n    }\n    if (target.configValue) {\n      if (target.value === \"\") {\n        delete this._config[target.configValue!];\n      } else {\n        this._config = {\n          ...this._config,\n          [target.configValue!]: target.value,\n        };\n      }\n    }\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-shopping-list-card-editor\": HuiShoppingListEditor;\n  }\n}\n"],"sourceRoot":""}