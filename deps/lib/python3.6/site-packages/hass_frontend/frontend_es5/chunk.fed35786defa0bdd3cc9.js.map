{"version":3,"sources":["webpack:///./src/panels/lovelace/common/structs/struct.ts","webpack:///./src/panels/lovelace/common/structs/is-entity-id.ts","webpack:///./src/panels/lovelace/common/structs/is-icon.ts","webpack:///./src/panels/lovelace/editor/config-elements/hui-thermostat-card-editor.ts"],"names":["__webpack_require__","d","__webpack_exports__","struct","superstruct","types","entity-id","value","includes","icon","cardConfigStruct","type","entity","name","theme","HuiThermostatCardEditor","_decorate","customElement","_initialize","_LitElement","F","_LitElement2","_getPrototypeOf2","_this","_classCallCheck","this","_len","arguments","length","args","Array","_key","_getPrototypeOf","call","apply","concat","_assertThisInitialized","_inherits","kind","decorators","property","key","config","_config","hass","html","_templateObject2","configElementStyle","_name","_valueChanged","_entity","_theme","_templateObject","ev","target","configValue","Object","assign","fireEvent","LitElement"],"mappings":"oGAAAA,EAAAC,EAAAC,EAAA,sBAAAC,IAIO,IAAMA,EAASC,YAAY,CAChCC,MAAO,CACLC,YCNG,SAAoBC,GACzB,MAAqB,iBAAVA,EACF,iCAEJA,EAAMC,SAAS,MACX,qDDEPC,KEPG,SAAgBF,GACrB,MAAqB,iBAAVA,EACF,4BAEJA,EAAMC,SAAS,MACX,y2FCeX,IAAME,EAAmBP,YAAO,CAC9BQ,KAAM,SACNC,OAAQ,SACRC,KAAM,UACNC,MAAO,YAIIC,80LAAbC,CAAA,CADCC,YAAc,+BACf,SAAAC,EAAAC,GAAA,OAAAC,EAAA,SAAAC,GAAA,SAAAN,IAAA,IAAAO,EAAAC,mGAAAC,CAAAC,KAAAV,GAAA,QAAAW,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,SAAAN,KAAAF,OAAAD,EAAAU,EAAAjB,IAAAkB,KAAAC,MAAAZ,EAAA,CAAAG,MAAAU,OAAAN,mDAAAX,EAAAkB,EAAAb,MAAA,yOAAAc,CAAAtB,EAAAI,GAAAJ,EAAA,GAAAd,EAAA,EAAAqC,KAAA,QAAAC,WAAA,CAEGC,eAFHC,IAAA,OAAAlC,WAAA,IAAA+B,KAAA,QAAAC,WAAA,CAIGC,eAJHC,IAAA,UAAAlC,WAAA,IAAA+B,KAAA,SAAAG,IAAA,YAAAlC,MAME,SAAiBmC,GACfA,EAAShC,EAAiBgC,GAC1BjB,KAAKkB,QAAUD,IARnB,CAAAJ,KAAA,MAAAG,IAAA,UAAAlC,MAWE,WACE,OAAOkB,KAAKkB,QAAS/B,QAAU,KAZnC,CAAA0B,KAAA,MAAAG,IAAA,QAAAlC,MAeE,WACE,OAAOkB,KAAKkB,QAAS9B,MAAQ,KAhBjC,CAAAyB,KAAA,MAAAG,IAAA,SAAAlC,MAmBE,WACE,OAAOkB,KAAKkB,QAAS7B,OAAS,YApBlC,CAAAwB,KAAA,SAAAG,IAAA,SAAAlC,MAuBE,WACE,OAAKkB,KAAKmB,KAIHC,YAAPC,IACIC,IAIYtB,KAAKuB,MACC,OACEvB,KAAKwB,cAIZxB,KAAKmB,KACJnB,KAAKyB,QACA,SAEJzB,KAAKwB,cAIPxB,KAAKmB,KACJnB,KAAK0B,OACC,QACE1B,KAAKwB,eAzBtBJ,YAAPO,OAzBN,CAAAd,KAAA,SAAAG,IAAA,gBAAAlC,MAyDE,SAAsB8C,GACpB,GAAK5B,KAAKkB,SAAYlB,KAAKmB,KAA3B,CAGA,UAAMU,EAASD,EAAGC,OAElB,GAAI7B,KAAA,IAAAU,OAASmB,EAAOC,gBAAmBD,EAAO/C,MAG1C+C,EAAOC,cACY,KAAjBD,EAAO/C,aACFkB,KAAKkB,QAAQW,EAAOC,aAE3B9B,KAAKkB,QAALa,OAAAC,OAAA,GAAoBhC,KAAKkB,WAAzB,KAAmCW,EAAOC,cAAeD,EAAO/C,wGAGpEmD,YAAUjC,KAAM,iBAAkB,CAAEiB,OAAQjB,KAAKkB,gBAzERgB","file":"chunk.fed35786defa0bdd3cc9.js","sourcesContent":["import { superstruct } from \"superstruct\";\nimport { isEntityId } from \"./is-entity-id\";\nimport { isIcon } from \"./is-icon\";\n\nexport const struct = superstruct({\n  types: {\n    \"entity-id\": isEntityId,\n    icon: isIcon,\n  },\n});\n","export function isEntityId(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"entity id should be a string\";\n  }\n  if (!value.includes(\".\")) {\n    return \"entity id should be in the format 'domain.entity'\";\n  }\n  return true;\n}\n","export function isIcon(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"icon should be a string\";\n  }\n  if (!value.includes(\":\")) {\n    return \"icon should be in the format 'mdi:icon'\";\n  }\n  return true;\n}\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n} from \"lit-element\";\nimport \"@polymer/paper-input/paper-input\";\n\nimport \"../../components/hui-theme-select-editor\";\nimport \"../../../../components/entity/ha-entity-picker\";\n\nimport { struct } from \"../../common/structs/struct\";\nimport { EntitiesEditorEvent, EditorTarget } from \"../types\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { LovelaceCardEditor } from \"../../types\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { configElementStyle } from \"./config-elements-style\";\nimport { ThermostatCardConfig } from \"../../cards/types\";\n\nconst cardConfigStruct = struct({\n  type: \"string\",\n  entity: \"string\",\n  name: \"string?\",\n  theme: \"string?\",\n});\n\n@customElement(\"hui-thermostat-card-editor\")\nexport class HuiThermostatCardEditor extends LitElement\n  implements LovelaceCardEditor {\n  @property() public hass?: HomeAssistant;\n\n  @property() private _config?: ThermostatCardConfig;\n\n  public setConfig(config: ThermostatCardConfig): void {\n    config = cardConfigStruct(config);\n    this._config = config;\n  }\n\n  get _entity(): string {\n    return this._config!.entity || \"\";\n  }\n\n  get _name(): string {\n    return this._config!.name || \"\";\n  }\n\n  get _theme(): string {\n    return this._config!.theme || \"default\";\n  }\n\n  protected render(): TemplateResult | void {\n    if (!this.hass) {\n      return html``;\n    }\n\n    return html`\n      ${configElementStyle}\n      <div class=\"card-config\">\n        <paper-input\n          label=\"Name\"\n          .value=\"${this._name}\"\n          .configValue=\"${\"name\"}\"\n          @value-changed=\"${this._valueChanged}\"\n        ></paper-input>\n        <div class=\"side-by-side\">\n          <ha-entity-picker\n            .hass=\"${this.hass}\"\n            .value=\"${this._entity}\"\n            .configValue=${\"entity\"}\n            domain-filter=\"climate\"\n            @change=\"${this._valueChanged}\"\n            allow-custom-entity\n          ></ha-entity-picker>\n          <hui-theme-select-editor\n            .hass=\"${this.hass}\"\n            .value=\"${this._theme}\"\n            .configValue=\"${\"theme\"}\"\n            @theme-changed=\"${this._valueChanged}\"\n          ></hui-theme-select-editor>\n        </div>\n      </div>\n    `;\n  }\n\n  private _valueChanged(ev: EntitiesEditorEvent): void {\n    if (!this._config || !this.hass) {\n      return;\n    }\n    const target = ev.target! as EditorTarget;\n\n    if (this[`_${target.configValue}`] === target.value) {\n      return;\n    }\n    if (target.configValue) {\n      if (target.value === \"\") {\n        delete this._config[target.configValue!];\n      } else {\n        this._config = { ...this._config, [target.configValue!]: target.value };\n      }\n    }\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-thermostat-card-editor\": HuiThermostatCardEditor;\n  }\n}\n"],"sourceRoot":""}