{"version":3,"sources":["webpack:///./src/panels/lovelace/common/compute-unused-entities.ts","webpack:///./src/panels/lovelace/hui-unused-entities.ts"],"names":["EXCLUDED_DOMAINS","addFromAction","entities","actionConfig","action","service_data","entity_id","entityIds","Array","isArray","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","entityId","value","add","err","return","addEntityId","entity","camera_image","tap_action","hold_action","computeUsedEntities","config","Set","views","forEach","view","addEntities","obj","card","cards","elements","badges","badge","HuiUnusedEntities","_LitElement","_getPrototypeOf2","_this","_classCallCheck","this","_len","arguments","length","args","_key","_possibleConstructorReturn","_getPrototypeOf","call","apply","concat","_hass","_config","_elements","_inherits","LitElement","key","get","_createElements","html","_templateObject2","renderStyle","_templateObject","_templateObject3","_this2","hass","usedEntities","domains","Object","keys","states","filter","has","includes","split","sort","domain","computeDomain","push","map","el","createCardElement","type","title","localize","secondary_info","show_header_toggle","set","customElements","define"],"mappings":"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","file":"chunk.9f323afb0dd7370edea6.js","sourcesContent":["import { LovelaceConfig, ActionConfig } from \"../../../data/lovelace\";\nimport { HomeAssistant } from \"../../../types\";\n\nconst EXCLUDED_DOMAINS = [\"zone\"];\n\nconst addFromAction = (entities: Set<string>, actionConfig: ActionConfig) => {\n  if (\n    actionConfig.action !== \"call-service\" ||\n    !actionConfig.service_data ||\n    !actionConfig.service_data.entity_id\n  ) {\n    return;\n  }\n  let entityIds = actionConfig.service_data.entity_id;\n  if (!Array.isArray(entityIds)) {\n    entityIds = [entityIds];\n  }\n  for (const entityId of entityIds) {\n    entities.add(entityId);\n  }\n};\n\nconst addEntityId = (entities: Set<string>, entity) => {\n  if (typeof entity === \"string\") {\n    entities.add(entity);\n    return;\n  }\n\n  if (entity.entity) {\n    entities.add(entity.entity);\n  }\n  if (entity.camera_image) {\n    entities.add(entity.camera_image);\n  }\n  if (entity.tap_action) {\n    addFromAction(entities, entity.tap_action);\n  }\n  if (entity.hold_action) {\n    addFromAction(entities, entity.hold_action);\n  }\n};\n\nconst addEntities = (entities: Set<string>, obj) => {\n  if (obj.entity) {\n    addEntityId(entities, obj.entity);\n  }\n  if (obj.entities) {\n    obj.entities.forEach((entity) => addEntityId(entities, entity));\n  }\n  if (obj.card) {\n    addEntities(entities, obj.card);\n  }\n  if (obj.cards) {\n    obj.cards.forEach((card) => addEntities(entities, card));\n  }\n  if (obj.elements) {\n    obj.elements.forEach((card) => addEntities(entities, card));\n  }\n  if (obj.badges) {\n    obj.badges.forEach((badge) => addEntityId(entities, badge));\n  }\n};\n\nconst computeUsedEntities = (config) => {\n  const entities = new Set<string>();\n  config.views.forEach((view) => addEntities(entities, view));\n  return entities;\n};\n\nexport const computeUnusedEntities = (\n  hass: HomeAssistant,\n  config: LovelaceConfig\n): string[] => {\n  const usedEntities = computeUsedEntities(config);\n  return Object.keys(hass.states)\n    .filter(\n      (entity) =>\n        !usedEntities.has(entity) &&\n        !EXCLUDED_DOMAINS.includes(entity.split(\".\", 1)[0])\n    )\n    .sort();\n};\n","import {\n  html,\n  LitElement,\n  PropertyDeclarations,\n  TemplateResult,\n} from \"lit-element\";\n\nimport \"./cards/hui-entities-card\";\n\nimport { computeUnusedEntities } from \"./common/compute-unused-entities\";\nimport { createCardElement } from \"./common/create-card-element\";\nimport { HomeAssistant } from \"../../types\";\nimport { LovelaceCard } from \"./types\";\nimport { LovelaceConfig } from \"../../data/lovelace\";\nimport computeDomain from \"../../common/entity/compute_domain\";\n\nexport class HuiUnusedEntities extends LitElement {\n  private _hass?: HomeAssistant;\n  private _config?: LovelaceConfig;\n  private _elements?: LovelaceCard[];\n\n  static get properties(): PropertyDeclarations {\n    return {\n      _hass: {},\n      _config: {},\n    };\n  }\n\n  set hass(hass: HomeAssistant) {\n    this._hass = hass;\n    if (!this._elements) {\n      this._createElements();\n      return;\n    }\n    for (const element of this._elements) {\n      element.hass = this._hass;\n    }\n  }\n\n  public setConfig(config: LovelaceConfig): void {\n    this._config = config;\n    this._createElements();\n  }\n\n  protected render(): TemplateResult | void {\n    if (!this._config || !this._hass) {\n      return html``;\n    }\n\n    return html`\n      ${this.renderStyle()}\n      <div id=\"root\">${this._elements}</div>\n    `;\n  }\n\n  private renderStyle(): TemplateResult {\n    return html`\n      <style>\n        #root {\n          padding: 4px;\n          display: flex;\n          flex-wrap: wrap;\n        }\n        hui-entities-card {\n          max-width: 400px;\n          padding: 4px;\n          flex: 1 auto;\n        }\n      </style>\n    `;\n  }\n\n  private _createElements(): void {\n    if (!this._hass) {\n      return;\n    }\n    const domains: { [domain: string]: string[] } = {};\n    computeUnusedEntities(this._hass, this._config!).forEach((entity) => {\n      const domain = computeDomain(entity);\n\n      if (!(domain in domains)) {\n        domains[domain] = [];\n      }\n      domains[domain].push(entity);\n    });\n    this._elements = Object.keys(domains)\n      .sort()\n      .map((domain) => {\n        const el = createCardElement({\n          type: \"entities\",\n          title: this._hass!.localize(`domain.${domain}`) || domain,\n          entities: domains[domain].map((entity) => ({\n            entity,\n            secondary_info: \"entity-id\",\n          })),\n          show_header_toggle: false,\n        });\n        el.hass = this._hass;\n        return el;\n      });\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-unused-entities\": HuiUnusedEntities;\n  }\n}\ncustomElements.define(\"hui-unused-entities\", HuiUnusedEntities);\n"],"sourceRoot":""}