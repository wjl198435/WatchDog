{"version":3,"sources":["webpack:///./node_modules/@vaadin/vaadin-overlay/theme/lumo/vaadin-overlay-styles.js","webpack:///./node_modules/@vaadin/vaadin-combo-box/theme/lumo/vaadin-combo-box-dropdown-styles.js","webpack:///./node_modules/@vaadin/vaadin-item/theme/lumo/vaadin-item-styles.js","webpack:///./node_modules/@vaadin/vaadin-item/src/vaadin-item-mixin.js","webpack:///./node_modules/@vaadin/vaadin-item/src/vaadin-item.js","webpack:///./node_modules/@vaadin/vaadin-combo-box/theme/lumo/vaadin-combo-box-item-styles.js","webpack:///./node_modules/@vaadin/vaadin-combo-box/src/vaadin-combo-box-placeholder.js","webpack:///./node_modules/@vaadin/vaadin-combo-box/src/vaadin-combo-box-mixin.js","webpack:///./node_modules/@vaadin/vaadin-combo-box/src/vaadin-combo-box-data-provider-mixin.js","webpack:///./node_modules/@polymer/iron-list/iron-list.js","webpack:///./node_modules/@vaadin/vaadin-combo-box/src/vaadin-combo-box-item.js","webpack:///./node_modules/@vaadin/vaadin-combo-box/src/vaadin-combo-box-dropdown.js","webpack:///./node_modules/@vaadin/vaadin-combo-box/src/vaadin-combo-box-dropdown-wrapper.js","webpack:///./node_modules/@vaadin/vaadin-combo-box/src/vaadin-combo-box-light.js"],"names":["$_documentContainer","html","_templateObject","document","head","appendChild","content","vaadin_combo_box_dropdown_styles_templateObject","createElement","innerHTML","ItemMixin","superClass","_superClass","VaadinItemMixin","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","value","_inherits","_createClass","key","get","_hasVaadinItemMixin","disabled","type","Boolean","observer","reflectToAttribute","selected","_value","String","_this2","_get","prototype","attrValue","getAttribute","addEventListener","e","_setFocused","_setActive","_mousedown","mouseUpListener","removeEventListener","_onKeydown","_onKeyup","hasAttribute","setAttribute","blur","removeAttribute","focused","active","event","test","defaultPrevented","preventDefault","click","undefined","textContent","trim","set","ItemElement","ThemableMixin","PolymerElement","vaadin_item_templateObject","customElements","define","is","vaadin_combo_box_item_styles_templateObject","ComboBoxPlaceholder","vaadin_combo_box_placeholder_classCallCheck","ComboBoxMixin","subclass","_subclass","VaadinComboBoxMixinElement","vaadin_combo_box_mixin_classCallCheck","vaadin_combo_box_mixin_possibleConstructorReturn","vaadin_combo_box_mixin_getPrototypeOf","apply","arguments","vaadin_combo_box_mixin_inherits","opened","notify","readonly","renderer","Function","items","Array","allowCustomValue","filteredItems","_lastCommittedValue","loading","_focusedIndex","Number","filter","selectedItem","Object","itemLabelPath","itemValuePath","itemIdPath","name","invalid","_toggleElement","_clearElement","_inputElementValue","_closeOnBlurIsPrevented","_previousDocumentPointerEvents","_itemTemplate","vaadin_combo_box_mixin_get","dropdown","$","overlay","relatedTarget","composedPath","focus","close","IronA11yAnnouncer","requestAvailability","_overlaySelectedItemChanged","bind","_onClosed","_onOpened","_onKeyDown","_onClick","_onOverlayTouchAction","_clear","_observer","FlattenedNodesObserver","info","_setTemplateFromNodes","addedNodes","_selector","querySelectorAll","forEach","item","_render","nodes","node","localName","template","oldTemplate","oldRenderer","_removeNewRendererOrTemplate","_oldTemplate","_oldRenderer","Error","old","_openedWithFocusRing","focusElement","touchDevice","inputElement","path","indexOf","open","_isEventKey","_onArrowDown","_onArrowUp","_onEnter","_onEscape","k","IronA11yKeysBehavior","keyboardEventMatchesKeys","getItemLabel","toString","_items","Math","min","length","_prefillFocusedItemLabel","max","setTimeout","_getItemLabel","_focusedItem","_markAllSelectionRange","start","end","input","_nativeInput","setSelectionRange","ignore","_setSelectionRange","pos","_stopPropagation","_revertInputValue","cancel","toggleElement","_detectAndDispatchChange","_revertInputValueToValue","_this3","flush","ensureItemsRendered","toggleScrollListener","updateViewportBoundaries","_increasePoolIfNeeded","_resizeDropdown","window","requestAnimationFrame","adjustScrollPosition","focusedItem","CustomEvent","detail","composed","cancelable","bubbles","dispatchEvent","customValue","_selectItemForValue","_clearSelectionRange","dataProvider","_propertyForValue","_filterFromInput","_filterChanged","oldItemLabelPath","console","error","_filterItems","_filteredItemsChanged","notifyResize","hasValue","_updateHasValue","_getItemValue","_selectedItem","oldVal","_isValidValue","oldItems","_this4","_ensureItemsOrDataProvider","slice","valueIndex","_indexOfValue","_setOverlayItems","indexOfLabel","_repositionOverlay","arr","_this5","toLowerCase","previouslySelectedItem","_selectedItemChanged","_this6","i","stopPropagation","checkValidity","validate","_TemplateClass","tpl","_getRootTemplate","templatize","instanceProps","_instanceProps","forwardHostProp","prop","_itemTemplateInstance","notifyPath","children","elem","tagName","_preventDefault","index","ComboBoxDataProviderMixin","DataProviderMixin","vaadin_combo_box_data_provider_mixin_classCallCheck","vaadin_combo_box_data_provider_mixin_possibleConstructorReturn","vaadin_combo_box_data_provider_mixin_getPrototypeOf","vaadin_combo_box_data_provider_mixin_inherits","pageSize","size","_pendingRequests","__placeHolder","clearCache","vaadin_combo_box_data_provider_mixin_get","page","_getPageForIndex","_shouldLoadPage","_loadPage","_forceNextRequest","loadedItem","params","callback","splice","concat","_toConsumableArray","keys","floor","push","oldPageSize","oldDataProvider","restoreOldValueCallback","warn","IOS","navigator","userAgent","match","IOS_TOUCH_SCROLLING","Polymer","_template","iron_list_templateObject","properties","as","indexAs","selectedAs","grid","selectionEnabled","selectedItems","multiSelection","scrollOffset","observers","behaviors","Templatizer","IronResizableBehavior","IronScrollTargetBehavior","OptionalMutableDataBehavior","_ratio","_scrollerPaddingTop","_scrollPosition","_physicalSize","_physicalAverage","_physicalAverageCount","_physicalTop","_virtualCount","_estScrollHeight","_scrollHeight","_viewportHeight","_viewportWidth","_physicalItems","_physicalSizes","_firstVisibleIndexVal","_lastVisibleIndexVal","_maxPages","_focusedVirtualIndex","_focusedPhysicalIndex","_offscreenFocusedItem","_focusBackfillItem","_itemsPerRow","_itemWidth","_rowHeight","_templateCost","_parentModel","_physicalBottom","_scrollBottom","_virtualEnd","_virtualStart","_physicalCount","_hiddenContentSize","_physicalRows","_itemsParent","dom","_userTemplate","parentNode","_maxScrollTop","_scrollOffset","_maxVirtualStart","virtualCount","_convertIndexToCompleteRow","val","_clamp","_virtualStartVal","_physicalStart","_physicalStartVal","_physicalEnd","_physicalCountVal","_optPhysicalSize","Infinity","_isVisible","offsetWidth","offsetHeight","firstVisibleIndex","idx","physicalOffset","_iterateItems","pidx","vidx","_getPhysicalSizeIncrement","lastVisibleIndex","_estRowsInView","_defaultScrollTarget","_virtualRowCount","ceil","ready","_didFocus","attached","_debounce","animationFrame","listen","detached","unlisten","_setOverflow","scrollTarget","style","webkitOverflowScrolling","overflowY","styles","getComputedStyle","parseInt","_isRTL","direction","_scrollTargetHeight","_updateGridMetrics","_scrollHandler","scrollTop","_scrollTop","delta","isScrollingDown","abs","idxAdjustment","round","_update","reusables","_getReusables","physicalTop","indexes","microTask","fromTop","ith","offsetContent","physicalItemHeight","idxs","protectedOffsetContent","virtualStart","virtualEnd","physicalCount","top","bottom","scrollBottom","itemSet","movingUp","_manageFocus","_assignModels","_updateMetrics","pop","_positionItems","_updateScrollerSize","_createPool","inst","_ensureTemplatized","physicalItems","stamp","root","querySelector","_isClientFull","count","nextPhysicalCount","correction","nextIncrease","ts","performance","now","_isIndexRendered","_getPhysicalIndex","idlePeriod","isAttached","ctor","queryEffectiveChildren","tabIndex","mutableData","_gridChanged","newGrid","oldGrid","_itemsChanged","change","_physicalIndexForKey","_resetScrollPosition","_removeFocusedItem","_adjustVirtualIndex","indexSplices","some","addedCount","removed","activeElement","_getActiveElement","contains","affectedIndexRendered","_forwardItemPath","isIndexRendered","dot","offscreenInstance","modelForElement","substring","_setPendingPropertyOrPath","_flushProperties","splices","_removeItem","selector","deselect","fn","rtn","_computeVidx","el","__key__","_forwardProperty","isSelected","newPhysicalSize","oldPhysicalSize","prevAvgCount","prevPhysicalAvg","getBoundingClientRect","width","_adjustScrollPosition","y","totalItemWidth","rowOffset","modulus","x","translate3d","_shouldRenderNextRow","deltaHeight","forceUpdate","height","scrollToItem","scrollToIndex","currentTopItem","currentVirtualItem","targetOffsetTop","hiddenContentSize","_resetAverage","_resizeHandler","selectItem","selectIndex","clearSelection","model","updateSizeForIndex","deselectItem","deselectIndex","toggleSelectionForItem","toggleSelectionForIndex","isIndexSelected","_selectionEnabledChanged","_selectionHandler","target","modelTabIndex","activeElTabIndex","activeEl","physicalItem","_multiSelectionChanged","multi","updateSizeForItem","fidx","_restoreFocusedItem","_createFocusBackfillItem","_isIndexVisible","focusItem","_focusPhysicalItem","focusable","removeChild","fpidx","onScreenItem","onScreenInstance","offScreenInstance","targetModel","focusedModel","hasOffscreenFocusedItem","_keydownHandler","keyCode","v","cb","asyncModule","_debouncers","Debouncer","debounce","enqueueDebouncer","_setPendingProperty","_forwardHostPropV2","_notifyInstancePropV2","matches","translate","_getStampedChildren","_forwardInstancePath","_forwardParentPath","_forwardParentProp","itemsHost","domHost","ComboBoxItemElement","vaadin_combo_box_item_templateObject","label","vaadin_combo_box_item_get","vaadin_combo_box_item_getPrototypeOf","comboBoxOverlay","getRootNode","host","__dataHost","_comboBox","variable","ComboBoxOverlayElement","OverlayElement","vaadin_combo_box_dropdown_get","vaadin_combo_box_dropdown_getPrototypeOf","loader","shadowRoot","insertBefore","ComboBoxDropdownElement","vaadin_combo_box_dropdown_classCallCheck","vaadin_combo_box_dropdown_possibleConstructorReturn","_boundSetPosition","_setPosition","vaadin_combo_box_dropdown_assertThisInitialized","_boundOutsideClickListener","_outsideClickListener","DisableUpgradeMixin","mixinBehaviors","vaadin_combo_box_dropdown_templateObject","positionTarget","alignedAbove","theme","oldValue","position","_isPositionFixed","eventPath","element","offsetParent","_getOffsetParent","assignedSlot","parentElement","parent","nodeType","overlayRect","targetRect","innerHeight","body","_shouldAlignAbove","_translateX","left","_translateY","_verticalOffset","_devicePixelRatio","devicePixelRatio","transform","clientWidth","justifyContent","TOUCH_DEVICE","createEvent","ComboBoxDropdownWrapperElement","vaadin_combo_box_dropdown_wrapper_templateObject","computed","_itemLabelPath","_itemValuePath","_itemIdPath","sourceEvent","_initDropdown","_templateChanged","_loadingChanged","_fireTouchAction","_scroller","_patchWheelOverScrolling","maxHeight","ShadyCSS","getComputedStyleValue","getPropertyValue","_maxOverlayHeight","scrollHeight","focusedIndex","itemIndex","_isItemFocused","_scrollIntoView","visibleItemsCount","_visibleItemsCount","targetIndex","physicalItemRect","scrollerRect","scrollTopAdjust","_viewportTotalPaddingBottom","scroller","scrolledToTop","scrolledToBottom","clientHeight","deltaY","_cachedViewportTotalPaddingBottom","flushDebouncer","itemsChange","itemsStyle","paddingBottom","borderBottomWidth","map","reduce","sum","ComboBoxLightElement","vaadin_combo_box_light_classCallCheck","vaadin_combo_box_light_getPrototypeOf","_boundInputValueChanged","_inputValueChanged","vaadin_combo_box_light_assertThisInitialized","ThemePropertyMixin","vaadin_combo_box_light_templateObject","attrForValue","Element","readOnly","vaadin_combo_box_light_get","_setInputElement","_preventInputBlur","_restoreInputBlur","dashToCamelCase"],"mappings":"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","file":"chunk.d7de1f427b92d1014cc0.js","sourcesContent":["import '@vaadin/vaadin-lumo-styles/mixins/overlay.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\n\nconst $_documentContainer = html`<dom-module id=\"lumo-vaadin-overlay\" theme-for=\"vaadin-overlay\">\n  <template>\n    <style include=\"lumo-overlay\">\n      /* stylelint-disable no-empty-source */\n    </style>\n  </template>\n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer.content);\n","import '@vaadin/vaadin-lumo-styles/color.js';\nimport '@vaadin/vaadin-lumo-styles/spacing.js';\nimport '@vaadin/vaadin-lumo-styles/style.js';\nimport '@vaadin/vaadin-overlay/theme/lumo/vaadin-overlay.js';\nimport '@vaadin/vaadin-lumo-styles/mixins/menu-overlay.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\n\nconst $_documentContainer = html`<dom-module id=\"lumo-combo-box-overlay\" theme-for=\"vaadin-combo-box-overlay\">\n  <template>\n    <style include=\"lumo-overlay lumo-menu-overlay-core\">\n      [part=\"content\"] {\n        padding: 0;\n      }\n\n      :host {\n        /* TODO: using a legacy mixin (unsupported) */\n        --iron-list-items-container: {\n          border-width: var(--lumo-space-xs);\n          border-style: solid;\n          border-color: transparent;\n        };\n      }\n\n      /* TODO: workaround ShadyCSS issue when using inside of the dom-if */\n      :host([opened]) {\n        --iron-list-items-container_-_border-width: var(--lumo-space-xs);\n        --iron-list-items-container_-_border-style: solid;\n        --iron-list-items-container_-_border-color: transparent;\n      }\n\n      /* Loading state */\n\n      /* When items are empty, the sinner needs some room */\n      :host(:not([closing])) [part~=\"content\"] {\n        min-height: calc(2 * var(--lumo-space-s) + var(--lumo-icon-size-s));\n      }\n\n      [part~=\"overlay\"] {\n        position: relative;\n      }\n\n      :host([loading]) [part~=\"loader\"] {\n        box-sizing: border-box;\n        width: var(--lumo-icon-size-s);\n        height: var(--lumo-icon-size-s);\n        position: absolute;\n        z-index: 1;\n        left: var(--lumo-space-s);\n        right: var(--lumo-space-s);\n        top: var(--lumo-space-s);\n        margin-left: auto;\n        margin-inline-start: auto;\n        margin-inline-end: 0;\n        border: 2px solid transparent;\n        border-color:\n          var(--lumo-primary-color-50pct)\n          var(--lumo-primary-color-50pct)\n          var(--lumo-primary-color)\n          var(--lumo-primary-color);\n        border-radius: calc(0.5 * var(--lumo-icon-size-s));\n        opacity: 0;\n        animation:\n          1s linear infinite lumo-combo-box-loader-rotate,\n          .3s .1s lumo-combo-box-loader-fade-in both;\n        pointer-events: none;\n      }\n\n      @keyframes lumo-combo-box-loader-fade-in {\n        0% {\n          opacity: 0;\n        }\n\n        100% {\n          opacity: 1;\n        }\n      }\n\n      @keyframes lumo-combo-box-loader-rotate {\n        0% {\n          transform: rotate(0deg);\n        }\n\n        100% {\n          transform: rotate(360deg);\n        }\n      }\n    </style>\n  </template>\n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer.content);\n","import '@vaadin/vaadin-lumo-styles/font-icons.js';\nimport '@vaadin/vaadin-lumo-styles/sizing.js';\nimport '@vaadin/vaadin-lumo-styles/spacing.js';\nimport '@vaadin/vaadin-lumo-styles/style.js';\nimport '@vaadin/vaadin-lumo-styles/typography.js';\nconst $_documentContainer = document.createElement('template');\n\n$_documentContainer.innerHTML = `<dom-module id=\"lumo-item\" theme-for=\"vaadin-item\">\n  <template>\n    <style>\n      :host {\n        display: flex;\n        align-items: center;\n        box-sizing: border-box;\n        font-family: var(--lumo-font-family);\n        font-size: var(--lumo-font-size-m);\n        line-height: var(--lumo-line-height-xs);\n        padding: 0.5em 1em;\n        min-height: var(--lumo-size-m);\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n        -webkit-tap-highlight-color: transparent;\n      }\n\n      /* Selectable items have a checkmark icon */\n      :host([tabindex])::before {\n        display: var(--_lumo-item-selected-icon-display, none);\n        content: var(--lumo-icons-checkmark);\n        font-family: lumo-icons;\n        font-size: var(--lumo-icon-size-m);\n        line-height: 1;\n        font-weight: normal;\n        width: 1em;\n        height: 1em;\n        margin: calc((1 - var(--lumo-line-height-xs)) * var(--lumo-font-size-m) / 2) 0;\n        color: var(--lumo-primary-text-color);\n        flex: none;\n        opacity: 0;\n        transition: transform 0.2s cubic-bezier(.12, .32, .54, 2), opacity 0.1s;\n      }\n\n      :host([selected])::before {\n        opacity: 1;\n      }\n\n      :host([active]:not([selected]))::before {\n        transform: scale(0.8);\n        opacity: 0;\n        transition-duration: 0s;\n      }\n\n      [part=\"content\"] {\n        flex: auto;\n      }\n\n      /* Disabled item */\n\n      :host([disabled]) {\n        color: var(--lumo-disabled-text-color);\n        cursor: default;\n        pointer-events: none;\n      }\n\n      /* Slotted icons */\n\n      :host ::slotted(iron-icon) {\n        width: var(--lumo-icon-size-m);\n        height: var(--lumo-icon-size-m);\n      }\n    </style>\n  </template>\n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer.content);\n","/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\n/**\n * A mixin providing `focused`, `focus-ring`, `active`, `disabled` and `selected`.\n *\n * `focused`, `active` and `focus-ring` are set as only as attributes.\n * @polymerMixin\n */\nexport const ItemMixin = superClass => class VaadinItemMixin extends superClass {\n  static get properties() {\n    return {\n\n      /**\n       * Used for mixin detection because `instanceof` does not work with mixins.\n       * e.g. in VaadinListMixin it filters items by using the\n       * `element._hasVaadinItemMixin` condition.\n       */\n      _hasVaadinItemMixin: {\n        value: true\n      },\n\n      /**\n       * If true, the user cannot interact with this element.\n       */\n      disabled: {\n        type: Boolean,\n        value: false,\n        observer: '_disabledChanged',\n        reflectToAttribute: true\n      },\n\n      /**\n       * If true, the item is in selected state.\n       */\n      selected: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true,\n        observer: '_selectedChanged'\n      },\n\n      _value: String\n    };\n  }\n\n  constructor() {\n    super();\n\n    /**\n     * Submittable string value. The default value is the trimmed text content of the element.\n     * @type {string}\n     */\n    this.value;\n  }\n\n  get value() {\n    return this._value !== undefined ? this._value : this.textContent.trim();\n  }\n\n  set value(value) {\n    this._value = value;\n  }\n\n  ready() {\n    super.ready();\n\n    const attrValue = this.getAttribute('value');\n    if (attrValue !== null) {\n      this.value = attrValue;\n    }\n\n    this.addEventListener('focus', e => this._setFocused(true), true);\n    this.addEventListener('blur', e => this._setFocused(false), true);\n    this.addEventListener('mousedown', e => {\n      this._setActive(this._mousedown = true);\n      const mouseUpListener = () => {\n        this._setActive(this._mousedown = false);\n        document.removeEventListener('mouseup', mouseUpListener);\n      };\n      document.addEventListener('mouseup', mouseUpListener);\n    });\n    this.addEventListener('keydown', e => this._onKeydown(e));\n    this.addEventListener('keyup', e => this._onKeyup(e));\n  }\n\n  /**\n   * @protected\n   */\n  disconnectedCallback() {\n    super.disconnectedCallback();\n\n    // in Firefox and Safari, blur does not fire on the element when it is removed,\n    // especially between keydown and keyup events, being active at the same time.\n    // reproducible in `<vaadin-dropdown-menu>` when closing overlay on select.\n    if (this.hasAttribute('active')) {\n      this._setFocused(false);\n    }\n  }\n\n  _selectedChanged(selected) {\n    this.setAttribute('aria-selected', selected);\n  }\n\n  _disabledChanged(disabled) {\n    if (disabled) {\n      this.selected = false;\n      this.setAttribute('aria-disabled', 'true');\n      this.blur();\n    } else {\n      this.removeAttribute('aria-disabled');\n    }\n  }\n\n  _setFocused(focused) {\n    if (focused) {\n      this.setAttribute('focused', '');\n      if (!this._mousedown) {\n        this.setAttribute('focus-ring', '');\n      }\n    } else {\n      this.removeAttribute('focused');\n      this.removeAttribute('focus-ring');\n      this._setActive(false);\n    }\n  }\n\n  _setActive(active) {\n    if (active) {\n      this.setAttribute('active', '');\n    } else {\n      this.removeAttribute('active');\n    }\n  }\n\n  _onKeydown(event) {\n    if (/^( |SpaceBar|Enter)$/.test(event.key) && !event.defaultPrevented) {\n      event.preventDefault();\n      this._setActive(true);\n    }\n  }\n\n  _onKeyup(event) {\n    if (this.hasAttribute('active')) {\n      this._setActive(false);\n      this.click();\n    }\n  }\n};\n","/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { ItemMixin } from './vaadin-item-mixin.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\n/**\n * `<vaadin-item>` is a Web Component providing layout for items in tabs and menus.\n *\n * ```\n *   <vaadin-item>\n *     Item content\n *   </vaadin-item>\n * ```\n *\n * ### Selectable\n *\n * `<vaadin-item>` has the `selected` property and the corresponding state attribute.\n * Currently, the component sets the `selected` to false, when `disabled` property is set to true.\n * But other than that, the `<vaadin-item>` does not switch selection by itself.\n * In general, it is the wrapper component, like `<vaadin-list-box>`, which should update\n * the `selected` property on the items, e. g. on mousedown or when Enter / Spacebar is pressed.\n *\n * ### Styling\n *\n * The following shadow DOM parts are available for styling:\n *\n * Part name | Description\n * ---|---\n * `content` | The element that wraps the slot\n *\n * The following state attributes are available for styling:\n *\n * Attribute  | Description | Part name\n * -----------|-------------|------------\n * `disabled` | Set to a disabled item | :host\n * `focused` | Set when the element is focused | :host\n * `focus-ring` | Set when the element is keyboard focused | :host\n * `selected` | Set when the item is selected | :host\n * `active` | Set when mousedown or enter/spacebar pressed | :host\n *\n * @memberof Vaadin\n * @mixes Vaadin.ItemMixin\n * @mixes Vaadin.ThemableMixin\n */\nclass ItemElement extends ItemMixin(ThemableMixin(PolymerElement)) {\n  static get template() {\n    return html`\n    <style>\n      :host {\n        display: inline-block;\n      }\n\n      :host([hidden]) {\n        display: none !important;\n      }\n    </style>\n    <div part=\"content\">\n      <slot></slot>\n    </div>\n`;\n  }\n\n  static get is() {\n    return 'vaadin-item';\n  }\n\n  static get version() {\n    return '2.1.0';\n  }\n}\n\ncustomElements.define(ItemElement.is, ItemElement);\n\nexport { ItemElement };\n","import '@vaadin/vaadin-lumo-styles/color.js';\nimport '@vaadin/vaadin-lumo-styles/spacing.js';\nimport '@vaadin/vaadin-lumo-styles/style.js';\nimport '@vaadin/vaadin-item/theme/lumo/vaadin-item.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\n\nconst $_documentContainer = html`<dom-module id=\"lumo-combo-box-item\" theme-for=\"vaadin-combo-box-item\">\n  <template>\n    <style include=\"lumo-item\">\n      /* TODO partly duplicated from vaadin-list-box styles. Should find a way to make it DRY */\n\n      :host {\n        cursor: default;\n        -webkit-tap-highlight-color: var(--lumo-primary-color-10pct);\n        padding-left: calc(var(--lumo-border-radius) / 4);\n        padding-right: calc(var(--lumo-space-l) + var(--lumo-border-radius) / 4);\n        transition: background-color 100ms;\n        border-radius: var(--lumo-border-radius);\n        overflow: hidden;\n        --_lumo-item-selected-icon-display: block;\n      }\n\n      /* ShadyCSS workaround (show the selected item checkmark) */\n      :host::before {\n        display: block;\n      }\n\n      :host(:hover) {\n        background-color: var(--lumo-primary-color-10pct);\n      }\n\n      :host([focused]:not([disabled])) {\n        box-shadow: inset 0 0 0 2px var(--lumo-primary-color-50pct);\n      }\n\n      @media (pointer: coarse) {\n        :host(:hover) {\n          background-color: transparent;\n        }\n\n        :host([focused]:not([disabled])) {\n          box-shadow: none;\n        }\n      }\n    </style>\n  </template>\n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer.content);\n","/**\n@license\nCopyright (c) 2018 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\n/*\n * Placeholder object class representing items being loaded.\n *\n * @private\n */\nexport const ComboBoxPlaceholder = class ComboBoxPlaceholder {\n  toString() {\n    return '';\n  }\n};\n","/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport '@polymer/polymer/lib/utils/async.js';\n\nimport { flush } from '@polymer/polymer/lib/utils/flush.js';\nimport { templatize } from '@polymer/polymer/lib/utils/templatize.js';\nimport { IronA11yAnnouncer } from '@polymer/iron-a11y-announcer/iron-a11y-announcer.js';\nimport { IronA11yKeysBehavior } from '@polymer/iron-a11y-keys-behavior/iron-a11y-keys-behavior.js';\nimport { FlattenedNodesObserver } from '@polymer/polymer/lib/utils/flattened-nodes-observer.js';\nimport { ComboBoxPlaceholder } from './vaadin-combo-box-placeholder.js';\n\n/**\n * @polymerMixin\n */\nexport const ComboBoxMixin = subclass => class VaadinComboBoxMixinElement extends subclass {\n\n  static get properties() {\n    return {\n      /**\n       * True if the dropdown is open, false otherwise.\n       */\n      opened: {\n        type: Boolean,\n        notify: true,\n        value: false,\n        reflectToAttribute: true,\n        observer: '_openedChanged'\n      },\n\n      /**\n       * Set to true to disable this element.\n       */\n      disabled: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      },\n\n      /**\n       * When present, it specifies that the element field is read-only.\n       */\n      readonly: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      },\n\n      /**\n       * Custom function for rendering the content of every item.\n       * Receives three arguments:\n       *\n       * - `root` The `<vaadin-combo-box-item>` internal container DOM element.\n       * - `comboBox` The reference to the `<vaadin-combo-box>` element.\n       * - `model` The object with the properties related with the rendered\n       *   item, contains:\n       *   - `model.index` The index of the rendered item.\n       *   - `model.item` The item.\n       */\n      renderer: Function,\n\n      /**\n       * A full set of items to filter the visible options from.\n       * The items can be of either `String` or `Object` type.\n       */\n      items: {\n        type: Array,\n        observer: '_itemsChanged'\n      },\n\n      /**\n       * If `true`, the user can input a value that is not present in the items list.\n       * `value` property will be set to the input value in this case.\n       * Also, when `value` is set programmatically, the input value will be set\n       * to reflect that value.\n       */\n      allowCustomValue: {\n        type: Boolean,\n        value: false\n      },\n\n      /**\n       * A subset of items, filtered based on the user input. Filtered items\n       * can be assigned directly to omit the internal filtering functionality.\n       * The items can be of either `String` or `Object` type.\n       */\n      filteredItems: {\n        type: Array\n      },\n\n      /**\n       * The `String` value for the selected item of the combo box. Provides\n       * the value for `iron-form`.\n       *\n       * When there’s no item selected, the value is an empty string.\n       *\n       * Use `selectedItem` property to get the raw selected item from\n       * the `items` array.\n       */\n      value: {\n        type: String,\n        observer: '_valueChanged',\n        notify: true,\n        value: ''\n      },\n\n      /**\n       * Used to detect user value changes and fire `change` events.\n       */\n      _lastCommittedValue: String,\n\n      /*\n       * When set to `true`, \"loading\" attribute is added to host and the overlay element.\n       */\n      loading: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      },\n\n      _focusedIndex: {\n        type: Number,\n        value: -1\n      },\n\n      /**\n       * Filtering string the user has typed into the input field.\n       */\n      filter: {\n        type: String,\n        value: '',\n        notify: true\n      },\n\n      /**\n       * The selected item from the `items` array.\n       */\n      selectedItem: {\n        type: Object,\n        notify: true\n      },\n\n      /**\n       * Path for label of the item. If `items` is an array of objects, the\n       * `itemLabelPath` is used to fetch the displayed string label for each\n       * item.\n       *\n       * The item label is also used for matching items when processing user\n       * input, i.e., for filtering and selecting items.\n       *\n       * When using item templates, the property is still needed because it is used\n       * for filtering, and for displaying the selected item value in the input box.\n       */\n      itemLabelPath: {\n        type: String,\n        value: 'label',\n        observer: '_itemLabelPathChanged'\n      },\n\n      /**\n       * Path for the value of the item. If `items` is an array of objects, the\n       * `itemValuePath:` is used to fetch the string value for the selected\n       * item.\n       *\n       * The item value is used in the `value` property of the combo box,\n       * to provide the form value.\n       */\n      itemValuePath: {\n        type: String,\n        value: 'value'\n      },\n\n      /**\n       * Path for the id of the item. If `items` is an array of objects,\n       * the `itemIdPath` is used to compare and identify the same item\n       * in `selectedItem` and `filteredItems` (items given by the\n       * `dataProvider` callback).\n       */\n      itemIdPath: String,\n\n      /**\n       * The name of this element.\n       */\n      name: {\n        type: String\n      },\n\n      /**\n       * Set to true if the value is invalid.\n       */\n      invalid: {\n        type: Boolean,\n        reflectToAttribute: true,\n        notify: true,\n        value: false\n      },\n\n      _toggleElement: Object,\n      _clearElement: Object,\n\n      _inputElementValue: String,\n\n      _closeOnBlurIsPrevented: Boolean,\n\n      _previousDocumentPointerEvents: String,\n\n      _itemTemplate: Object\n    };\n  }\n\n  static get observers() {\n    return [\n      '_filterChanged(filter, itemValuePath, itemLabelPath)',\n      '_itemsOrPathsChanged(items.*, itemValuePath, itemLabelPath)',\n      '_filteredItemsChanged(filteredItems.*, itemValuePath, itemLabelPath)',\n      '_templateOrRendererChanged(_itemTemplate, renderer)',\n      '_loadingChanged(loading)',\n      '_selectedItemChanged(selectedItem, itemLabelPath)',\n      '_toggleElementChanged(_toggleElement)'\n    ];\n  }\n\n  ready() {\n    super.ready();\n\n    this.addEventListener('focusout', e => {\n      // Fixes the problem with `focusout` happening when clicking on the scroll bar on Edge\n      const dropdown = this.$.overlay.$.dropdown;\n      if (dropdown && dropdown.$ && e.relatedTarget === dropdown.$.overlay) {\n        e.composedPath()[0].focus();\n        return;\n      }\n      if (!this._closeOnBlurIsPrevented) {\n        this.close();\n      }\n    });\n\n    this._lastCommittedValue = this.value;\n    IronA11yAnnouncer.requestAvailability();\n\n    // 2.0 does not support 'overlay.selection-changed' syntax in listeners\n    this.$.overlay.addEventListener('selection-changed', this._overlaySelectedItemChanged.bind(this));\n\n    this.addEventListener('vaadin-combo-box-dropdown-closed', this._onClosed.bind(this));\n    this.addEventListener('vaadin-combo-box-dropdown-opened', this._onOpened.bind(this));\n    this.addEventListener('keydown', this._onKeyDown.bind(this));\n    this.addEventListener('click', this._onClick.bind(this));\n\n    this.$.overlay.addEventListener('vaadin-overlay-touch-action', this._onOverlayTouchAction.bind(this));\n\n    this.addEventListener('touchend', e => {\n      if (!this._clearElement || e.composedPath()[0] !== this._clearElement) {\n        return;\n      }\n\n      e.preventDefault();\n      this._clear();\n    });\n\n    this._observer = new FlattenedNodesObserver(this, info => {\n      this._setTemplateFromNodes(info.addedNodes);\n    });\n  }\n\n\n  /**\n   * Manually invoke existing renderer.\n   */\n  render() {\n    if (this.$.overlay._selector) {\n      this.$.overlay._selector.querySelectorAll('vaadin-combo-box-item').forEach(item => item._render());\n    }\n  }\n\n  _setTemplateFromNodes(nodes) {\n    this._itemTemplate = nodes.filter(node => node.localName && node.localName === 'template')[0] || this._itemTemplate;\n  }\n\n  _removeNewRendererOrTemplate(template, oldTemplate, renderer, oldRenderer) {\n    if (template !== oldTemplate) {\n      this._itemTemplate = undefined;\n    } else if (renderer !== oldRenderer) {\n      this.renderer = undefined;\n    }\n  }\n\n  _templateOrRendererChanged(template, renderer) {\n    if (template && renderer) {\n      this._removeNewRendererOrTemplate(template, this._oldTemplate, renderer, this._oldRenderer);\n      throw new Error('You should only use either a renderer or a template for combo box items');\n    }\n\n    this._oldTemplate = template;\n    this._oldRenderer = renderer;\n  }\n\n  /**\n   * Opens the dropdown list.\n   */\n  open() {\n    // Prevent _open() being called when input is disabled or read-only\n    if (!this.disabled && !this.readonly) {\n      this.opened = true;\n    }\n  }\n\n  /**\n   * Closes the dropdown list.\n   */\n  close() {\n    this.opened = false;\n  }\n\n  _openedChanged(value, old) {\n    // Prevent _close() being called when opened is set to its default value (false).\n    if (old === undefined) {\n      return;\n    }\n\n    if (this.opened) {\n      this._openedWithFocusRing = this.hasAttribute('focus-ring') || (this.focusElement && this.focusElement.hasAttribute('focus-ring'));\n      // For touch devices, we don't want to popup virtual keyboard on touch devices unless input\n      // is explicitly focused by the user.\n      if (!this.$.overlay.touchDevice) {\n        // Check to see if there is a focused property and if it's already true.\n        if (!this.focused) {\n          this.focus();\n        }\n      }\n    } else {\n      if (this._openedWithFocusRing && this.hasAttribute('focused')) {\n        this.focusElement.setAttribute('focus-ring', '');\n      }\n      this._onClosed();\n    }\n  }\n\n  _onOverlayTouchAction(event) {\n    // On touch devices, blur the input on touch start inside the overlay, in order to hide\n    // the virtual keyboard. But don't close the overlay on this blur.\n    this._closeOnBlurIsPrevented = true;\n    this.inputElement.blur();\n    this._closeOnBlurIsPrevented = false;\n  }\n\n  _onClick(e) {\n    this._closeOnBlurIsPrevented = true;\n\n    const path = e.composedPath();\n    if (path.indexOf(this._clearElement) !== -1) {\n      this._clear();\n      this.focus();\n    } else if (path.indexOf(this.inputElement) !== -1) {\n      if (path.indexOf(this._toggleElement) > -1 && this.opened) {\n        this.close();\n      } else {\n        this.open();\n      }\n    }\n\n    this._closeOnBlurIsPrevented = false;\n  }\n\n  /**\n   * Keyboard navigation\n   */\n\n  _onKeyDown(e) {\n    if (this._isEventKey(e, 'down')) {\n      this._closeOnBlurIsPrevented = true;\n      this._onArrowDown();\n      this._closeOnBlurIsPrevented = false;\n\n      // prevent caret from moving\n      e.preventDefault();\n    } else if (this._isEventKey(e, 'up')) {\n      this._closeOnBlurIsPrevented = true;\n      this._onArrowUp();\n      this._closeOnBlurIsPrevented = false;\n\n      // prevent caret from moving\n      e.preventDefault();\n    } else if (this._isEventKey(e, 'enter')) {\n      this._onEnter(e);\n    } else if (this._isEventKey(e, 'esc')) {\n      this._onEscape(e);\n    }\n  }\n\n  _isEventKey(e, k) {\n    return IronA11yKeysBehavior.keyboardEventMatchesKeys(e, k);\n  }\n\n  _getItemLabel(item) {\n    return this.$.overlay.getItemLabel(item);\n  }\n\n  _getItemValue(item) {\n    let value = item && this.itemValuePath ? this.get(this.itemValuePath, item) : undefined;\n    if (value === undefined) {\n      value = item ? item.toString() : '';\n    }\n    return value;\n  }\n\n  _onArrowDown() {\n    if (this.opened) {\n      if (this.$.overlay._items) {\n        this._focusedIndex = Math.min(this.$.overlay._items.length - 1, this._focusedIndex + 1);\n        this._prefillFocusedItemLabel();\n      }\n    } else {\n      this.open();\n    }\n  }\n\n  _onArrowUp() {\n    if (this.opened) {\n      if (this._focusedIndex > -1) {\n        this._focusedIndex = Math.max(0, this._focusedIndex - 1);\n      } else {\n        if (this.$.overlay._items) {\n          this._focusedIndex = this.$.overlay._items.length - 1;\n        }\n      }\n\n      this._prefillFocusedItemLabel();\n    } else {\n      this.open();\n    }\n  }\n\n  _prefillFocusedItemLabel() {\n    if (this._focusedIndex > -1) {\n      // Reset the input value asyncronously to prevent partial value changes\n      // announce. Makes OSX VoiceOver to announce the complete value instead.\n      this._inputElementValue = '';\n      // 1ms delay needed for OSX VoiceOver to realise input value was reset\n      setTimeout(() => {\n        this._inputElementValue = this._getItemLabel(this.$.overlay._focusedItem);\n        this._markAllSelectionRange();\n      }, 1);\n    }\n  }\n\n  _setSelectionRange(start, end) {\n    // vaadin-text-field does not implement setSelectionRange, hence we need the native input\n    const input = this._nativeInput || this.inputElement;\n\n    // Setting selection range focuses and/or moves the caret in some browsers,\n    // and there's no need to modify the selection range if the input isn't focused anyway.\n    // This affects Safari. When the overlay is open, and then hiting tab, browser should focus\n    // the next focusable element instead of the combo-box itself.\n    // Checking the focused property here is enough instead of checking the activeElement.\n    if (this.hasAttribute('focused') && input && input.setSelectionRange) {\n      try {\n        input.setSelectionRange(start, end);\n      } catch (ignore) {\n        // IE11 randomly fails when running tests in Sauce.\n      }\n    }\n  }\n\n  _markAllSelectionRange() {\n    if (this._inputElementValue !== undefined) {\n      this._setSelectionRange(0, this._inputElementValue.length);\n    }\n  }\n\n  _clearSelectionRange() {\n    if (this._inputElementValue !== undefined) {\n      const pos = this._inputElementValue ? this._inputElementValue.length : 0;\n      this._setSelectionRange(pos, pos);\n    }\n  }\n\n  _onEnter(e) {\n    // should close on enter when custom values are allowed, input field is cleared, or when an existing\n    // item is focused with keyboard.\n    if (this.opened && (this.allowCustomValue || this._inputElementValue === '' || this._focusedIndex > -1)) {\n      this.close();\n\n      // Do not submit the surrounding form.\n      e.preventDefault();\n    }\n  }\n\n  _onEscape(e) {\n    if (this.opened) {\n      this._stopPropagation(e);\n\n      if (this._focusedIndex > -1) {\n        this._focusedIndex = -1;\n        this._revertInputValue();\n      } else {\n        this.cancel();\n      }\n    }\n  }\n\n  _toggleElementChanged(toggleElement) {\n    if (toggleElement) {\n      // Don't blur the input on toggle mousedown\n      toggleElement.addEventListener('mousedown', e => e.preventDefault());\n    }\n  }\n\n  /**\n   * Clears the current value.\n   */\n  _clear() {\n    this.selectedItem = null;\n\n    if (this.allowCustomValue) {\n      this.value = '';\n    }\n\n    if (!this.opened) {\n      this._detectAndDispatchChange();\n    }\n  }\n\n  /**\n   * Reverts back to original value.\n   */\n  cancel() {\n    this._revertInputValueToValue();\n    // In the next _detectAndDispatchChange() call, the change detection should not pass\n    this._lastCommittedValue = this.value;\n    this.close();\n  }\n\n  _onOpened() {\n    // Pre P2 iron-list used a debouncer to render. Now that we synchronously render items,\n    // we need to flush the DOM to make sure it doesn't get flushed in the middle of _render call\n    // because that will cause problems to say the least.\n    flush();\n\n    // With iron-list v1.3.9, calling `notifyResize()` no longer renders\n    // the items synchronously. It is required to have the items rendered\n    // before we update the overlay and the list positions and sizes.\n    this.$.overlay.ensureItemsRendered();\n    this.$.overlay._selector.toggleScrollListener(true);\n\n    // Ensure metrics are up-to-date\n    this.$.overlay.updateViewportBoundaries();\n    // Force iron-list to create reusable nodes. Otherwise it will only start\n    // doing that in scroll listener, which is especially slow in Edge.\n    this.$.overlay._selector._increasePoolIfNeeded();\n    setTimeout(() => this._resizeDropdown(), 1);\n    // Defer scroll position adjustment to prevent freeze in Edge\n    window.requestAnimationFrame(() => this.$.overlay.adjustScrollPosition());\n\n\n    // _detectAndDispatchChange() should not consider value changes done before opening\n    this._lastCommittedValue = this.value;\n  }\n\n  _onClosed() {\n\n    // Happens when the overlay is closed by clicking outside\n    if (this.opened) {\n      this.close();\n    }\n\n    if (this.$.overlay._items && this._focusedIndex > -1) {\n      const focusedItem = this.$.overlay._items[this._focusedIndex];\n      if (this.selectedItem !== focusedItem) {\n        this.selectedItem = focusedItem;\n      }\n      // make sure input field is updated in case value doesn't change (i.e. FOO -> foo)\n      this._inputElementValue = this._getItemLabel(this.selectedItem);\n    } else if (this._inputElementValue === '' || this._inputElementValue === undefined) {\n      this.selectedItem = null;\n\n      if (this.allowCustomValue) {\n        this.value = '';\n      }\n    } else {\n      if (this.allowCustomValue) {\n        const e = new CustomEvent('custom-value-set', {detail: this._inputElementValue, composed: true, cancelable: true, bubbles: true});\n        this.dispatchEvent(e);\n        if (!e.defaultPrevented) {\n          const customValue = this._inputElementValue;\n          this._selectItemForValue(customValue);\n          this.value = customValue;\n        }\n      } else {\n        this._inputElementValue = this.selectedItem ? this._getItemLabel(this.selectedItem) : '';\n      }\n    }\n\n    this._detectAndDispatchChange();\n\n    this._clearSelectionRange();\n\n    if (!this.dataProvider) {\n      this.filter = '';\n    }\n  }\n\n  get _propertyForValue() {\n    return 'value';\n  }\n\n  /**\n   *  Filtering and items handling\n   */\n  _inputValueChanged(e) {\n    // Handle only input events from our inputElement.\n    if (e.composedPath().indexOf(this.inputElement) !== -1) {\n      this._inputElementValue = this.inputElement[this._propertyForValue];\n      this._filterFromInput();\n    }\n  }\n\n  _filterFromInput(e) {\n    if (!this.opened) {\n      this.open();\n    }\n\n    if (this.filter === this._inputElementValue) {\n      // Filter and input value might get out of sync, while keyboard navigating for example.\n      // Afterwards, input value might be changed to the same value as used in filtering.\n      // In situation like these, we need to make sure all the filter changes handlers are run.\n      this._filterChanged(this.filter, this.itemValuePath, this.itemLabelPath);\n    } else {\n      this.filter = this._inputElementValue;\n    }\n  }\n\n  _itemLabelPathChanged(itemLabelPath, oldItemLabelPath) {\n    if (typeof itemLabelPath !== 'string') {\n      console.error('You should set itemLabelPath to a valid string');\n    }\n  }\n\n  _filterChanged(filter, itemValuePath, itemLabelPath) {\n    if (filter === undefined) {\n      return;\n    }\n    if (this.items) {\n      this.filteredItems = this._filterItems(this.items, filter);\n    } else {\n      // With certain use cases (e. g., external filtering), `items` are\n      // undefined. Filtering is unnecessary per se, but the filteredItems\n      // observer should still be invoked to update focused item.\n      this._filteredItemsChanged({path: 'filteredItems', value: this.filteredItems}, itemValuePath, itemLabelPath);\n    }\n  }\n\n  _loadingChanged(loading) {\n    if (loading) {\n      this._focusedIndex = -1;\n    }\n  }\n\n  _revertInputValue() {\n    if (this.filter !== '') {\n      this._inputElementValue = this.filter;\n    } else {\n      this._revertInputValueToValue();\n    }\n    this._clearSelectionRange();\n  }\n\n  _revertInputValueToValue() {\n    if (this.allowCustomValue && !this.selectedItem) {\n      this._inputElementValue = this.value;\n    } else {\n      this._inputElementValue = this._getItemLabel(this.selectedItem);\n    }\n  }\n\n  _resizeDropdown() {\n    this.$.overlay.$.dropdown.notifyResize();\n  }\n\n  _updateHasValue(hasValue) {\n    if (hasValue) {\n      this.setAttribute('has-value', '');\n    } else {\n      this.removeAttribute('has-value');\n    }\n  }\n\n  _selectedItemChanged(selectedItem, itemLabelPath) {\n    if (selectedItem === null || selectedItem === undefined) {\n      if (this.filteredItems) {\n        if (!this.allowCustomValue) {\n          this.value = '';\n        }\n\n        this._updateHasValue(this.value !== '');\n        this._inputElementValue = this.value;\n      }\n    } else {\n      const value = this._getItemValue(selectedItem);\n      if (this.value !== value) {\n        this.value = value;\n      }\n\n      this._updateHasValue(true);\n      this._inputElementValue = this._getItemLabel(selectedItem);\n\n      // Could not be defined in 1.x because ready is called after all prop-setters\n      if (this.inputElement) {\n        this.inputElement[this._propertyForValue] = this._inputElementValue;\n      }\n    }\n\n    this.$.overlay._selectedItem = selectedItem;\n    if (this.filteredItems && this.$.overlay._items) {\n      this._focusedIndex = this.filteredItems.indexOf(selectedItem);\n    }\n  }\n\n  _valueChanged(value, oldVal) {\n    if (value === '' && oldVal === undefined) { // initializing, no need to do anything (#554)\n      return;\n    }\n\n    if (this._isValidValue(value)) {\n      let item;\n      if (this._getItemValue(this.selectedItem) !== value) {\n        this._selectItemForValue(value);\n      } else {\n        item = this.selectedItem;\n      }\n\n      if (!item && this.allowCustomValue) {\n        this._inputElementValue = value;\n      }\n\n      this._updateHasValue(this.value !== '');\n    } else {\n      this.selectedItem = null;\n    }\n    // In the next _detectAndDispatchChange() call, the change detection should pass\n    this._lastCommittedValue = undefined;\n  }\n\n  _detectAndDispatchChange() {\n    if (this.value !== this._lastCommittedValue) {\n      this.dispatchEvent(new CustomEvent('change', {bubbles: true}));\n      this._lastCommittedValue = this.value;\n    }\n  }\n\n  _itemsChanged(items, oldItems) {\n    this._ensureItemsOrDataProvider(() => {\n      this.items = oldItems;\n    });\n  }\n\n  _itemsOrPathsChanged(e, itemValuePath, itemLabelPath) {\n    if (e.value === undefined) {\n      return;\n    }\n    if (e.path === 'items' || e.path === 'items.splices') {\n      this.filteredItems = this.items ? this.items.slice(0) : this.items;\n\n      const valueIndex = this._indexOfValue(this.value, this.items);\n      this._focusedIndex = valueIndex;\n\n      const item = valueIndex > -1 && this.items[valueIndex];\n      if (item) {\n        this.selectedItem = item;\n      }\n    }\n  }\n\n  _filteredItemsChanged(e, itemValuePath, itemLabelPath) {\n    if (e.value === undefined) {\n      return;\n    }\n    if (e.path === 'filteredItems' || e.path === 'filteredItems.splices') {\n      this._setOverlayItems(this.filteredItems);\n\n      this._focusedIndex = this.opened ?\n        this.$.overlay.indexOfLabel(this.filter) :\n        this._indexOfValue(this.value, this.filteredItems);\n\n      if (this.opened) {\n        this._repositionOverlay();\n      }\n    }\n  }\n\n  _filterItems(arr, filter) {\n    if (!arr) {\n      return arr;\n    }\n\n    return arr.filter(item => {\n      filter = filter ? filter.toString().toLowerCase() : '';\n      // Check if item contains input value.\n      return this._getItemLabel(item).toString().toLowerCase().indexOf(filter) > -1;\n    });\n  }\n\n  _selectItemForValue(value) {\n    const valueIndex = this._indexOfValue(value, this.filteredItems);\n    const previouslySelectedItem = this.selectedItem;\n\n    this.selectedItem = valueIndex >= 0\n      ? this.filteredItems[valueIndex]\n      : (this.dataProvider && this.selectedItem === undefined)\n        ? undefined\n        : null;\n\n    if (this.selectedItem === null && previouslySelectedItem === null) {\n      this._selectedItemChanged(this.selectedItem);\n    }\n  }\n\n  _setOverlayItems(items) {\n    this.$.overlay.set('_items', items);\n\n    if (this.opened) {\n      this._resizeDropdown();\n    }\n  }\n\n  _repositionOverlay() {\n    // async needed to reposition correctly after filtering\n    // (especially when aligned on top of input)\n    setTimeout(() => {\n      this._resizeDropdown();\n      this.$.overlay.updateViewportBoundaries();\n      this.$.overlay.ensureItemsRendered();\n      this.$.overlay._selector.notifyResize();\n      flush();\n    }, 1);\n  }\n\n  _indexOfValue(value, items) {\n    if (items && this._isValidValue(value)) {\n      for (let i = 0; i < items.length; i++) {\n        if (this._getItemValue(items[i]) === value) {\n          return i;\n        }\n      }\n    }\n\n    return -1;\n  }\n\n  /**\n   * Checks if the value is supported as an item value in this control.\n   *\n   * @return {boolean}\n   */\n  _isValidValue(value) {\n    return value !== undefined && value !== null;\n  }\n\n  _overlaySelectedItemChanged(e) {\n    // stop this private event from leaking outside.\n    e.stopPropagation();\n\n    if (e.detail.item instanceof ComboBoxPlaceholder) {\n      // Placeholder items should not be selectable.\n      return;\n    }\n\n    if (this.opened) {\n      this.close();\n    }\n\n    if (this.selectedItem !== e.detail.item) {\n      this.selectedItem = e.detail.item;\n      this._detectAndDispatchChange();\n    }\n  }\n\n\n  /**\n   * Returns true if `value` is valid, and sets the `invalid` flag appropriately.\n   *\n   * @return {boolean} True if the value is valid and sets the `invalid` flag appropriately\n   */\n  validate() {\n    return !(this.invalid = !this.checkValidity());\n  }\n\n  /**\n   * Returns true if the current input value satisfies all constraints (if any)\n   *\n   * You can override the `checkValidity` method for custom validations.\n   */\n  checkValidity() {\n    if (this.inputElement.validate) {\n      return this.inputElement.validate();\n    }\n  }\n\n  get _instanceProps() {\n    return {\n      item: true,\n      index: true,\n      selected: true,\n      focused: true\n    };\n  }\n\n  _ensureTemplatized() {\n    if (!this._TemplateClass) {\n      const tpl = this._itemTemplate || this._getRootTemplate();\n      if (tpl) {\n        this._TemplateClass = templatize(tpl, this, {\n          instanceProps: this._instanceProps,\n          forwardHostProp: function(prop, value) {\n            const items = this.$.overlay._selector.querySelectorAll('vaadin-combo-box-item');\n            Array.prototype.forEach.call(items, item => {\n              if (item._itemTemplateInstance) {\n                item._itemTemplateInstance.set(prop, value);\n                item._itemTemplateInstance.notifyPath(prop, value, true);\n              }\n            });\n          }\n        });\n      }\n    }\n  }\n\n  _getRootTemplate() {\n    return Array.prototype.filter.call(this.children, elem => elem.tagName === 'TEMPLATE')[0];\n  }\n\n  _preventInputBlur() {\n    if (this._toggleElement) {\n      this._toggleElement.addEventListener('click', this._preventDefault);\n    }\n    if (this._clearElement) {\n      this._clearElement.addEventListener('click', this._preventDefault);\n    }\n  }\n\n  _restoreInputBlur() {\n    if (this._toggleElement) {\n      this._toggleElement.removeEventListener('click', this._preventDefault);\n    }\n    if (this._clearElement) {\n      this._clearElement.removeEventListener('click', this._preventDefault);\n    }\n  }\n\n  _preventDefault(e) {\n    e.preventDefault();\n  }\n\n  _stopPropagation(e) {\n    e.stopPropagation();\n  }\n\n  /**\n   * Fired when the value changes.\n   *\n   * @event value-changed\n   * @param {Object} detail\n   *  @param {String} detail.value the combobox value\n   */\n\n  /**\n   * Fired when selected item changes.\n   *\n   * @event selected-item-changed\n   * @param {Object} detail\n   *  @param {Object|String} detail.value the selected item. Type is the same as the type of `items`.\n   */\n\n  /**\n   * Fired when the user sets a custom value.\n   * @event custom-value-set\n   * @param {String} detail the custom value\n   */\n\n  /**\n   * Fired when value changes.\n   * To comply with https://developer.mozilla.org/en-US/docs/Web/Events/change\n   * @event change\n   */\n};\n","/**\n@license\nCopyright (c) 2018 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport { ComboBoxPlaceholder } from './vaadin-combo-box-placeholder.js';\n\n/**\n * @polymerMixin\n */\nexport const ComboBoxDataProviderMixin = superClass => class DataProviderMixin extends superClass {\n\n  static get properties() {\n    return {\n\n      /**\n       * Number of items fetched at a time from the dataprovider.\n       */\n      pageSize: {\n        type: Number,\n        value: 50,\n        observer: '_pageSizeChanged'\n      },\n\n      /**\n       * Total number of items.\n       */\n      size: {\n        type: Number,\n        observer: '_sizeChanged'\n      },\n\n      /**\n       * Function that provides items lazily. Receives arguments `params`, `callback`\n       *\n       * `params.page` Requested page index\n       *\n       * `params.pageSize` Current page size\n       *\n       * `params.filter` Currently applied filter\n       *\n       * `callback(items, size)` Callback function with arguments:\n       *   - `items` Current page of items\n       *   - `size` Total number of items.\n       */\n      dataProvider: {\n        type: Object,\n        observer: '_dataProviderChanged'\n      },\n\n      _pendingRequests: {\n        value: () => {\n          return {};\n        }\n      },\n\n      __placeHolder: {\n        value: new ComboBoxPlaceholder()\n      }\n\n    };\n  }\n\n  static get observers() {\n    return [\n      '_dataProviderFilterChanged(filter, dataProvider)',\n      '_dataProviderClearFilter(dataProvider, opened, value)',\n      '_warnDataProviderValue(dataProvider, value)',\n      '_ensureFirstPage(opened)',\n    ];\n  }\n\n  _dataProviderClearFilter(dataProvider, opened, value) {\n    // Can't depend on filter in this obsever as we don't want\n    // to clear the filter whenever it's set\n    if (dataProvider && this.filter) {\n      this.size = undefined;\n      this._pendingRequests = {};\n      this.filter = '';\n      this.clearCache();\n    }\n  }\n\n  ready() {\n    super.ready();\n    this.clearCache();\n    this.$.overlay.addEventListener('index-requested', e => {\n      const index = e.detail.index;\n      if (index !== undefined) {\n        const page = this._getPageForIndex(index);\n        if (this._shouldLoadPage(page)) {\n          this._loadPage(page);\n        }\n      }\n    });\n  }\n\n  _dataProviderFilterChanged() {\n    if (this.dataProvider && this.opened) {\n      this.size = undefined;\n      this._pendingRequests = {};\n      this.clearCache();\n    }\n  }\n\n  _ensureFirstPage(opened) {\n    if (opened && this._shouldLoadPage(0)) {\n      this._loadPage(0);\n    }\n  }\n\n  _shouldLoadPage(page) {\n    if (!this.filteredItems || this._forceNextRequest) {\n      this._forceNextRequest = false;\n      return true;\n    }\n\n    const loadedItem = this.filteredItems[page * this.pageSize];\n    if (loadedItem !== undefined) {\n      return loadedItem instanceof ComboBoxPlaceholder;\n    } else {\n      return this.size === undefined;\n    }\n  }\n\n  _loadPage(page) {\n    // make sure same page isn't requested multiple times.\n    if (!this._pendingRequests[page] && this.dataProvider) {\n      this.loading = true;\n\n      const params = {\n        page,\n        pageSize: this.pageSize,\n        filter: this.filter\n      };\n\n      const callback = (items, size) => {\n        if (this._pendingRequests[page] === callback) {\n          if (!this.filteredItems) {\n            const filteredItems = [];\n            filteredItems.splice(params.page * params.pageSize, items.length, ...items);\n            this.filteredItems = filteredItems;\n          } else {\n            this.splice('filteredItems', params.page * params.pageSize, items.length, ...items);\n          }\n          // Update selectedItem from filteredItems if value is set\n          if (this._isValidValue(this.value) && this._getItemValue(this.selectedItem) !== this.value) {\n            this._selectItemForValue(this.value);\n          }\n          this.size = size;\n\n          delete this._pendingRequests[page];\n\n          if (Object.keys(this._pendingRequests).length === 0) {\n            this.loading = false;\n          }\n        }\n      };\n      this._pendingRequests[page] = callback;\n      this.dataProvider(params, callback);\n    }\n  }\n\n  _getPageForIndex(index) {\n    return Math.floor(index / this.pageSize);\n  }\n\n  /**\n   * Clears the cached pages and reloads data from dataprovider when needed.\n   */\n  clearCache() {\n    if (!this.dataProvider) {\n      return;\n    }\n    this._pendingRequests = {};\n    const filteredItems = [];\n    for (let i = 0; i < (this.size || 0); i++) {\n      filteredItems.push(this.__placeHolder);\n    }\n    this.filteredItems = filteredItems;\n    if (this.opened) {\n      this._loadPage(0);\n    } else {\n      this._forceNextRequest = true;\n    }\n  }\n\n  _sizeChanged(size = 0) {\n    const filteredItems = (this.filteredItems || []).slice(0, size);\n    for (let i = 0; i < size; i++) {\n      filteredItems[i] = filteredItems[i] !== undefined ? filteredItems[i] : this.__placeHolder;\n    }\n    this.filteredItems = filteredItems;\n  }\n\n  _pageSizeChanged(pageSize, oldPageSize) {\n    if (Math.floor(pageSize) !== pageSize || pageSize === 0) {\n      this.pageSize = oldPageSize;\n      throw new Error('`pageSize` value must be an integer > 0');\n    }\n    this.clearCache();\n  }\n\n  _dataProviderChanged(dataProvider, oldDataProvider) {\n    this._ensureItemsOrDataProvider(() => {\n      this.dataProvider = oldDataProvider;\n    });\n  }\n\n  _ensureItemsOrDataProvider(restoreOldValueCallback) {\n    if (this.items !== undefined && this.dataProvider !== undefined) {\n      restoreOldValueCallback();\n      throw new Error('Using `items` and `dataProvider` together is not supported');\n    }\n  }\n\n  _warnDataProviderValue(dataProvider, value) {\n    if (dataProvider && value !== '' && (this.selectedItem === undefined || this.selectedItem === null)) {\n      const valueIndex = this._indexOfValue(value, this.filteredItems);\n      if (valueIndex < 0 || !this._getItemLabel(this.filteredItems[valueIndex])) {\n        /* eslint-disable no-console */\n        console.warn(\n          'Warning: unable to determine the label for the provided `value`. ' +\n          'Nothing to display in the text field. This usually happens when ' +\n          'setting an initial `value` before any items are returned from ' +\n          'the `dataProvider` callback. Consider setting `selectedItem` ' +\n          'instead of `value`'\n        );\n        /* eslint-enable no-console */\n      }\n    }\n  }\n\n};\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport '@polymer/iron-a11y-keys-behavior/iron-a11y-keys-behavior.js';\n\nimport {IronResizableBehavior} from '@polymer/iron-resizable-behavior/iron-resizable-behavior.js';\nimport {IronScrollTargetBehavior} from '@polymer/iron-scroll-target-behavior/iron-scroll-target-behavior.js';\nimport {OptionalMutableDataBehavior} from '@polymer/polymer/lib/legacy/mutable-data-behavior.js';\nimport {Polymer as Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {dom} from '@polymer/polymer/lib/legacy/polymer.dom.js';\nimport {Templatizer} from '@polymer/polymer/lib/legacy/templatizer-behavior.js';\nimport {animationFrame, idlePeriod, microTask} from '@polymer/polymer/lib/utils/async.js';\nimport {Debouncer} from '@polymer/polymer/lib/utils/debounce.js';\nimport {enqueueDebouncer, flush} from '@polymer/polymer/lib/utils/flush.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\nimport {matches, translate} from '@polymer/polymer/lib/utils/path.js';\nimport {TemplateInstanceBase} from '@polymer/polymer/lib/utils/templatize.js';\n\nvar IOS = navigator.userAgent.match(/iP(?:hone|ad;(?: U;)? CPU) OS (\\d+)/);\nvar IOS_TOUCH_SCROLLING = IOS && IOS[1] >= 8;\nvar DEFAULT_PHYSICAL_COUNT = 3;\nvar HIDDEN_Y = '-10000px';\nvar SECRET_TABINDEX = -100;\n\n/**\n\n`iron-list` displays a virtual, 'infinite' list. The template inside\nthe iron-list element represents the DOM to create for each list item.\nThe `items` property specifies an array of list item data.\n\nFor performance reasons, not every item in the list is rendered at once;\ninstead a small subset of actual template elements *(enough to fill the\nviewport)* are rendered and reused as the user scrolls. As such, it is important\nthat all state of the list template is bound to the model driving it, since the\nview may be reused with a new model at any time. Particularly, any state that\nmay change as the result of a user interaction with the list item must be bound\nto the model to avoid view state inconsistency.\n\n### Sizing iron-list\n\n`iron-list` must either be explicitly sized, or delegate scrolling to an\nexplicitly sized parent. By \"explicitly sized\", we mean it either has an\nexplicit CSS `height` property set via a class or inline style, or else is sized\nby other layout means (e.g. the `flex` or `fit` classes).\n\n#### Flexbox - [jsbin](https://jsbin.com/vejoni/edit?html,output)\n\n```html\n<template is=\"x-list\">\n  <style>\n    :host {\n      display: block;\n      height: 100vh;\n      display: flex;\n      flex-direction: column;\n    }\n\n    iron-list {\n      flex: 1 1 auto;\n    }\n  </style>\n  <app-toolbar>App name</app-toolbar>\n  <iron-list items=\"[[items]]\">\n    <template>\n      <div>\n        ...\n      </div>\n    </template>\n  </iron-list>\n</template>\n```\n#### Explicit size - [jsbin](https://jsbin.com/vopucus/edit?html,output)\n```html\n<template is=\"x-list\">\n  <style>\n    :host {\n      display: block;\n    }\n\n    iron-list {\n      height: 100vh; /* don't use % values unless the parent element is sized.\n*\\/\n    }\n  </style>\n  <iron-list items=\"[[items]]\">\n    <template>\n      <div>\n        ...\n      </div>\n    </template>\n  </iron-list>\n</template>\n```\n#### Main document scrolling -\n[jsbin](https://jsbin.com/wevirow/edit?html,output)\n```html\n<head>\n  <style>\n    body {\n      height: 100vh;\n      margin: 0;\n      display: flex;\n      flex-direction: column;\n    }\n\n    app-toolbar {\n      position: fixed;\n      top: 0;\n      left: 0;\n      right: 0;\n    }\n\n    iron-list {\n      /* add padding since the app-toolbar is fixed at the top *\\/\n      padding-top: 64px;\n    }\n  </style>\n</head>\n<body>\n  <app-toolbar>App name</app-toolbar>\n  <iron-list scroll-target=\"document\">\n    <template>\n      <div>\n        ...\n      </div>\n    </template>\n  </iron-list>\n</body>\n```\n\n`iron-list` must be given a `<template>` which contains exactly one element. In\nthe examples above we used a `<div>`, but you can provide any element (including\ncustom elements).\n\n### Template model\n\nList item templates should bind to template models of the following structure:\n\n```js\n{\n  index: 0,        // index in the item array\n  selected: false, // true if the current item is selected\n  tabIndex: -1,    // a dynamically generated tabIndex for focus management\n  item: {}         // user data corresponding to items[index]\n}\n```\n\nAlternatively, you can change the property name used as data index by changing\nthe `indexAs` property. The `as` property defines the name of the variable to\nadd to the binding scope for the array.\n\nFor example, given the following `data` array:\n\n##### data.json\n\n```js\n[\n  {\"name\": \"Bob\"},\n  {\"name\": \"Tim\"},\n  {\"name\": \"Mike\"}\n]\n```\n\nThe following code would render the list (note the name property is bound from\nthe model object provided to the template scope):\n\n```html\n<iron-ajax url=\"data.json\" last-response=\"{{data}}\" auto></iron-ajax>\n<iron-list items=\"[[data]]\" as=\"item\">\n  <template>\n    <div>\n      Name: [[item.name]]\n    </div>\n  </template>\n</iron-list>\n```\n\n### Grid layout\n\n`iron-list` supports a grid layout in addition to linear layout by setting\nthe `grid` attribute.  In this case, the list template item must have both fixed\nwidth and height (e.g. via CSS). Based on this, the number of items\nper row are determined automatically based on the size of the list viewport.\n\n### Accessibility\n\n`iron-list` automatically manages the focus state for the items. It also\nprovides a `tabIndex` property within the template scope that can be used for\nkeyboard navigation. For example, users can press the up and down keys to move\nto previous and next items in the list:\n\n```html\n<iron-list items=\"[[data]]\" as=\"item\">\n  <template>\n    <div tabindex$=\"[[tabIndex]]\">\n      Name: [[item.name]]\n    </div>\n  </template>\n</iron-list>\n```\n\n### Styling\n\nYou can use the `--iron-list-items-container` mixin to style the container of\nitems:\n\n```css\niron-list {\n --iron-list-items-container: {\n    margin: auto;\n  };\n}\n```\n\n### Resizing\n\n`iron-list` lays out the items when it receives a notification via the\n`iron-resize` event. This event is fired by any element that implements\n`IronResizableBehavior`.\n\nBy default, elements such as `iron-pages`, `paper-tabs` or `paper-dialog` will\ntrigger this event automatically. If you hide the list manually (e.g. you use\n`display: none`) you might want to implement `IronResizableBehavior` or fire\nthis event manually right after the list became visible again. For example:\n\n```js\ndocument.querySelector('iron-list').fire('iron-resize');\n```\n\n### When should `<iron-list>` be used?\n\n`iron-list` should be used when a page has significantly more DOM nodes than the\nones visible on the screen. e.g. the page has 500 nodes, but only 20 are visible\nat a time. This is why we refer to it as a `virtual` list. In this case, a\n`dom-repeat` will still create 500 nodes which could slow down the web app, but\n`iron-list` will only create 20.\n\nHowever, having an `iron-list` does not mean that you can load all the data at\nonce. Say you have a million records in the database, you want to split the data\ninto pages so you can bring in a page at the time. The page could contain 500\nitems, and iron-list will only render 20.\n\n@group Iron Element\n@element iron-list\n@demo demo/index.html\n\n*/\nPolymer({\n  _template: html`\n    <style>\n      :host {\n        display: block;\n      }\n\n      @media only screen and (-webkit-max-device-pixel-ratio: 1) {\n        :host {\n          will-change: transform;\n        }\n      }\n\n      #items {\n        @apply --iron-list-items-container;\n        position: relative;\n      }\n\n      :host(:not([grid])) #items > ::slotted(*) {\n        width: 100%;\n      }\n\n      #items > ::slotted(*) {\n        box-sizing: border-box;\n        margin: 0;\n        position: absolute;\n        top: 0;\n        will-change: transform;\n      }\n    </style>\n\n    <array-selector id=\"selector\" items=\"{{items}}\" selected=\"{{selectedItems}}\" selected-item=\"{{selectedItem}}\"></array-selector>\n\n    <div id=\"items\">\n      <slot></slot>\n    </div>\n`,\n\n  is: 'iron-list',\n\n  properties: {\n\n    /**\n     * An array containing items determining how many instances of the template\n     * to stamp and that that each template instance should bind to.\n     */\n    items: {type: Array},\n\n    /**\n     * The name of the variable to add to the binding scope for the array\n     * element associated with a given template instance.\n     */\n    as: {type: String, value: 'item'},\n\n    /**\n     * The name of the variable to add to the binding scope with the index\n     * for the row.\n     */\n    indexAs: {type: String, value: 'index'},\n\n    /**\n     * The name of the variable to add to the binding scope to indicate\n     * if the row is selected.\n     */\n    selectedAs: {type: String, value: 'selected'},\n\n    /**\n     * When true, the list is rendered as a grid. Grid items must have\n     * fixed width and height set via CSS. e.g.\n     *\n     * ```html\n     * <iron-list grid>\n     *   <template>\n     *      <div style=\"width: 100px; height: 100px;\"> 100x100 </div>\n     *   </template>\n     * </iron-list>\n     * ```\n     */\n    grid: {\n      type: Boolean,\n      value: false,\n      reflectToAttribute: true,\n      observer: '_gridChanged'\n    },\n\n    /**\n     * When true, tapping a row will select the item, placing its data model\n     * in the set of selected items retrievable via the selection property.\n     *\n     * Note that tapping focusable elements within the list item will not\n     * result in selection, since they are presumed to have their * own action.\n     */\n    selectionEnabled: {type: Boolean, value: false},\n\n    /**\n     * When `multiSelection` is false, this is the currently selected item, or\n     * `null` if no item is selected.\n     */\n    selectedItem: {type: Object, notify: true},\n\n    /**\n     * When `multiSelection` is true, this is an array that contains the\n     * selected items.\n     */\n    selectedItems: {type: Object, notify: true},\n\n    /**\n     * When `true`, multiple items may be selected at once (in this case,\n     * `selected` is an array of currently selected items).  When `false`,\n     * only one item may be selected at a time.\n     */\n    multiSelection: {type: Boolean, value: false},\n\n    /**\n     * The offset top from the scrolling element to the iron-list element.\n     * This value can be computed using the position returned by\n     * `getBoundingClientRect()` although it's preferred to use a constant value\n     * when possible.\n     *\n     * This property is useful when an external scrolling element is used and\n     * there's some offset between the scrolling element and the list. For\n     * example: a header is placed above the list.\n     */\n    scrollOffset: {type: Number, value: 0}\n  },\n\n  observers: [\n    '_itemsChanged(items.*)',\n    '_selectionEnabledChanged(selectionEnabled)',\n    '_multiSelectionChanged(multiSelection)',\n    '_setOverflow(scrollTarget, scrollOffset)'\n  ],\n\n  behaviors: [\n    Templatizer,\n    IronResizableBehavior,\n    IronScrollTargetBehavior,\n    OptionalMutableDataBehavior\n  ],\n\n  /**\n   * The ratio of hidden tiles that should remain in the scroll direction.\n   * Recommended value ~0.5, so it will distribute tiles evenly in both\n   * directions.\n   */\n  _ratio: 0.5,\n\n  /**\n   * The padding-top value for the list.\n   */\n  _scrollerPaddingTop: 0,\n\n  /**\n   * This value is the same as `scrollTop`.\n   */\n  _scrollPosition: 0,\n\n  /**\n   * The sum of the heights of all the tiles in the DOM.\n   */\n  _physicalSize: 0,\n\n  /**\n   * The average `offsetHeight` of the tiles observed till now.\n   */\n  _physicalAverage: 0,\n\n  /**\n   * The number of tiles which `offsetHeight` > 0 observed until now.\n   */\n  _physicalAverageCount: 0,\n\n  /**\n   * The Y position of the item rendered in the `_physicalStart`\n   * tile relative to the scrolling list.\n   */\n  _physicalTop: 0,\n\n  /**\n   * The number of items in the list.\n   */\n  _virtualCount: 0,\n\n  /**\n   * The estimated scroll height based on `_physicalAverage`\n   */\n  _estScrollHeight: 0,\n\n  /**\n   * The scroll height of the dom node\n   */\n  _scrollHeight: 0,\n\n  /**\n   * The height of the list. This is referred as the viewport in the context of\n   * list.\n   */\n  _viewportHeight: 0,\n\n  /**\n   * The width of the list. This is referred as the viewport in the context of\n   * list.\n   */\n  _viewportWidth: 0,\n\n  /**\n   * An array of DOM nodes that are currently in the tree\n   * @type {?Array<!TemplateInstanceBase>}\n   */\n  _physicalItems: null,\n\n  /**\n   * An array of heights for each item in `_physicalItems`\n   * @type {?Array<number>}\n   */\n  _physicalSizes: null,\n\n  /**\n   * A cached value for the first visible index.\n   * See `firstVisibleIndex`\n   * @type {?number}\n   */\n  _firstVisibleIndexVal: null,\n\n  /**\n   * A cached value for the last visible index.\n   * See `lastVisibleIndex`\n   * @type {?number}\n   */\n  _lastVisibleIndexVal: null,\n\n  /**\n   * The max number of pages to render. One page is equivalent to the height of\n   * the list.\n   */\n  _maxPages: 2,\n\n  /**\n   * The currently focused physical item.\n   */\n  _focusedItem: null,\n\n  /**\n   * The virtual index of the focused item.\n   */\n  _focusedVirtualIndex: -1,\n\n  /**\n   * The physical index of the focused item.\n   */\n  _focusedPhysicalIndex: -1,\n\n  /**\n   * The the item that is focused if it is moved offscreen.\n   * @private {?TemplatizerNode}\n   */\n  _offscreenFocusedItem: null,\n\n  /**\n   * The item that backfills the `_offscreenFocusedItem` in the physical items\n   * list when that item is moved offscreen.\n   */\n  _focusBackfillItem: null,\n\n  /**\n   * The maximum items per row\n   */\n  _itemsPerRow: 1,\n\n  /**\n   * The width of each grid item\n   */\n  _itemWidth: 0,\n\n  /**\n   * The height of the row in grid layout.\n   */\n  _rowHeight: 0,\n\n  /**\n   * The cost of stamping a template in ms.\n   */\n  _templateCost: 0,\n\n  /**\n   * Needed to pass event.model property to declarative event handlers -\n   * see polymer/polymer#4339.\n   */\n  _parentModel: true,\n\n  /**\n   * The bottom of the physical content.\n   */\n  get _physicalBottom() {\n    return this._physicalTop + this._physicalSize;\n  },\n\n  /**\n   * The bottom of the scroll.\n   */\n  get _scrollBottom() {\n    return this._scrollPosition + this._viewportHeight;\n  },\n\n  /**\n   * The n-th item rendered in the last physical item.\n   */\n  get _virtualEnd() {\n    return this._virtualStart + this._physicalCount - 1;\n  },\n\n  /**\n   * The height of the physical content that isn't on the screen.\n   */\n  get _hiddenContentSize() {\n    var size =\n        this.grid ? this._physicalRows * this._rowHeight : this._physicalSize;\n    return size - this._viewportHeight;\n  },\n\n  /**\n   * The parent node for the _userTemplate.\n   */\n  get _itemsParent() {\n    return dom(dom(this._userTemplate).parentNode);\n  },\n\n  /**\n   * The maximum scroll top value.\n   */\n  get _maxScrollTop() {\n    return this._estScrollHeight - this._viewportHeight + this._scrollOffset;\n  },\n\n  /**\n   * The largest n-th value for an item such that it can be rendered in\n   * `_physicalStart`.\n   */\n  get _maxVirtualStart() {\n    var virtualCount = this._convertIndexToCompleteRow(this._virtualCount);\n    return Math.max(0, virtualCount - this._physicalCount);\n  },\n\n  set _virtualStart(val) {\n    val = this._clamp(val, 0, this._maxVirtualStart);\n    if (this.grid) {\n      val = val - (val % this._itemsPerRow);\n    }\n    this._virtualStartVal = val;\n  },\n\n  get _virtualStart() {\n    return this._virtualStartVal || 0;\n  },\n\n  /**\n   * The k-th tile that is at the top of the scrolling list.\n   */\n  set _physicalStart(val) {\n    val = val % this._physicalCount;\n    if (val < 0) {\n      val = this._physicalCount + val;\n    }\n    if (this.grid) {\n      val = val - (val % this._itemsPerRow);\n    }\n    this._physicalStartVal = val;\n  },\n\n  get _physicalStart() {\n    return this._physicalStartVal || 0;\n  },\n\n  /**\n   * The k-th tile that is at the bottom of the scrolling list.\n   */\n  get _physicalEnd() {\n    return (this._physicalStart + this._physicalCount - 1) %\n        this._physicalCount;\n  },\n\n  set _physicalCount(val) {\n    this._physicalCountVal = val;\n  },\n\n  get _physicalCount() {\n    return this._physicalCountVal || 0;\n  },\n\n  /**\n   * An optimal physical size such that we will have enough physical items\n   * to fill up the viewport and recycle when the user scrolls.\n   *\n   * This default value assumes that we will at least have the equivalent\n   * to a viewport of physical items above and below the user's viewport.\n   */\n  get _optPhysicalSize() {\n    return this._viewportHeight === 0 ? Infinity :\n                                        this._viewportHeight * this._maxPages;\n  },\n\n  /**\n   * True if the current list is visible.\n   */\n  get _isVisible() {\n    return Boolean(this.offsetWidth || this.offsetHeight);\n  },\n\n  /**\n   * Gets the index of the first visible item in the viewport.\n   *\n   * @type {number}\n   */\n  get firstVisibleIndex() {\n    var idx = this._firstVisibleIndexVal;\n    if (idx == null) {\n      var physicalOffset = this._physicalTop + this._scrollOffset;\n\n      idx = this._iterateItems(function(pidx, vidx) {\n        physicalOffset += this._getPhysicalSizeIncrement(pidx);\n\n        if (physicalOffset > this._scrollPosition) {\n          return this.grid ? vidx - (vidx % this._itemsPerRow) : vidx;\n        }\n        // Handle a partially rendered final row in grid mode\n        if (this.grid && this._virtualCount - 1 === vidx) {\n          return vidx - (vidx % this._itemsPerRow);\n        }\n      }) ||\n          0;\n      this._firstVisibleIndexVal = idx;\n    }\n    return idx;\n  },\n\n  /**\n   * Gets the index of the last visible item in the viewport.\n   *\n   * @type {number}\n   */\n  get lastVisibleIndex() {\n    var idx = this._lastVisibleIndexVal;\n    if (idx == null) {\n      if (this.grid) {\n        idx = Math.min(\n            this._virtualCount,\n            this.firstVisibleIndex + this._estRowsInView * this._itemsPerRow -\n                1);\n      } else {\n        var physicalOffset = this._physicalTop + this._scrollOffset;\n        this._iterateItems(function(pidx, vidx) {\n          if (physicalOffset < this._scrollBottom) {\n            idx = vidx;\n          }\n          physicalOffset += this._getPhysicalSizeIncrement(pidx);\n        });\n      }\n      this._lastVisibleIndexVal = idx;\n    }\n    return idx;\n  },\n\n  get _defaultScrollTarget() {\n    return this;\n  },\n\n  get _virtualRowCount() {\n    return Math.ceil(this._virtualCount / this._itemsPerRow);\n  },\n\n  get _estRowsInView() {\n    return Math.ceil(this._viewportHeight / this._rowHeight);\n  },\n\n  get _physicalRows() {\n    return Math.ceil(this._physicalCount / this._itemsPerRow);\n  },\n\n  get _scrollOffset() {\n    return this._scrollerPaddingTop + this.scrollOffset;\n  },\n\n  ready: function() {\n    this.addEventListener('focus', this._didFocus.bind(this), true);\n  },\n\n  attached: function() {\n    this._debounce('_render', this._render, animationFrame);\n    // `iron-resize` is fired when the list is attached if the event is added\n    // before attached causing unnecessary work.\n    this.listen(this, 'iron-resize', '_resizeHandler');\n    this.listen(this, 'keydown', '_keydownHandler');\n  },\n\n  detached: function() {\n    this.unlisten(this, 'iron-resize', '_resizeHandler');\n    this.unlisten(this, 'keydown', '_keydownHandler');\n  },\n\n  /**\n   * Set the overflow property if this element has its own scrolling region\n   */\n  _setOverflow: function(scrollTarget) {\n    this.style.webkitOverflowScrolling = scrollTarget === this ? 'touch' : '';\n    this.style.overflowY = scrollTarget === this ? 'auto' : '';\n    // Clear cache.\n    this._lastVisibleIndexVal = null;\n    this._firstVisibleIndexVal = null;\n    this._debounce('_render', this._render, animationFrame);\n  },\n\n  /**\n   * Invoke this method if you dynamically update the viewport's\n   * size or CSS padding.\n   *\n   * @method updateViewportBoundaries\n   */\n  updateViewportBoundaries: function() {\n    var styles = window.getComputedStyle(this);\n    this._scrollerPaddingTop =\n        this.scrollTarget === this ? 0 : parseInt(styles['padding-top'], 10);\n    this._isRTL = Boolean(styles.direction === 'rtl');\n    this._viewportWidth = this.$.items.offsetWidth;\n    this._viewportHeight = this._scrollTargetHeight;\n    this.grid && this._updateGridMetrics();\n  },\n\n  /**\n   * Recycles the physical items when needed.\n   */\n  _scrollHandler: function() {\n    var scrollTop = Math.max(0, Math.min(this._maxScrollTop, this._scrollTop));\n    var delta = scrollTop - this._scrollPosition;\n    var isScrollingDown = delta >= 0;\n    // Track the current scroll position.\n    this._scrollPosition = scrollTop;\n    // Clear indexes for first and last visible indexes.\n    this._firstVisibleIndexVal = null;\n    this._lastVisibleIndexVal = null;\n    // Random access.\n    if (Math.abs(delta) > this._physicalSize && this._physicalSize > 0) {\n      delta = delta - this._scrollOffset;\n      var idxAdjustment =\n          Math.round(delta / this._physicalAverage) * this._itemsPerRow;\n      this._virtualStart = this._virtualStart + idxAdjustment;\n      this._physicalStart = this._physicalStart + idxAdjustment;\n      // Estimate new physical offset.\n      this._physicalTop = Math.floor(this._virtualStart / this._itemsPerRow) *\n          this._physicalAverage;\n      this._update();\n    } else if (this._physicalCount > 0) {\n      var reusables = this._getReusables(isScrollingDown);\n      if (isScrollingDown) {\n        this._physicalTop = reusables.physicalTop;\n        this._virtualStart = this._virtualStart + reusables.indexes.length;\n        this._physicalStart = this._physicalStart + reusables.indexes.length;\n      } else {\n        this._virtualStart = this._virtualStart - reusables.indexes.length;\n        this._physicalStart = this._physicalStart - reusables.indexes.length;\n      }\n      this._update(\n          reusables.indexes, isScrollingDown ? null : reusables.indexes);\n      this._debounce(\n          '_increasePoolIfNeeded',\n          this._increasePoolIfNeeded.bind(this, 0),\n          microTask);\n    }\n  },\n\n  /**\n   * Returns an object that contains the indexes of the physical items\n   * that might be reused and the physicalTop.\n   *\n   * @param {boolean} fromTop If the potential reusable items are above the scrolling region.\n   */\n  _getReusables: function(fromTop) {\n    var ith, lastIth, offsetContent, physicalItemHeight;\n    var idxs = [];\n    var protectedOffsetContent = this._hiddenContentSize * this._ratio;\n    var virtualStart = this._virtualStart;\n    var virtualEnd = this._virtualEnd;\n    var physicalCount = this._physicalCount;\n    var top = this._physicalTop + this._scrollOffset;\n    var bottom = this._physicalBottom + this._scrollOffset;\n    var scrollTop = this._scrollTop;\n    var scrollBottom = this._scrollBottom;\n\n    if (fromTop) {\n      ith = this._physicalStart;\n      lastIth = this._physicalEnd;\n      offsetContent = scrollTop - top;\n    } else {\n      ith = this._physicalEnd;\n      lastIth = this._physicalStart;\n      offsetContent = bottom - scrollBottom;\n    }\n    while (true) {\n      physicalItemHeight = this._getPhysicalSizeIncrement(ith);\n      offsetContent = offsetContent - physicalItemHeight;\n      if (idxs.length >= physicalCount ||\n          offsetContent <= protectedOffsetContent) {\n        break;\n      }\n      if (fromTop) {\n        // Check that index is within the valid range.\n        if (virtualEnd + idxs.length + 1 >= this._virtualCount) {\n          break;\n        }\n        // Check that the index is not visible.\n        if (top + physicalItemHeight >= scrollTop - this._scrollOffset) {\n          break;\n        }\n        idxs.push(ith);\n        top = top + physicalItemHeight;\n        ith = (ith + 1) % physicalCount;\n      } else {\n        // Check that index is within the valid range.\n        if (virtualStart - idxs.length <= 0) {\n          break;\n        }\n        // Check that the index is not visible.\n        if (top + this._physicalSize - physicalItemHeight <= scrollBottom) {\n          break;\n        }\n        idxs.push(ith);\n        top = top - physicalItemHeight;\n        ith = (ith === 0) ? physicalCount - 1 : ith - 1;\n      }\n    }\n    return {indexes: idxs, physicalTop: top - this._scrollOffset};\n  },\n\n  /**\n   * Update the list of items, starting from the `_virtualStart` item.\n   * @param {!Array<number>=} itemSet\n   * @param {!Array<number>=} movingUp\n   */\n  _update: function(itemSet, movingUp) {\n    if ((itemSet && itemSet.length === 0) || this._physicalCount === 0) {\n      return;\n    }\n    this._manageFocus();\n    this._assignModels(itemSet);\n    this._updateMetrics(itemSet);\n    // Adjust offset after measuring.\n    if (movingUp) {\n      while (movingUp.length) {\n        var idx = movingUp.pop();\n        this._physicalTop -= this._getPhysicalSizeIncrement(idx);\n      }\n    }\n    this._positionItems();\n    this._updateScrollerSize();\n  },\n\n  /**\n   * Creates a pool of DOM elements and attaches them to the local dom.\n   *\n   * @param {number} size Size of the pool\n   */\n  _createPool: function(size) {\n    this._ensureTemplatized();\n    var i, inst;\n    var physicalItems = new Array(size);\n    for (i = 0; i < size; i++) {\n      inst = this.stamp(null);\n      // TODO(blasten):\n      // First element child is item; Safari doesn't support children[0]\n      // on a doc fragment. Test this to see if it still matters.\n      physicalItems[i] = inst.root.querySelector('*');\n      this._itemsParent.appendChild(inst.root);\n    }\n    return physicalItems;\n  },\n\n  _isClientFull: function() {\n    return this._scrollBottom != 0 &&\n        this._physicalBottom - 1 >= this._scrollBottom &&\n        this._physicalTop <= this._scrollPosition;\n  },\n\n  /**\n   * Increases the pool size.\n   */\n  _increasePoolIfNeeded: function(count) {\n    var nextPhysicalCount = this._clamp(\n        this._physicalCount + count,\n        DEFAULT_PHYSICAL_COUNT,\n        this._virtualCount - this._virtualStart);\n    nextPhysicalCount = this._convertIndexToCompleteRow(nextPhysicalCount);\n    if (this.grid) {\n      var correction = nextPhysicalCount % this._itemsPerRow;\n      if (correction && nextPhysicalCount - correction <= this._physicalCount) {\n        nextPhysicalCount += this._itemsPerRow;\n      }\n      nextPhysicalCount -= correction;\n    }\n    var delta = nextPhysicalCount - this._physicalCount;\n    var nextIncrease = Math.round(this._physicalCount * 0.5);\n\n    if (delta < 0) {\n      return;\n    }\n    if (delta > 0) {\n      var ts = window.performance.now();\n      // Concat arrays in place.\n      [].push.apply(this._physicalItems, this._createPool(delta));\n      // Push 0s into physicalSizes. Can't use Array.fill because IE11 doesn't\n      // support it.\n      for (var i = 0; i < delta; i++) {\n        this._physicalSizes.push(0);\n      }\n      this._physicalCount = this._physicalCount + delta;\n      // Update the physical start if it needs to preserve the model of the\n      // focused item. In this situation, the focused item is currently rendered\n      // and its model would have changed after increasing the pool if the\n      // physical start remained unchanged.\n      if (this._physicalStart > this._physicalEnd &&\n          this._isIndexRendered(this._focusedVirtualIndex) &&\n          this._getPhysicalIndex(this._focusedVirtualIndex) <\n              this._physicalEnd) {\n        this._physicalStart = this._physicalStart + delta;\n      }\n      this._update();\n      this._templateCost = (window.performance.now() - ts) / delta;\n      nextIncrease = Math.round(this._physicalCount * 0.5);\n    }\n    // The upper bounds is not fixed when dealing with a grid that doesn't\n    // fill it's last row with the exact number of items per row.\n    if (this._virtualEnd >= this._virtualCount - 1 || nextIncrease === 0) {\n      // Do nothing.\n    } else if (!this._isClientFull()) {\n      this._debounce(\n          '_increasePoolIfNeeded',\n          this._increasePoolIfNeeded.bind(this, nextIncrease),\n          microTask);\n    } else if (this._physicalSize < this._optPhysicalSize) {\n      // Yield and increase the pool during idle time until the physical size is\n      // optimal.\n      this._debounce(\n          '_increasePoolIfNeeded',\n          this._increasePoolIfNeeded.bind(\n              this,\n              this._clamp(\n                  Math.round(50 / this._templateCost), 1, nextIncrease)),\n          idlePeriod);\n    }\n  },\n\n  /**\n   * Renders the a new list.\n   */\n  _render: function() {\n    if (!this.isAttached || !this._isVisible) {\n      return;\n    }\n    if (this._physicalCount !== 0) {\n      var reusables = this._getReusables(true);\n      this._physicalTop = reusables.physicalTop;\n      this._virtualStart = this._virtualStart + reusables.indexes.length;\n      this._physicalStart = this._physicalStart + reusables.indexes.length;\n      this._update(reusables.indexes);\n      this._update();\n      this._increasePoolIfNeeded(0);\n    } else if (this._virtualCount > 0) {\n      // Initial render\n      this.updateViewportBoundaries();\n      this._increasePoolIfNeeded(DEFAULT_PHYSICAL_COUNT);\n    }\n  },\n\n  /**\n   * Templetizes the user template.\n   */\n  _ensureTemplatized: function() {\n    if (this.ctor) {\n      return;\n    }\n    this._userTemplate = this.queryEffectiveChildren('template');\n    if (!this._userTemplate) {\n      console.warn('iron-list requires a template to be provided in light-dom');\n    }\n    var instanceProps = {};\n    instanceProps.__key__ = true;\n    instanceProps[this.as] = true;\n    instanceProps[this.indexAs] = true;\n    instanceProps[this.selectedAs] = true;\n    instanceProps.tabIndex = true;\n    this._instanceProps = instanceProps;\n    this.templatize(this._userTemplate, this.mutableData);\n  },\n\n  _gridChanged: function(newGrid, oldGrid) {\n    if (typeof oldGrid === 'undefined')\n      return;\n    this.notifyResize();\n    flush();\n    newGrid && this._updateGridMetrics();\n  },\n\n  /**\n   * Called when the items have changed. That is, reassignments\n   * to `items`, splices or updates to a single item.\n   */\n  _itemsChanged: function(change) {\n    if (change.path === 'items') {\n      this._virtualStart = 0;\n      this._physicalTop = 0;\n      this._virtualCount = this.items ? this.items.length : 0;\n      this._physicalIndexForKey = {};\n      this._firstVisibleIndexVal = null;\n      this._lastVisibleIndexVal = null;\n      this._physicalCount = this._physicalCount || 0;\n      this._physicalItems = this._physicalItems || [];\n      this._physicalSizes = this._physicalSizes || [];\n      this._physicalStart = 0;\n      if (this._scrollTop > this._scrollOffset) {\n        this._resetScrollPosition(0);\n      }\n      this._removeFocusedItem();\n      this._debounce('_render', this._render, animationFrame);\n    } else if (change.path === 'items.splices') {\n      this._adjustVirtualIndex(change.value.indexSplices);\n      this._virtualCount = this.items ? this.items.length : 0;\n      // Only blur if at least one item is added or removed.\n      var itemAddedOrRemoved = change.value.indexSplices.some(function(splice) {\n        return splice.addedCount > 0 || splice.removed.length > 0;\n      });\n      if (itemAddedOrRemoved) {\n        // Only blur activeElement if it is a descendant of the list (#505,\n        // #507).\n        var activeElement = this._getActiveElement();\n        if (this.contains(activeElement)) {\n          activeElement.blur();\n        }\n      }\n      // Render only if the affected index is rendered.\n      var affectedIndexRendered =\n          change.value.indexSplices.some(function(splice) {\n            return splice.index + splice.addedCount >= this._virtualStart &&\n                splice.index <= this._virtualEnd;\n          }, this);\n      if (!this._isClientFull() || affectedIndexRendered) {\n        this._debounce('_render', this._render, animationFrame);\n      }\n    } else if (change.path !== 'items.length') {\n      this._forwardItemPath(change.path, change.value);\n    }\n  },\n\n  _forwardItemPath: function(path, value) {\n    path = path.slice(6);  // 'items.'.length == 6\n    var dot = path.indexOf('.');\n    if (dot === -1) {\n      dot = path.length;\n    }\n    var isIndexRendered;\n    var pidx;\n    var inst;\n    var offscreenInstance = this.modelForElement(this._offscreenFocusedItem);\n    var vidx = parseInt(path.substring(0, dot), 10);\n    isIndexRendered = this._isIndexRendered(vidx);\n    if (isIndexRendered) {\n      pidx = this._getPhysicalIndex(vidx);\n      inst = this.modelForElement(this._physicalItems[pidx]);\n    } else if (offscreenInstance) {\n      inst = offscreenInstance;\n    }\n\n    if (!inst || inst[this.indexAs] !== vidx) {\n      return;\n    }\n    path = path.substring(dot + 1);\n    path = this.as + (path ? '.' + path : '');\n    inst._setPendingPropertyOrPath(path, value, false, true);\n    inst._flushProperties && inst._flushProperties(true);\n    // TODO(blasten): V1 doesn't do this and it's a bug\n    if (isIndexRendered) {\n      this._updateMetrics([pidx]);\n      this._positionItems();\n      this._updateScrollerSize();\n    }\n  },\n\n  /**\n   * @param {!Array<!Object>} splices\n   */\n  _adjustVirtualIndex: function(splices) {\n    splices.forEach(function(splice) {\n      // deselect removed items\n      splice.removed.forEach(this._removeItem, this);\n      // We only need to care about changes happening above the current position\n      if (splice.index < this._virtualStart) {\n        var delta = Math.max(\n            splice.addedCount - splice.removed.length,\n            splice.index - this._virtualStart);\n        this._virtualStart = this._virtualStart + delta;\n        if (this._focusedVirtualIndex >= 0) {\n          this._focusedVirtualIndex = this._focusedVirtualIndex + delta;\n        }\n      }\n    }, this);\n  },\n\n  _removeItem: function(item) {\n    this.$.selector.deselect(item);\n    // remove the current focused item\n    if (this._focusedItem &&\n        this.modelForElement(this._focusedItem)[this.as] === item) {\n      this._removeFocusedItem();\n    }\n  },\n\n  /**\n   * Executes a provided function per every physical index in `itemSet`\n   * `itemSet` default value is equivalent to the entire set of physical\n   * indexes.\n   *\n   * @param {!function(number, number)} fn\n   * @param {!Array<number>=} itemSet\n   */\n  _iterateItems: function(fn, itemSet) {\n    var pidx, vidx, rtn, i;\n\n    if (arguments.length === 2 && itemSet) {\n      for (i = 0; i < itemSet.length; i++) {\n        pidx = itemSet[i];\n        vidx = this._computeVidx(pidx);\n        if ((rtn = fn.call(this, pidx, vidx)) != null) {\n          return rtn;\n        }\n      }\n    } else {\n      pidx = this._physicalStart;\n      vidx = this._virtualStart;\n      for (; pidx < this._physicalCount; pidx++, vidx++) {\n        if ((rtn = fn.call(this, pidx, vidx)) != null) {\n          return rtn;\n        }\n      }\n      for (pidx = 0; pidx < this._physicalStart; pidx++, vidx++) {\n        if ((rtn = fn.call(this, pidx, vidx)) != null) {\n          return rtn;\n        }\n      }\n    }\n  },\n\n  /**\n   * Returns the virtual index for a given physical index\n   *\n   * @param {number} pidx Physical index\n   * @return {number}\n   */\n  _computeVidx: function(pidx) {\n    if (pidx >= this._physicalStart) {\n      return this._virtualStart + (pidx - this._physicalStart);\n    }\n    return this._virtualStart + (this._physicalCount - this._physicalStart) +\n        pidx;\n  },\n\n  /**\n   * Assigns the data models to a given set of items.\n   * @param {!Array<number>=} itemSet\n   */\n  _assignModels: function(itemSet) {\n    this._iterateItems(function(pidx, vidx) {\n      var el = this._physicalItems[pidx];\n      var item = this.items && this.items[vidx];\n      if (item != null) {\n        var inst = this.modelForElement(el);\n        inst.__key__ = null;\n        this._forwardProperty(inst, this.as, item);\n        this._forwardProperty(\n            inst, this.selectedAs, this.$.selector.isSelected(item));\n        this._forwardProperty(inst, this.indexAs, vidx);\n        this._forwardProperty(\n            inst, 'tabIndex', this._focusedVirtualIndex === vidx ? 0 : -1);\n        this._physicalIndexForKey[inst.__key__] = pidx;\n        inst._flushProperties && inst._flushProperties(true);\n        el.removeAttribute('hidden');\n      } else {\n        el.setAttribute('hidden', '');\n      }\n    }, itemSet);\n  },\n\n  /**\n   * Updates the height for a given set of items.\n   *\n   * @param {!Array<number>=} itemSet\n   */\n  _updateMetrics: function(itemSet) {\n    // Make sure we distributed all the physical items\n    // so we can measure them.\n    flush();\n\n    var newPhysicalSize = 0;\n    var oldPhysicalSize = 0;\n    var prevAvgCount = this._physicalAverageCount;\n    var prevPhysicalAvg = this._physicalAverage;\n\n    this._iterateItems(function(pidx, vidx) {\n      oldPhysicalSize += this._physicalSizes[pidx];\n      this._physicalSizes[pidx] = this._physicalItems[pidx].offsetHeight;\n      newPhysicalSize += this._physicalSizes[pidx];\n      this._physicalAverageCount += this._physicalSizes[pidx] ? 1 : 0;\n    }, itemSet);\n\n    if (this.grid) {\n      this._updateGridMetrics();\n      this._physicalSize =\n          Math.ceil(this._physicalCount / this._itemsPerRow) * this._rowHeight;\n    } else {\n      oldPhysicalSize = (this._itemsPerRow === 1) ?\n          oldPhysicalSize :\n          Math.ceil(this._physicalCount / this._itemsPerRow) * this._rowHeight;\n      this._physicalSize =\n          this._physicalSize + newPhysicalSize - oldPhysicalSize;\n      this._itemsPerRow = 1;\n    }\n    // Update the average if it measured something.\n    if (this._physicalAverageCount !== prevAvgCount) {\n      this._physicalAverage = Math.round(\n          ((prevPhysicalAvg * prevAvgCount) + newPhysicalSize) /\n          this._physicalAverageCount);\n    }\n  },\n\n  _updateGridMetrics: function() {\n    this._itemWidth = this._physicalCount > 0 ?\n        this._physicalItems[0].getBoundingClientRect().width :\n        200;\n    this._rowHeight =\n        this._physicalCount > 0 ? this._physicalItems[0].offsetHeight : 200;\n    this._itemsPerRow = this._itemWidth ?\n        Math.floor(this._viewportWidth / this._itemWidth) :\n        this._itemsPerRow;\n  },\n\n  /**\n   * Updates the position of the physical items.\n   */\n  _positionItems: function() {\n    this._adjustScrollPosition();\n\n    var y = this._physicalTop;\n\n    if (this.grid) {\n      var totalItemWidth = this._itemsPerRow * this._itemWidth;\n      var rowOffset = (this._viewportWidth - totalItemWidth) / 2;\n\n      this._iterateItems(function(pidx, vidx) {\n        var modulus = vidx % this._itemsPerRow;\n        var x = Math.floor((modulus * this._itemWidth) + rowOffset);\n        if (this._isRTL) {\n          x = x * -1;\n        }\n        this.translate3d(x + 'px', y + 'px', 0, this._physicalItems[pidx]);\n        if (this._shouldRenderNextRow(vidx)) {\n          y += this._rowHeight;\n        }\n      });\n    } else {\n      this._iterateItems(function(pidx, vidx) {\n        this.translate3d(0, y + 'px', 0, this._physicalItems[pidx]);\n        y += this._physicalSizes[pidx];\n      });\n    }\n  },\n\n  _getPhysicalSizeIncrement: function(pidx) {\n    if (!this.grid) {\n      return this._physicalSizes[pidx];\n    }\n    if (this._computeVidx(pidx) % this._itemsPerRow !== this._itemsPerRow - 1) {\n      return 0;\n    }\n    return this._rowHeight;\n  },\n\n  /**\n   * Returns, based on the current index,\n   * whether or not the next index will need\n   * to be rendered on a new row.\n   *\n   * @param {number} vidx Virtual index\n   * @return {boolean}\n   */\n  _shouldRenderNextRow: function(vidx) {\n    return vidx % this._itemsPerRow === this._itemsPerRow - 1;\n  },\n\n  /**\n   * Adjusts the scroll position when it was overestimated.\n   */\n  _adjustScrollPosition: function() {\n    var deltaHeight = this._virtualStart === 0 ?\n        this._physicalTop :\n        Math.min(this._scrollPosition + this._physicalTop, 0);\n    // Note: the delta can be positive or negative.\n    if (deltaHeight !== 0) {\n      this._physicalTop = this._physicalTop - deltaHeight;\n      var scrollTop = this._scrollTop;\n      // juking scroll position during interial scrolling on iOS is no bueno\n      if (!IOS_TOUCH_SCROLLING && scrollTop > 0) {\n        this._resetScrollPosition(scrollTop - deltaHeight);\n      }\n    }\n  },\n\n  /**\n   * Sets the position of the scroll.\n   */\n  _resetScrollPosition: function(pos) {\n    if (this.scrollTarget && pos >= 0) {\n      this._scrollTop = pos;\n      this._scrollPosition = this._scrollTop;\n    }\n  },\n\n  /**\n   * Sets the scroll height, that's the height of the content,\n   *\n   * @param {boolean=} forceUpdate If true, updates the height no matter what.\n   */\n  _updateScrollerSize: function(forceUpdate) {\n    if (this.grid) {\n      this._estScrollHeight = this._virtualRowCount * this._rowHeight;\n    } else {\n      this._estScrollHeight =\n          (this._physicalBottom +\n           Math.max(\n               this._virtualCount - this._physicalCount - this._virtualStart,\n               0) *\n               this._physicalAverage);\n    }\n    forceUpdate = forceUpdate || this._scrollHeight === 0;\n    forceUpdate = forceUpdate ||\n        this._scrollPosition >= this._estScrollHeight - this._physicalSize;\n    forceUpdate = forceUpdate ||\n        this.grid && this.$.items.style.height < this._estScrollHeight;\n    // Amortize height adjustment, so it won't trigger large repaints too often.\n    if (forceUpdate ||\n        Math.abs(this._estScrollHeight - this._scrollHeight) >=\n            this._viewportHeight) {\n      this.$.items.style.height = this._estScrollHeight + 'px';\n      this._scrollHeight = this._estScrollHeight;\n    }\n  },\n\n  /**\n   * Scroll to a specific item in the virtual list regardless\n   * of the physical items in the DOM tree.\n   *\n   * @method scrollToItem\n   * @param {(Object)} item The item to be scrolled to\n   */\n  scrollToItem: function(item) {\n    return this.scrollToIndex(this.items.indexOf(item));\n  },\n\n  /**\n   * Scroll to a specific index in the virtual list regardless\n   * of the physical items in the DOM tree.\n   *\n   * @method scrollToIndex\n   * @param {number} idx The index of the item\n   */\n  scrollToIndex: function(idx) {\n    if (typeof idx !== 'number' || idx < 0 || idx > this.items.length - 1) {\n      return;\n    }\n    flush();\n    // Items should have been rendered prior scrolling to an index.\n    if (this._physicalCount === 0) {\n      return;\n    }\n    idx = this._clamp(idx, 0, this._virtualCount - 1);\n    // Update the virtual start only when needed.\n    if (!this._isIndexRendered(idx) || idx >= this._maxVirtualStart) {\n      this._virtualStart =\n          this.grid ? (idx - this._itemsPerRow * 2) : (idx - 1);\n    }\n    this._manageFocus();\n    this._assignModels();\n    this._updateMetrics();\n    // Estimate new physical offset.\n    this._physicalTop = Math.floor(this._virtualStart / this._itemsPerRow) *\n        this._physicalAverage;\n\n    var currentTopItem = this._physicalStart;\n    var currentVirtualItem = this._virtualStart;\n    var targetOffsetTop = 0;\n    var hiddenContentSize = this._hiddenContentSize;\n    // scroll to the item as much as we can.\n    while (currentVirtualItem < idx && targetOffsetTop <= hiddenContentSize) {\n      targetOffsetTop =\n          targetOffsetTop + this._getPhysicalSizeIncrement(currentTopItem);\n      currentTopItem = (currentTopItem + 1) % this._physicalCount;\n      currentVirtualItem++;\n    }\n    this._updateScrollerSize(true);\n    this._positionItems();\n    this._resetScrollPosition(\n        this._physicalTop + this._scrollOffset + targetOffsetTop);\n    this._increasePoolIfNeeded(0);\n    // clear cached visible index.\n    this._firstVisibleIndexVal = null;\n    this._lastVisibleIndexVal = null;\n  },\n\n  /**\n   * Reset the physical average and the average count.\n   */\n  _resetAverage: function() {\n    this._physicalAverage = 0;\n    this._physicalAverageCount = 0;\n  },\n\n  /**\n   * A handler for the `iron-resize` event triggered by `IronResizableBehavior`\n   * when the element is resized.\n   */\n  _resizeHandler: function() {\n    this._debounce('_render', function() {\n      // clear cached visible index.\n      this._firstVisibleIndexVal = null;\n      this._lastVisibleIndexVal = null;\n      if (this._isVisible) {\n        this.updateViewportBoundaries();\n        // Reinstall the scroll event listener.\n        this.toggleScrollListener(true);\n        this._resetAverage();\n        this._render();\n      } else {\n        // Uninstall the scroll event listener.\n        this.toggleScrollListener(false);\n      }\n    }, animationFrame);\n  },\n\n  /**\n   * Selects the given item.\n   *\n   * @method selectItem\n   * @param {Object} item The item instance.\n   */\n  selectItem: function(item) {\n    return this.selectIndex(this.items.indexOf(item));\n  },\n\n  /**\n   * Selects the item at the given index in the items array.\n   *\n   * @method selectIndex\n   * @param {number} index The index of the item in the items array.\n   */\n  selectIndex: function(index) {\n    if (index < 0 || index >= this._virtualCount) {\n      return;\n    }\n    if (!this.multiSelection && this.selectedItem) {\n      this.clearSelection();\n    }\n    if (this._isIndexRendered(index)) {\n      var model = this.modelForElement(\n          this._physicalItems[this._getPhysicalIndex(index)]);\n      if (model) {\n        model[this.selectedAs] = true;\n      }\n      this.updateSizeForIndex(index);\n    }\n    this.$.selector.selectIndex(index);\n  },\n\n  /**\n   * Deselects the given item.\n   *\n   * @method deselect\n   * @param {Object} item The item instance.\n   */\n  deselectItem: function(item) {\n    return this.deselectIndex(this.items.indexOf(item));\n  },\n\n  /**\n   * Deselects the item at the given index in the items array.\n   *\n   * @method deselectIndex\n   * @param {number} index The index of the item in the items array.\n   */\n  deselectIndex: function(index) {\n    if (index < 0 || index >= this._virtualCount) {\n      return;\n    }\n    if (this._isIndexRendered(index)) {\n      var model = this.modelForElement(\n          this._physicalItems[this._getPhysicalIndex(index)]);\n      model[this.selectedAs] = false;\n      this.updateSizeForIndex(index);\n    }\n    this.$.selector.deselectIndex(index);\n  },\n\n  /**\n   * Selects or deselects a given item depending on whether the item\n   * has already been selected.\n   *\n   * @method toggleSelectionForItem\n   * @param {Object} item The item object.\n   */\n  toggleSelectionForItem: function(item) {\n    return this.toggleSelectionForIndex(this.items.indexOf(item));\n  },\n\n  /**\n   * Selects or deselects the item at the given index in the items array\n   * depending on whether the item has already been selected.\n   *\n   * @method toggleSelectionForIndex\n   * @param {number} index The index of the item in the items array.\n   */\n  toggleSelectionForIndex: function(index) {\n    var isSelected = this.$.selector.isIndexSelected ?\n        this.$.selector.isIndexSelected(index) :\n        this.$.selector.isSelected(this.items[index]);\n    isSelected ? this.deselectIndex(index) : this.selectIndex(index);\n  },\n\n  /**\n   * Clears the current selection in the list.\n   *\n   * @method clearSelection\n   */\n  clearSelection: function() {\n    this._iterateItems(function(pidx, vidx) {\n      this.modelForElement(this._physicalItems[pidx])[this.selectedAs] = false;\n    });\n    this.$.selector.clearSelection();\n  },\n\n  /**\n   * Add an event listener to `tap` if `selectionEnabled` is true,\n   * it will remove the listener otherwise.\n   */\n  _selectionEnabledChanged: function(selectionEnabled) {\n    var handler = selectionEnabled ? this.listen : this.unlisten;\n    handler.call(this, this, 'tap', '_selectionHandler');\n  },\n\n  /**\n   * Select an item from an event object.\n   */\n  _selectionHandler: function(e) {\n    var model = this.modelForElement(e.target);\n    if (!model) {\n      return;\n    }\n    var modelTabIndex, activeElTabIndex;\n    var target = dom(e).path[0];\n    var activeEl = this._getActiveElement();\n    var physicalItem =\n        this._physicalItems[this._getPhysicalIndex(model[this.indexAs])];\n    // Safari does not focus certain form controls via mouse\n    // https://bugs.webkit.org/show_bug.cgi?id=118043\n    if (target.localName === 'input' || target.localName === 'button' ||\n        target.localName === 'select') {\n      return;\n    }\n    // Set a temporary tabindex\n    modelTabIndex = model.tabIndex;\n    model.tabIndex = SECRET_TABINDEX;\n    activeElTabIndex = activeEl ? activeEl.tabIndex : -1;\n    model.tabIndex = modelTabIndex;\n    // Only select the item if the tap wasn't on a focusable child\n    // or the element bound to `tabIndex`\n    if (activeEl && physicalItem !== activeEl &&\n        physicalItem.contains(activeEl) &&\n        activeElTabIndex !== SECRET_TABINDEX) {\n      return;\n    }\n    this.toggleSelectionForItem(model[this.as]);\n  },\n\n  _multiSelectionChanged: function(multiSelection) {\n    this.clearSelection();\n    this.$.selector.multi = multiSelection;\n  },\n\n  /**\n   * Updates the size of a given list item.\n   *\n   * @method updateSizeForItem\n   * @param {Object} item The item instance.\n   */\n  updateSizeForItem: function(item) {\n    return this.updateSizeForIndex(this.items.indexOf(item));\n  },\n\n  /**\n   * Updates the size of the item at the given index in the items array.\n   *\n   * @method updateSizeForIndex\n   * @param {number} index The index of the item in the items array.\n   */\n  updateSizeForIndex: function(index) {\n    if (!this._isIndexRendered(index)) {\n      return null;\n    }\n    this._updateMetrics([this._getPhysicalIndex(index)]);\n    this._positionItems();\n    return null;\n  },\n\n  /**\n   * Creates a temporary backfill item in the rendered pool of physical items\n   * to replace the main focused item. The focused item has tabIndex = 0\n   * and might be currently focused by the user.\n   *\n   * This dynamic replacement helps to preserve the focus state.\n   */\n  _manageFocus: function() {\n    var fidx = this._focusedVirtualIndex;\n\n    if (fidx >= 0 && fidx < this._virtualCount) {\n      // if it's a valid index, check if that index is rendered\n      // in a physical item.\n      if (this._isIndexRendered(fidx)) {\n        this._restoreFocusedItem();\n      } else {\n        this._createFocusBackfillItem();\n      }\n    } else if (this._virtualCount > 0 && this._physicalCount > 0) {\n      // otherwise, assign the initial focused index.\n      this._focusedPhysicalIndex = this._physicalStart;\n      this._focusedVirtualIndex = this._virtualStart;\n      this._focusedItem = this._physicalItems[this._physicalStart];\n    }\n  },\n\n  /**\n   * Converts a random index to the index of the item that completes it's row.\n   * Allows for better order and fill computation when grid == true.\n   */\n  _convertIndexToCompleteRow: function(idx) {\n    // when grid == false _itemPerRow can be unset.\n    this._itemsPerRow = this._itemsPerRow || 1;\n    return this.grid ? Math.ceil(idx / this._itemsPerRow) * this._itemsPerRow :\n                       idx;\n  },\n\n  _isIndexRendered: function(idx) {\n    return idx >= this._virtualStart && idx <= this._virtualEnd;\n  },\n\n  _isIndexVisible: function(idx) {\n    return idx >= this.firstVisibleIndex && idx <= this.lastVisibleIndex;\n  },\n\n  _getPhysicalIndex: function(vidx) {\n    return (this._physicalStart + (vidx - this._virtualStart)) %\n        this._physicalCount;\n  },\n\n  focusItem: function(idx) {\n    this._focusPhysicalItem(idx);\n  },\n\n  _focusPhysicalItem: function(idx) {\n    if (idx < 0 || idx >= this._virtualCount) {\n      return;\n    }\n    this._restoreFocusedItem();\n    // scroll to index to make sure it's rendered\n    if (!this._isIndexRendered(idx)) {\n      this.scrollToIndex(idx);\n    }\n    var physicalItem = this._physicalItems[this._getPhysicalIndex(idx)];\n    var model = this.modelForElement(physicalItem);\n    var focusable;\n    // set a secret tab index\n    model.tabIndex = SECRET_TABINDEX;\n    // check if focusable element is the physical item\n    if (physicalItem.tabIndex === SECRET_TABINDEX) {\n      focusable = physicalItem;\n    }\n    // search for the element which tabindex is bound to the secret tab index\n    if (!focusable) {\n      focusable = dom(physicalItem)\n                      .querySelector('[tabindex=\"' + SECRET_TABINDEX + '\"]');\n    }\n    // restore the tab index\n    model.tabIndex = 0;\n    // focus the focusable element\n    this._focusedVirtualIndex = idx;\n    focusable && focusable.focus();\n  },\n\n  _removeFocusedItem: function() {\n    if (this._offscreenFocusedItem) {\n      this._itemsParent.removeChild(this._offscreenFocusedItem);\n    }\n    this._offscreenFocusedItem = null;\n    this._focusBackfillItem = null;\n    this._focusedItem = null;\n    this._focusedVirtualIndex = -1;\n    this._focusedPhysicalIndex = -1;\n  },\n\n  _createFocusBackfillItem: function() {\n    var fpidx = this._focusedPhysicalIndex;\n\n    if (this._offscreenFocusedItem || this._focusedVirtualIndex < 0) {\n      return;\n    }\n    if (!this._focusBackfillItem) {\n      // Create a physical item.\n      var inst = this.stamp(null);\n      this._focusBackfillItem = inst.root.querySelector('*');\n      this._itemsParent.appendChild(inst.root);\n    }\n    // Set the offcreen focused physical item.\n    this._offscreenFocusedItem = this._physicalItems[fpidx];\n    this.modelForElement(this._offscreenFocusedItem).tabIndex = 0;\n    this._physicalItems[fpidx] = this._focusBackfillItem;\n    this._focusedPhysicalIndex = fpidx;\n    // Hide the focused physical.\n    this.translate3d(0, HIDDEN_Y, 0, this._offscreenFocusedItem);\n  },\n\n  _restoreFocusedItem: function() {\n    if (!this._offscreenFocusedItem || this._focusedVirtualIndex < 0) {\n      return;\n    }\n    // Assign models to the focused index.\n    this._assignModels();\n    // Get the new physical index for the focused index.\n    var fpidx = this._focusedPhysicalIndex =\n        this._getPhysicalIndex(this._focusedVirtualIndex);\n\n    var onScreenItem = this._physicalItems[fpidx];\n    if (!onScreenItem) {\n      return;\n    }\n    var onScreenInstance = this.modelForElement(onScreenItem);\n    var offScreenInstance = this.modelForElement(this._offscreenFocusedItem);\n    // Restores the physical item only when it has the same model\n    // as the offscreen one. Use key for comparison since users can set\n    // a new item via set('items.idx').\n    if (onScreenInstance[this.as] === offScreenInstance[this.as]) {\n      // Flip the focus backfill.\n      this._focusBackfillItem = onScreenItem;\n      onScreenInstance.tabIndex = -1;\n      // Restore the focused physical item.\n      this._physicalItems[fpidx] = this._offscreenFocusedItem;\n      // Hide the physical item that backfills.\n      this.translate3d(0, HIDDEN_Y, 0, this._focusBackfillItem);\n    } else {\n      this._removeFocusedItem();\n      this._focusBackfillItem = null;\n    }\n    this._offscreenFocusedItem = null;\n  },\n\n  _didFocus: function(e) {\n    var targetModel = this.modelForElement(e.target);\n    var focusedModel = this.modelForElement(this._focusedItem);\n    var hasOffscreenFocusedItem = this._offscreenFocusedItem !== null;\n    var fidx = this._focusedVirtualIndex;\n    if (!targetModel) {\n      return;\n    }\n    if (focusedModel === targetModel) {\n      // If the user focused the same item, then bring it into view if it's not\n      // visible.\n      if (!this._isIndexVisible(fidx)) {\n        this.scrollToIndex(fidx);\n      }\n    } else {\n      this._restoreFocusedItem();\n      // Restore tabIndex for the currently focused item.\n      if (focusedModel) {\n        focusedModel.tabIndex = -1;\n      }\n      // Set the tabIndex for the next focused item.\n      targetModel.tabIndex = 0;\n      fidx = targetModel[this.indexAs];\n      this._focusedVirtualIndex = fidx;\n      this._focusedPhysicalIndex = this._getPhysicalIndex(fidx);\n      this._focusedItem = this._physicalItems[this._focusedPhysicalIndex];\n      if (hasOffscreenFocusedItem && !this._offscreenFocusedItem) {\n        this._update();\n      }\n    }\n  },\n\n  _keydownHandler: function(e) {\n    switch (e.keyCode) {\n      case /* ARROW_DOWN */ 40:\n        if (this._focusedVirtualIndex < this._virtualCount - 1)\n          e.preventDefault();\n        this._focusPhysicalItem(\n            this._focusedVirtualIndex + (this.grid ? this._itemsPerRow : 1));\n        break;\n      case /* ARROW_RIGHT */ 39:\n        if (this.grid)\n          this._focusPhysicalItem(\n              this._focusedVirtualIndex + (this._isRTL ? -1 : 1));\n        break;\n      case /* ARROW_UP */ 38:\n        if (this._focusedVirtualIndex > 0)\n          e.preventDefault();\n        this._focusPhysicalItem(\n            this._focusedVirtualIndex - (this.grid ? this._itemsPerRow : 1));\n        break;\n      case /* ARROW_LEFT */ 37:\n        if (this.grid)\n          this._focusPhysicalItem(\n              this._focusedVirtualIndex + (this._isRTL ? 1 : -1));\n        break;\n      case /* ENTER */ 13:\n        this._focusPhysicalItem(this._focusedVirtualIndex);\n        if (this.selectionEnabled)\n          this._selectionHandler(e);\n        break;\n    }\n  },\n\n  _clamp: function(v, min, max) {\n    return Math.min(max, Math.max(min, v));\n  },\n\n  _debounce: function(name, cb, asyncModule) {\n    this._debouncers = this._debouncers || {};\n    this._debouncers[name] =\n        Debouncer.debounce(this._debouncers[name], asyncModule, cb.bind(this));\n    enqueueDebouncer(this._debouncers[name]);\n  },\n\n  _forwardProperty: function(inst, name, value) {\n    inst._setPendingProperty(name, value);\n  },\n\n  /* Templatizer bindings for v2 */\n  _forwardHostPropV2: function(prop, value) {\n    (this._physicalItems || [])\n        .concat([this._offscreenFocusedItem, this._focusBackfillItem])\n        .forEach(function(item) {\n          if (item) {\n            this.modelForElement(item).forwardHostProp(prop, value);\n          }\n        }, this);\n  },\n\n  _notifyInstancePropV2: function(inst, prop, value) {\n    if (matches(this.as, prop)) {\n      var idx = inst[this.indexAs];\n      if (prop == this.as) {\n        this.items[idx] = value;\n      }\n      this.notifyPath(translate(this.as, 'items.' + idx, prop), value);\n    }\n  },\n\n  /* Templatizer bindings for v1 */\n  _getStampedChildren: function() {\n    return this._physicalItems;\n  },\n\n  _forwardInstancePath: function(inst, path, value) {\n    if (path.indexOf(this.as + '.') === 0) {\n      this.notifyPath(\n          'items.' + inst.__key__ + '.' + path.slice(this.as.length + 1),\n          value);\n    }\n  },\n\n  _forwardParentPath: function(path, value) {\n    (this._physicalItems || [])\n        .concat([this._offscreenFocusedItem, this._focusBackfillItem])\n        .forEach(function(item) {\n          if (item) {\n            this.modelForElement(item).notifyPath(path, value, true);\n          }\n        }, this);\n  },\n\n  _forwardParentProp: function(prop, value) {\n    (this._physicalItems || [])\n        .concat([this._offscreenFocusedItem, this._focusBackfillItem])\n        .forEach(function(item) {\n          if (item) {\n            this.modelForElement(item)[prop] = value;\n          }\n        }, this);\n  },\n\n  /* Gets the activeElement of the shadow root/host that contains the list. */\n  _getActiveElement: function() {\n    var itemsHost = this._itemsParent.node.domHost;\n    return dom(itemsHost ? itemsHost.root : document).activeElement;\n  }\n});\n","/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\n/**\n * The default element used for items in the vaadin-combo-box.\n *\n * ### Styling\n *\n * The following shadow DOM parts are available for styling:\n *\n * Part name | Description\n * ---|---\n * `content` | The element that wraps the item label or template content\n *\n * The following state attributes are exposed for styling:\n *\n * Attribute    | Description | Part name\n * -------------|-------------|------------\n * `selected` | Set when the item is selected | :host\n * `focused` | Set when the item is focused | :host\n *\n * See [ThemableMixin – how to apply styles for shadow parts](https://github.com/vaadin/vaadin-themable-mixin/wiki)\n *\n * @memberof Vaadin\n * @mixes Vaadin.ThemableMixin\n * @private\n */\nclass ComboBoxItemElement extends ThemableMixin(PolymerElement) {\n  static get template() {\n    return html`\n    <style>\n      :host {\n        display: block;\n      }\n\n      :host([hidden]) {\n         display: none;\n      }\n    </style>\n    <div part=\"content\" id=\"content\"></div>\n`;\n  }\n\n  static get is() {\n    return 'vaadin-combo-box-item';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * The index of the item\n       */\n      index: Number,\n\n      /**\n       * The item to render\n       * @type {(String|Object)}\n       */\n      item: Object,\n\n      /**\n       * The text label corresponding to the item\n       */\n      label: String,\n\n      /**\n       * True when item is selected\n       */\n      selected: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      },\n\n      /**\n       * True when item is focused\n       */\n      focused: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      },\n\n      /**\n       * The template instance corresponding to the item\n       */\n      _itemTemplateInstance: Object,\n\n      /**\n       * Custom function for rendering the content of the `<vaadin-combo-box-item>` propagated from the combo box element.\n       */\n      renderer: Function,\n\n      /**\n       * Saved instance of a custom renderer function.\n       */\n      _oldRenderer: Function\n    };\n  }\n\n  static get observers() {\n    return [\n      '_rendererOrItemChanged(renderer, index, item.*)',\n      '_updateLabel(label, _itemTemplateInstance)',\n      '_updateTemplateInstanceVariable(\"index\", index, _itemTemplateInstance)',\n      '_updateTemplateInstanceVariable(\"item\", item, _itemTemplateInstance)',\n      '_updateTemplateInstanceVariable(\"selected\", selected, _itemTemplateInstance)',\n      '_updateTemplateInstanceVariable(\"focused\", focused, _itemTemplateInstance)'\n    ];\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    if (!this._itemTemplateInstance) {\n      // 2.0 has __dataHost. Might want to consider assigning combobox reference directly to item.\n      const overlay = this.getRootNode().host.getRootNode().host;\n      const dropdown = overlay.__dataHost;\n      const comboBoxOverlay = dropdown.getRootNode().host;\n      this._comboBox = comboBoxOverlay.getRootNode().host;\n      this._comboBox._ensureTemplatized();\n      if (this._comboBox._TemplateClass) {\n        this._itemTemplateInstance = new this._comboBox._TemplateClass({});\n        this.$.content.textContent = '';\n        this.$.content.appendChild(this._itemTemplateInstance.root);\n      }\n    }\n  }\n\n  _render() {\n    if (!this.renderer) {\n      return;\n    }\n\n    const model = {\n      index: this.index,\n      item: this.item\n    };\n\n    this.renderer(this.$.content, this._comboBox, model);\n  }\n\n  _rendererOrItemChanged(renderer, index, item) {\n    if (item === undefined || index === undefined) {\n      return;\n    }\n\n    if (this._oldRenderer !== renderer) {\n      this.$.content.innerHTML = '';\n    }\n\n    if (renderer) {\n      this._oldRenderer = renderer;\n      this._render();\n    }\n  }\n\n  _updateLabel(label, _itemTemplateInstance) {\n    if (_itemTemplateInstance === undefined && this.$.content && !this.renderer) {\n      // Only set label to textContent no template\n      this.$.content.textContent = label;\n    }\n  }\n\n  _updateTemplateInstanceVariable(variable, value, _itemTemplateInstance) {\n    if (variable === undefined || value === undefined || _itemTemplateInstance === undefined) {\n      return;\n    }\n    _itemTemplateInstance[variable] = value;\n  }\n}\n\ncustomElements.define(ComboBoxItemElement.is, ComboBoxItemElement);\n","/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport { DisableUpgradeMixin } from '@polymer/polymer/lib/mixins/disable-upgrade-mixin.js';\nimport { OverlayElement } from '@vaadin/vaadin-overlay/src/vaadin-overlay.js';\nimport { IronResizableBehavior } from '@polymer/iron-resizable-behavior/iron-resizable-behavior.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { mixinBehaviors } from '@polymer/polymer/lib/legacy/class.js';\n/**\n * The overlay element.\n *\n * ### Styling\n *\n * See [`<vaadin-overlay>` documentation](https://github.com/vaadin/vaadin-overlay/blob/master/src/vaadin-overlay.html)\n * for `<vaadin-combo-box-overlay>` parts.\n *\n * See [ThemableMixin – how to apply styles for shadow parts](https://github.com/vaadin/vaadin-themable-mixin/wiki)\n *\n * @memberof Vaadin\n * @private\n */\nclass ComboBoxOverlayElement extends OverlayElement {\n  static get is() {\n    return 'vaadin-combo-box-overlay';\n  }\n\n  ready() {\n    super.ready();\n    const loader = document.createElement('div');\n    loader.setAttribute('part', 'loader');\n    const content = this.shadowRoot.querySelector(['[part~=\"content\"]']);\n    content.parentNode.insertBefore(loader, content);\n  }\n}\n\ncustomElements.define(ComboBoxOverlayElement.is, ComboBoxOverlayElement);\n\n/**\n * Element for internal use only.\n *\n * @memberof Vaadin\n * @private\n */\nclass ComboBoxDropdownElement extends DisableUpgradeMixin(\n  mixinBehaviors(IronResizableBehavior, PolymerElement)) {\n  static get template() {\n    return html`\n    <style>\n      :host {\n        display: block;\n      }\n\n      :host > #overlay {\n        display: none;\n      }\n    </style>\n    <vaadin-combo-box-overlay id=\"overlay\" hidden\\$=\"[[hidden]]\" opened=\"[[opened]]\" template=\"{{template}}\" style=\"align-items: stretch; margin: 0;\" theme\\$=\"[[theme]]\">\n      <slot></slot>\n    </vaadin-combo-box-overlay>\n`;\n  }\n\n  static get is() {\n    return 'vaadin-combo-box-dropdown';\n  }\n\n  static get properties() {\n    return {\n      opened: {\n        type: Boolean,\n        observer: '_openedChanged'\n      },\n\n      template: {\n        type: Object,\n        notify: true\n      },\n\n      /**\n       * The element to position/align the dropdown by.\n       */\n      positionTarget: {\n        type: Object\n      },\n\n      /**\n       * If `true`, overlay is aligned above the `positionTarget`\n       */\n      alignedAbove: {\n        type: Boolean,\n        value: false\n      },\n\n      /**\n       * Used to propagate the `theme` attribute from the host element.\n       */\n      theme: String\n    };\n  }\n\n  constructor() {\n    super();\n    this._boundSetPosition = this._setPosition.bind(this);\n    this._boundOutsideClickListener = this._outsideClickListener.bind(this);\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.addEventListener('iron-resize', this._boundSetPosition);\n  }\n\n  ready() {\n    super.ready();\n\n    // Preventing the default modal behaviour of the overlay on input clicking\n    this.$.overlay.addEventListener('vaadin-overlay-outside-click', e => {\n      e.preventDefault();\n    });\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this.removeEventListener('iron-resize', this._boundSetPosition);\n\n    // Making sure the overlay is closed and removed from DOM after detaching the dropdown.\n    this.opened = false;\n  }\n\n  notifyResize() {\n    super.notifyResize();\n\n    if (this.positionTarget && this.opened) {\n      this._setPosition();\n      // Schedule another position update (to cover virtual keyboard opening for example)\n      requestAnimationFrame(this._setPosition.bind(this));\n    }\n  }\n\n  /**\n   * Fired after the `vaadin-combo-box-dropdown` opens.\n   *\n   * @event vaadin-combo-box-dropdown-opened\n   */\n  /**\n   * Fired after the `vaadin-combo-box-dropdown` closes.\n   *\n   * @event vaadin-combo-box-dropdown-closed\n   */\n\n  _openedChanged(opened, oldValue) {\n    if (!!opened === !!oldValue) {\n      return;\n    }\n\n    if (opened) {\n      this.$.overlay.style.position = this._isPositionFixed(this.positionTarget) ? 'fixed' : 'absolute';\n      this._setPosition();\n\n      window.addEventListener('scroll', this._boundSetPosition, true);\n      document.addEventListener('click', this._boundOutsideClickListener, true);\n      this.dispatchEvent(new CustomEvent('vaadin-combo-box-dropdown-opened', {bubbles: true, composed: true}));\n    } else {\n      window.removeEventListener('scroll', this._boundSetPosition, true);\n      document.removeEventListener('click', this._boundOutsideClickListener, true);\n      this.dispatchEvent(new CustomEvent('vaadin-combo-box-dropdown-closed', {bubbles: true, composed: true}));\n    }\n  }\n\n\n  // We need to listen on 'click' event and capture it and close the overlay before\n  // propagating the event to the listener in the button. Otherwise, if the clicked button would call\n  // open(), this would happen: https://www.youtube.com/watch?v=Z86V_ICUCD4\n  _outsideClickListener(event) {\n    const eventPath = event.composedPath();\n    if (eventPath.indexOf(this.positionTarget) < 0 && eventPath.indexOf(this.$.overlay) < 0) {\n      this.opened = false;\n    }\n  }\n\n  _isPositionFixed(element) {\n    const offsetParent = this._getOffsetParent(element);\n\n    return window.getComputedStyle(element).position === 'fixed' ||\n      (offsetParent && this._isPositionFixed(offsetParent));\n  }\n\n  _getOffsetParent(element) {\n    if (element.assignedSlot) {\n      return element.assignedSlot.parentElement;\n    } else if (element.parentElement) {\n      return element.offsetParent;\n    }\n\n    const parent = element.parentNode;\n\n    if (parent && parent.nodeType === 11 && parent.host) {\n      return parent.host; // parent is #shadowRoot\n    }\n  }\n\n  _verticalOffset(overlayRect, targetRect) {\n    return this.alignedAbove ? -overlayRect.height : targetRect.height;\n  }\n\n  _shouldAlignAbove(targetRect) {\n    const spaceBelow = (\n      window.innerHeight -\n      targetRect.bottom -\n      Math.min(document.body.scrollTop, 0)\n    ) / window.innerHeight;\n\n    return spaceBelow < 0.30;\n  }\n\n  _setPosition(e) {\n    if (e && e.target) {\n      const target = e.target === document ? document.body : e.target;\n      const parent = this.$.overlay.parentElement;\n      if (!(target.contains(this.$.overlay) || target.contains(this.positionTarget)) || parent !== document.body) {\n        return;\n      }\n    }\n\n    const targetRect = this.positionTarget.getBoundingClientRect();\n    this.alignedAbove = this._shouldAlignAbove(targetRect);\n\n    const overlayRect = this.$.overlay.getBoundingClientRect();\n    this._translateX = targetRect.left - overlayRect.left + (this._translateX || 0);\n    this._translateY = targetRect.top - overlayRect.top + (this._translateY || 0) +\n      this._verticalOffset(overlayRect, targetRect);\n\n    const _devicePixelRatio = window.devicePixelRatio || 1;\n    this._translateX = Math.round(this._translateX * _devicePixelRatio) / _devicePixelRatio;\n    this._translateY = Math.round(this._translateY * _devicePixelRatio) / _devicePixelRatio;\n    this.$.overlay.style.transform = `translate3d(${this._translateX}px, ${this._translateY}px, 0)`;\n\n    this.$.overlay.style.width = this.positionTarget.clientWidth + 'px';\n    this.$.overlay.style.justifyContent = this.alignedAbove ? 'flex-end' : 'flex-start';\n\n    // TODO: fire only when position actually changes changes\n    this.dispatchEvent(new CustomEvent('position-changed'));\n  }\n}\n\ncustomElements.define(ComboBoxDropdownElement.is, ComboBoxDropdownElement);\n","/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport '@polymer/iron-list/iron-list.js';\nimport './vaadin-combo-box-item.js';\nimport './vaadin-combo-box-dropdown.js';\nimport { ComboBoxPlaceholder } from './vaadin-combo-box-placeholder.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\n\nconst TOUCH_DEVICE = (() => {\n  try {\n    document.createEvent('TouchEvent');\n    return true;\n  } catch (e) {\n    return false;\n  }\n})();\n\n/**\n * Element for internal use only.\n *\n * @memberof Vaadin\n * @private\n */\nclass ComboBoxDropdownWrapperElement extends (class extends PolymerElement {}) {\n  static get template() {\n    return html`\n    <vaadin-combo-box-dropdown id=\"dropdown\" hidden=\"[[_hidden(_items.*, loading)]]\" position-target=\"[[positionTarget]]\" on-template-changed=\"_templateChanged\" on-position-changed=\"_setOverlayHeight\" disable-upgrade=\"\" theme=\"[[theme]]\">\n      <template>\n        <style>\n          #scroller {\n            overflow: auto;\n\n            /* Fixes item background from getting on top of scrollbars on Safari */\n            transform: translate3d(0, 0, 0);\n\n            /* Enable momentum scrolling on iOS (iron-list v1.2+ no longer does it for us) */\n            -webkit-overflow-scrolling: touch;\n\n            /* Fixes scrollbar disappearing when 'Show scroll bars: Always' enabled in Safari */\n            box-shadow: 0 0 0 white;\n          }\n        </style>\n        <div id=\"scroller\" on-click=\"_stopPropagation\">\n          <iron-list id=\"selector\" role=\"listbox\" items=\"[[_getItems(opened, _items)]]\" scroll-target=\"[[_scroller]]\">\n            <template>\n              <vaadin-combo-box-item on-click=\"_onItemClick\" index=\"[[__requestItemByIndex(item, index)]]\" item=\"[[item]]\" label=\"[[getItemLabel(item, _itemLabelPath)]]\" selected=\"[[_isItemSelected(item, _selectedItem, _itemIdPath)]]\" renderer=\"[[renderer]]\" role\\$=\"[[_getAriaRole(index)]]\" aria-selected\\$=\"[[_getAriaSelected(_focusedIndex,index)]]\" focused=\"[[_isItemFocused(_focusedIndex,index)]]\" tabindex=\"-1\" theme\\$=\"[[theme]]\">\n              </vaadin-combo-box-item>\n            </template>\n          </iron-list>\n        </div>\n      </template>\n    </vaadin-combo-box-dropdown>\n`;\n  }\n\n  static get is() {\n    return 'vaadin-combo-box-dropdown-wrapper';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * True if the device supports touch events.\n       */\n      touchDevice: {\n        type: Boolean,\n        value: TOUCH_DEVICE\n      },\n\n      opened: Boolean,\n\n      /**\n       * The element to position/align the dropdown by.\n       */\n      positionTarget: {\n        type: Object\n      },\n\n      /**\n       * Custom function for rendering the content of the `<vaadin-combo-box-item>` propagated from the combo box element.\n       */\n      renderer: Function,\n\n      /**\n       * `true` when new items are being loaded.\n       */\n      loading: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true,\n        observer: '_setOverlayHeight'\n      },\n\n      /**\n       * Used to propagate the `theme` attribute from the host element.\n       */\n      theme: String,\n\n      _selectedItem: {\n        type: Object\n      },\n\n      _items: {\n        type: Object\n      },\n\n      _focusedIndex: {\n        type: Number,\n        value: -1,\n        observer: '_focusedIndexChanged'\n      },\n\n      _focusedItem: {\n        type: String,\n        computed: '_getFocusedItem(_focusedIndex)'\n      },\n\n      _itemLabelPath: {\n        type: String,\n        value: 'label'\n      },\n\n      _itemValuePath: {\n        type: String,\n        value: 'value'\n      },\n\n      _selector: Object,\n\n      _itemIdPath: String\n    };\n  }\n\n  static get observers() {\n    return ['_selectorChanged(_selector)', '_loadingChanged(loading)', '_openedChanged(opened, _items, loading)'];\n  }\n\n  _fireTouchAction(sourceEvent) {\n    this.dispatchEvent(new CustomEvent('vaadin-overlay-touch-action', {\n      detail: {sourceEvent: sourceEvent}\n    }));\n  }\n\n  _getItems(opened, items) {\n    return opened ? items : [];\n  }\n\n  _openedChanged(opened, items, loading) {\n    if (this.$.dropdown.hasAttribute('disable-upgrade')) {\n      if (!opened) {\n        return;\n      } else {\n        this._initDropdown();\n      }\n    }\n    // Do not attach if no items\n    // Do not dettach if opened but user types an invalid search\n    this.$.dropdown.opened = !!(opened && (loading || this.$.dropdown.opened || items && items.length));\n  }\n\n  _initDropdown() {\n    this.$.dropdown.removeAttribute('disable-upgrade');\n\n    this._templateChanged();\n    this._loadingChanged(this.loading);\n\n    this.$.dropdown.$.overlay.addEventListener('touchend', e => this._fireTouchAction(e));\n    this.$.dropdown.$.overlay.addEventListener('touchmove', e => this._fireTouchAction(e));\n\n    // Prevent blurring the input when clicking inside the overlay.\n    this.$.dropdown.$.overlay.addEventListener('mousedown', e => e.preventDefault());\n\n    // IE11: when scrolling with mouse, the focus goes to the scroller.\n    // This causes the overlay closing due to defocusing the input field.\n    // Prevent focusing the scroller by setting `unselectable=\"on\"`.\n    if (/Trident/.test(navigator.userAgent)) {\n      this._scroller.setAttribute('unselectable', 'on');\n    }\n  }\n\n  _templateChanged(e) {\n    if (this.$.dropdown.hasAttribute('disable-upgrade')) {\n      return;\n    }\n\n    this._selector = this.$.dropdown.$.overlay.content.querySelector('#selector');\n    this._scroller = this.$.dropdown.$.overlay.content.querySelector('#scroller');\n  }\n\n  _loadingChanged(loading) {\n    if (this.$.dropdown.hasAttribute('disable-upgrade')) {\n      return;\n    }\n\n    if (loading) {\n      this.$.dropdown.$.overlay.setAttribute('loading', '');\n    } else {\n      this.$.dropdown.$.overlay.removeAttribute('loading');\n    }\n  }\n\n  _selectorChanged(selector) {\n    this._patchWheelOverScrolling();\n  }\n\n  _setOverlayHeight() {\n    if (!this.opened || !this.positionTarget || !this._selector) {\n      return;\n    }\n\n    const targetRect = this.positionTarget.getBoundingClientRect();\n\n    this._scroller.style.maxHeight = (window.ShadyCSS ?\n      window.ShadyCSS.getComputedStyleValue(this, '--vaadin-combo-box-overlay-max-height') :\n      getComputedStyle(this).getPropertyValue('--vaadin-combo-box-overlay-max-height')) || '65vh';\n\n    const maxHeight = this._maxOverlayHeight(targetRect);\n\n    // overlay max height is restrained by the #scroller max height which is set to 65vh in CSS.\n    this.$.dropdown.$.overlay.style.maxHeight = maxHeight;\n\n    // we need to set height for iron-list to make its `firstVisibleIndex` work correctly.\n    this._selector.style.maxHeight = maxHeight;\n\n    this.updateViewportBoundaries();\n  }\n\n  _maxOverlayHeight(targetRect) {\n    const margin = 8;\n    const minHeight = 116; // Height of two items in combo-box\n    const bottom = Math.min(window.innerHeight, document.body.scrollHeight - document.body.scrollTop);\n\n    if (this.$.dropdown.alignedAbove) {\n      return Math.max(targetRect.top - margin + Math.min(document.body.scrollTop, 0), minHeight) + 'px';\n    } else {\n      return Math.max(bottom - targetRect.bottom - margin, minHeight) + 'px';\n    }\n  }\n\n  _getFocusedItem(focusedIndex) {\n    if (focusedIndex >= 0) {\n      return this._items[focusedIndex];\n    }\n  }\n\n  _isItemSelected(item, selectedItem, itemIdPath) {\n    if (item instanceof ComboBoxPlaceholder) {\n      return false;\n    } else if (itemIdPath && item !== undefined && selectedItem !== undefined) {\n      return this.get(itemIdPath, item) === this.get(itemIdPath, selectedItem);\n    } else {\n      return item === selectedItem;\n    }\n  }\n\n  _onItemClick(e) {\n    if (e.detail && e.detail.sourceEvent && e.detail.sourceEvent.stopPropagation) {\n      this._stopPropagation(e.detail.sourceEvent);\n    }\n\n    this.dispatchEvent(new CustomEvent('selection-changed', {detail: {item: e.model.item}}));\n  }\n\n  /**\n   * Gets the index of the item with the provided label.\n   * @return {Number}\n   */\n  indexOfLabel(label) {\n    if (this._items && label) {\n      for (let i = 0; i < this._items.length; i++) {\n        if (this.getItemLabel(this._items[i]).toString().toLowerCase() ===\n          label.toString().toLowerCase()) {\n          return i;\n        }\n      }\n    }\n\n    return -1;\n  }\n\n  /**\n   * If dataProvider is used, dispatch a request for the item’s index if\n   * the item is a placeholder object.\n   *\n   * @return {Number}\n   */\n  __requestItemByIndex(item, index) {\n    if ((item instanceof ComboBoxPlaceholder) && index !== undefined) {\n      this.dispatchEvent(new CustomEvent('index-requested', {detail: {index}}));\n    }\n\n    return index;\n  }\n\n  /**\n   * Gets the label string for the item based on the `_itemLabelPath`.\n   * @return {String}\n   */\n  getItemLabel(item, itemLabelPath) {\n    itemLabelPath = itemLabelPath || this._itemLabelPath;\n    let label = item && itemLabelPath ? this.get(itemLabelPath, item) : undefined;\n    if (label === undefined || label === null) {\n      label = item ? item.toString() : '';\n    }\n    return label;\n  }\n\n  _isItemFocused(focusedIndex, itemIndex) {\n    return focusedIndex == itemIndex;\n  }\n\n  _getAriaSelected(focusedIndex, itemIndex) {\n    return this._isItemFocused(focusedIndex, itemIndex).toString();\n  }\n\n  _getAriaRole(itemIndex) {\n    return itemIndex !== undefined ? 'option' : false;\n  }\n\n  _focusedIndexChanged(index) {\n    if (index >= 0) {\n      this._scrollIntoView(index);\n    }\n  }\n\n  _scrollIntoView(index) {\n    const visibleItemsCount = this._visibleItemsCount();\n    if (visibleItemsCount === undefined) {\n      // Scroller is not visible. Moving is unnecessary.\n      return;\n    }\n\n    let targetIndex = index;\n\n    if (index > this._selector.lastVisibleIndex - 1) {\n      // Index is below the bottom, scrolling down. Make the item appear at the bottom.\n      targetIndex = index - visibleItemsCount + 1;\n    } else if (index > this._selector.firstVisibleIndex) {\n      // The item is already visible, scrolling is unnecessary per se. But we need to trigger iron-list to set\n      // the correct scrollTop on the scrollTarget. Scrolling to firstVisibleIndex.\n      targetIndex = this._selector.firstVisibleIndex;\n    }\n    this._selector.scrollToIndex(Math.max(0, targetIndex));\n\n    // Sometimes the item is partly below the bottom edge, detect and adjust.\n    const pidx = this._selector._getPhysicalIndex(index),\n      physicalItem = this._selector._physicalItems[pidx];\n    if (!physicalItem) {\n      return;\n    }\n    const physicalItemRect = physicalItem.getBoundingClientRect(),\n      scrollerRect = this._scroller.getBoundingClientRect(),\n      scrollTopAdjust = physicalItemRect.bottom - scrollerRect.bottom + this._viewportTotalPaddingBottom;\n    if (scrollTopAdjust > 0) {\n      this._scroller.scrollTop += scrollTopAdjust;\n    }\n  }\n\n  ensureItemsRendered() {\n    this._selector._render();\n  }\n\n  adjustScrollPosition() {\n    if (this.opened && this._items) {\n      this._scrollIntoView(this._focusedIndex);\n    }\n  }\n\n  /**\n   * We want to prevent the kinetic scrolling energy from being transferred from the overlay contents over to the parent.\n   * Further improvement ideas: after the contents have been scrolled to the top or bottom and scrolling has stopped, it could allow\n   * scrolling the parent similarly to touch scrolling.\n   */\n  _patchWheelOverScrolling() {\n    const selector = this._selector;\n    selector.addEventListener('wheel', e => {\n      const scroller = selector._scroller || selector.scrollTarget;\n      const scrolledToTop = scroller.scrollTop === 0;\n      const scrolledToBottom = (scroller.scrollHeight - scroller.scrollTop - scroller.clientHeight) <= 1;\n\n      if (scrolledToTop && e.deltaY < 0) {\n        e.preventDefault();\n      } else if (scrolledToBottom && e.deltaY > 0) {\n        e.preventDefault();\n      }\n    });\n  }\n\n  updateViewportBoundaries() {\n    this._cachedViewportTotalPaddingBottom = undefined;\n    this._selector.updateViewportBoundaries();\n  }\n\n  get _viewportTotalPaddingBottom() {\n    if (this._cachedViewportTotalPaddingBottom === undefined) {\n      const itemsStyle = window.getComputedStyle(this._selector.$.items);\n      this._cachedViewportTotalPaddingBottom = [\n        itemsStyle.paddingBottom,\n        itemsStyle.borderBottomWidth\n      ].map(v => {\n        return parseInt(v, 10);\n      }).reduce((sum, v) => {\n        return sum + v;\n      });\n    }\n\n    return this._cachedViewportTotalPaddingBottom;\n  }\n\n  _visibleItemsCount() {\n    if (!this._selector) {\n      return;\n    }\n\n    // Ensure items are rendered\n    this._selector.flushDebouncer('_debounceTemplate');\n    // Ensure items are positioned\n    this._selector.scrollToIndex(this._selector.firstVisibleIndex);\n    // Ensure viewport boundaries are up-to-date\n    this.updateViewportBoundaries();\n    return this._selector.lastVisibleIndex - this._selector.firstVisibleIndex + 1;\n  }\n\n  _selectItem(item) {\n    item = (typeof item === 'number') ? this._items[item] : item;\n    if (this._selector.selectedItem !== item) {\n      this._selector.selectItem(item);\n    }\n  }\n\n  _preventDefault(e) {\n    if (e.cancelable) {\n      e.preventDefault();\n    }\n  }\n\n  _stopPropagation(e) {\n    e.stopPropagation();\n  }\n\n  _hidden(itemsChange) {\n    return !this.loading && (!this._items || !this._items.length);\n  }\n}\n\ncustomElements.define(ComboBoxDropdownWrapperElement.is, ComboBoxDropdownWrapperElement);\n","/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { ThemePropertyMixin } from '@vaadin/vaadin-themable-mixin/vaadin-theme-property-mixin.js';\nimport { ComboBoxMixin } from './vaadin-combo-box-mixin.js';\nimport { ComboBoxDataProviderMixin } from './vaadin-combo-box-data-provider-mixin.js';\nimport './vaadin-combo-box-dropdown-wrapper.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { dashToCamelCase } from '@polymer/polymer/lib/utils/case-map.js';\n/**\n * `<vaadin-combo-box-light>` is a customizable version of the `<vaadin-combo-box>` providing\n * only the dropdown functionality and leaving the input field definition to the user.\n *\n * The element has the same API as `<vaadin-combo-box>`.\n *\n * To create a custom input field, you need to add a child element which has a two-way\n * data-bindable property representing the input value. The property name is expected\n * to be `value` by default. See the example below for a simplest possible example\n * using a `<vaadin-text-field>` element.\n *\n * ```html\n * <vaadin-combo-box-light>\n *   <vaadin-text-field>\n *   </vaadin-text-field>\n * </vaadin-combo-box-light>\n * ```\n *\n * If you are using other custom input fields like `<iron-input>`, you\n * need to define the name of the bindable property with the `attrForValue` attribute.\n *\n * ```html\n * <vaadin-combo-box-light attr-for-value=\"bind-value\">\n *   <iron-input>\n *     <input>\n *   </iron-input>\n * </vaadin-combo-box-light>\n * ```\n *\n * In the next example you can see how to create a custom input field based\n * on a `<paper-input>` decorated with a custom `<iron-icon>` and\n * two `<paper-button>`s to act as the clear and toggle controls.\n *\n * ```html\n * <vaadin-combo-box-light>\n *   <paper-input label=\"Elements\" class=\"input\">\n *     <iron-icon icon=\"toll\" slot=\"prefix\"></iron-icon>\n *     <paper-button slot=\"suffix\" class=\"clear-button\">Clear</paper-button>\n *     <paper-button slot=\"suffix\" class=\"toggle-button\">Toggle</paper-button>\n *   </paper-input>\n * </vaadin-combo-box-light>\n * ```\n * @memberof Vaadin\n * @mixes Vaadin.ComboBoxDataProviderMixin\n * @mixes Vaadin.ComboBoxMixin\n * @mixes Vaadin.ThemableMixin\n * @mixes Vaadin.ThemePropertyMixin\n */\nclass ComboBoxLightElement extends\n  ThemePropertyMixin(\n    ThemableMixin(\n      ComboBoxDataProviderMixin(\n        ComboBoxMixin(PolymerElement)))) {\n  static get template() {\n    return html`\n    <slot></slot>\n\n    <vaadin-combo-box-dropdown-wrapper id=\"overlay\" opened=\"[[opened]]\" position-target=\"[[inputElement]]\" renderer=\"[[renderer]]\" _focused-index=\"[[_focusedIndex]]\" _item-id-path=\"[[itemIdPath]]\" _item-label-path=\"[[itemLabelPath]]\" loading=\"[[loading]]\" theme=\"[[theme]]\">\n    </vaadin-combo-box-dropdown-wrapper>\n`;\n  }\n\n  static get is() {\n    return 'vaadin-combo-box-light';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * Name of the two-way data-bindable property representing the\n       * value of the custom input field.\n       */\n      attrForValue: {\n        type: String,\n        value: 'value'\n      },\n\n      inputElement: {\n        type: Element,\n        readOnly: true\n      }\n    };\n  }\n\n  constructor() {\n    super();\n    this._boundInputValueChanged = this._inputValueChanged.bind(this);\n  }\n\n  ready() {\n    super.ready();\n    this._toggleElement = this.querySelector('.toggle-button');\n    this._clearElement = this.querySelector('.clear-button');\n  }\n\n  get focused() {\n    return this.getRootNode().activeElement === this.inputElement;\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    const cssSelector = 'vaadin-text-field,iron-input,paper-input,.paper-input-input,.input';\n    this._setInputElement(this.querySelector(cssSelector));\n    this._revertInputValue();\n    this.inputElement.addEventListener('input', this._boundInputValueChanged);\n    this._preventInputBlur();\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this.inputElement.removeEventListener('input', this._boundInputValueChanged);\n    this._restoreInputBlur();\n  }\n\n  get _propertyForValue() {\n    return dashToCamelCase(this.attrForValue);\n  }\n\n  get _inputElementValue() {\n    return this.inputElement && this.inputElement[this._propertyForValue];\n  }\n\n  set _inputElementValue(value) {\n    if (this.inputElement) {\n      this.inputElement[this._propertyForValue] = value;\n    }\n  }\n}\n\ncustomElements.define(ComboBoxLightElement.is, ComboBoxLightElement);\n\nexport { ComboBoxLightElement };\n"],"sourceRoot":""}