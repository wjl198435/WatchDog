{"version":3,"sources":["webpack:///./src/common/entity/compute_state_name.ts","webpack:///./src/common/entity/compute_state_domain.ts","webpack:///./src/common/entity/domain_icon.ts","webpack:///./src/components/entity/state-info.js","webpack:///./src/components/entity/state-badge.ts","webpack:///./src/common/entity/compute_object_id.ts","webpack:///./src/common/entity/sensor_icon.ts","webpack:///./src/common/entity/state_icon.ts","webpack:///./src/common/entity/binary_sensor_icon.ts","webpack:///./src/common/entity/cover_icon.ts","webpack:///./src/common/entity/input_dateteime_icon.ts","webpack:///./src/common/string/compare.ts","webpack:///./src/components/ha-relative-time.js","webpack:///./src/common/datetime/relative_time.ts","webpack:///./src/common/entity/entity_filter.ts","webpack:///./src/dialogs/domain-toggler/show-dialog-domain-toggler.ts"],"names":["_compute_object_id__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","__webpack_exports__","stateObj","undefined","attributes","friendly_name","computeObjectId","entity_id","replace","d","computeStateDomain","_compute_domain__WEBPACK_IMPORTED_MODULE_0__","computeDomain","domainIcon","_const__WEBPACK_IMPORTED_MODULE_0__","fixedIcons","alert","alexa","automation","calendar","camera","climate","configurator","conversation","device_tracker","fan","google_assistant","group","history_graph","homeassistant","homekit","image_processing","input_boolean","input_datetime","input_number","input_select","input_text","light","mailbox","notify","person","plant","proximity","remote","scene","script","sensor","simple_alarm","sun","switch","timer","updater","vacuum","water_heater","weather","weblink","domain","state","console","warn","DEFAULT_DOMAIN_ICON","StateInfo","PolymerElement","html","_templateObject","this","styleTemplate","stateBadgeTemplate","infoTemplate","_templateObject2","_templateObject3","_templateObject4","hass","Object","inDialog","type","Boolean","value","rtl","reflectToAttribute","computed","computeStateName","computeRTL","customElements","define","StateBadge","property","query","overrideIcon","stateIcon","changedProps","has","iconStyle","color","filter","hostStyle","backgroundImage","entity_picture","imageUrl","hassUrl","concat","display","hs_color","hue","sat","brightness","errorMessage","_typeof","assign","_icon","style","css","LitElement","entityId","substr","indexOf","fixedDeviceClassIcons","humidity","illuminance","temperature","pressure","power","signal_strength","domainIcons","binary_sensor","activated","device_class","cover","open","dclass","battery","Number","isNaN","batteryRound","Math","round","unit","unit_of_measurement","UNIT_C","UNIT_F","has_date","has_time","icon","compare","caseInsensitiveCompare","a","b","toLowerCase","HaRelativeTime","_this","_classCallCheck","_getPrototypeOf","call","updateRelative","bind","_assertThisInitialized","LocalizeMixin","datetime","String","observer","datetimeObj","parsedDateTime","_get","prototype","updateInterval","setInterval","clearInterval","newVal","Date","root","dom","innerHTML","relativeTime","localize","tests","langKey","dateObj","timeDesc","options","arguments","length","delta","compareTime","getTime","tense","abs","i","floor","includeTense","isEmptyFilter","generateFilter","include_domains","include_entities","exclude_domains","exclude_entities","includeDomains","includeEntities","excludeDomains","excludeEntities","includeDomainsSet","Set","includeEntitiesSet","excludeDomainsSet","excludeEntitiesSet","haveInclude","size","haveExclude","showDomainTogglerDialog","_common_dom_fire_event__WEBPACK_IMPORTED_MODULE_0__","loadDomainTogglerDialog","Promise","all","e","then","element","dialogParams","fireEvent","dialogTag","dialogImport"],"mappings":"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","file":"chunk.3f849adff2b50532ac31.js","sourcesContent":["import { HassEntity } from \"home-assistant-js-websocket\";\nimport computeObjectId from \"./compute_object_id\";\n\nexport default (stateObj: HassEntity): string =>\n  stateObj.attributes.friendly_name === undefined\n    ? computeObjectId(stateObj.entity_id).replace(/_/g, \" \")\n    : stateObj.attributes.friendly_name || \"\";\n","import { HassEntity } from \"home-assistant-js-websocket\";\nimport computeDomain from \"./compute_domain\";\n\nexport default function computeStateDomain(stateObj: HassEntity) {\n  return computeDomain(stateObj.entity_id);\n}\n","/**\n * Return the icon to be used for a domain.\n *\n * Optionally pass in a state to influence the domain icon.\n */\nimport { DEFAULT_DOMAIN_ICON } from \"../const\";\n\nconst fixedIcons = {\n  alert: \"hass:alert\",\n  alexa: \"hass:amazon-alexa\",\n  automation: \"hass:playlist-play\",\n  calendar: \"hass:calendar\",\n  camera: \"hass:video\",\n  climate: \"hass:thermostat\",\n  configurator: \"hass:settings\",\n  conversation: \"hass:text-to-speech\",\n  device_tracker: \"hass:account\",\n  fan: \"hass:fan\",\n  google_assistant: \"hass:google-assistant\",\n  group: \"hass:google-circles-communities\",\n  history_graph: \"hass:chart-line\",\n  homeassistant: \"hass:home-assistant\",\n  homekit: \"hass:home-automation\",\n  image_processing: \"hass:image-filter-frames\",\n  input_boolean: \"hass:drawing\",\n  input_datetime: \"hass:calendar-clock\",\n  input_number: \"hass:ray-vertex\",\n  input_select: \"hass:format-list-bulleted\",\n  input_text: \"hass:textbox\",\n  light: \"hass:lightbulb\",\n  mailbox: \"hass:mailbox\",\n  notify: \"hass:comment-alert\",\n  person: \"hass:account\",\n  plant: \"hass:flower\",\n  proximity: \"hass:apple-safari\",\n  remote: \"hass:remote\",\n  scene: \"hass:google-pages\",\n  script: \"hass:file-document\",\n  sensor: \"hass:eye\",\n  simple_alarm: \"hass:bell\",\n  sun: \"hass:white-balance-sunny\",\n  switch: \"hass:flash\",\n  timer: \"hass:timer\",\n  updater: \"hass:cloud-upload\",\n  vacuum: \"hass:robot-vacuum\",\n  water_heater: \"hass:thermometer\",\n  weather: \"hass:weather-cloudy\",\n  weblink: \"hass:open-in-new\",\n};\n\nexport default function domainIcon(domain: string, state?: string): string {\n  if (domain in fixedIcons) {\n    return fixedIcons[domain];\n  }\n\n  switch (domain) {\n    case \"alarm_control_panel\":\n      switch (state) {\n        case \"armed_home\":\n          return \"hass:bell-plus\";\n        case \"armed_night\":\n          return \"hass:bell-sleep\";\n        case \"disarmed\":\n          return \"hass:bell-outline\";\n        case \"triggered\":\n          return \"hass:bell-ring\";\n        default:\n          return \"hass:bell\";\n      }\n\n    case \"binary_sensor\":\n      return state && state === \"off\"\n        ? \"hass:radiobox-blank\"\n        : \"hass:checkbox-marked-circle\";\n\n    case \"cover\":\n      return state === \"closed\" ? \"hass:window-closed\" : \"hass:window-open\";\n\n    case \"lock\":\n      return state && state === \"unlocked\" ? \"hass:lock-open\" : \"hass:lock\";\n\n    case \"media_player\":\n      return state && state !== \"off\" && state !== \"idle\"\n        ? \"hass:cast-connected\"\n        : \"hass:cast\";\n\n    case \"zwave\":\n      switch (state) {\n        case \"dead\":\n          return \"hass:emoticon-dead\";\n        case \"sleeping\":\n          return \"hass:sleep\";\n        case \"initializing\":\n          return \"hass:timer-sand\";\n        default:\n          return \"hass:z-wave\";\n      }\n\n    default:\n      // tslint:disable-next-line\n      console.warn(\n        \"Unable to find icon for domain \" + domain + \" (\" + state + \")\"\n      );\n      return DEFAULT_DOMAIN_ICON;\n  }\n}\n","import { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nimport \"../ha-relative-time\";\nimport \"./state-badge\";\nimport computeStateName from \"../../common/entity/compute_state_name\";\nimport { computeRTL } from \"../../common/util/compute_rtl\";\n\nclass StateInfo extends PolymerElement {\n  static get template() {\n    return html`\n      ${this.styleTemplate} ${this.stateBadgeTemplate} ${this.infoTemplate}\n    `;\n  }\n\n  static get styleTemplate() {\n    return html`\n      <style>\n        :host {\n          @apply --paper-font-body1;\n          min-width: 120px;\n          white-space: nowrap;\n        }\n\n        state-badge {\n          float: left;\n        }\n\n        :host([rtl]) state-badge {\n          float: right;\n        }\n\n        .info {\n          margin-left: 56px;\n        }\n\n        :host([rtl]) .info {\n          margin-right: 56px;\n          margin-left: 0;\n          text-align: right;\n        }\n\n        .name {\n          @apply --paper-font-common-nowrap;\n          color: var(--primary-text-color);\n          line-height: 40px;\n        }\n\n        .name[in-dialog],\n        :host([secondary-line]) .name {\n          line-height: 20px;\n        }\n\n        .time-ago,\n        .extra-info,\n        .extra-info > * {\n          @apply --paper-font-common-nowrap;\n          color: var(--secondary-text-color);\n        }\n      </style>\n    `;\n  }\n\n  static get stateBadgeTemplate() {\n    return html`\n      <state-badge state-obj=\"[[stateObj]]\"></state-badge>\n    `;\n  }\n\n  static get infoTemplate() {\n    return html`\n      <div class=\"info\">\n        <div class=\"name\" in-dialog$=\"[[inDialog]]\">\n          [[computeStateName(stateObj)]]\n        </div>\n\n        <template is=\"dom-if\" if=\"[[inDialog]]\">\n          <div class=\"time-ago\">\n            <ha-relative-time\n              hass=\"[[hass]]\"\n              datetime=\"[[stateObj.last_changed]]\"\n            ></ha-relative-time>\n          </div>\n        </template>\n        <template is=\"dom-if\" if=\"[[!inDialog]]\">\n          <div class=\"extra-info\"><slot> </slot></div>\n        </template>\n      </div>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n      stateObj: Object,\n      inDialog: {\n        type: Boolean,\n        value: () => false,\n      },\n      rtl: {\n        type: Boolean,\n        reflectToAttribute: true,\n        computed: \"computeRTL(hass)\",\n      },\n    };\n  }\n\n  computeStateName(stateObj) {\n    return computeStateName(stateObj);\n  }\n\n  computeRTL(hass) {\n    return computeRTL(hass);\n  }\n}\n\ncustomElements.define(\"state-info\", StateInfo);\n","import {\n  LitElement,\n  TemplateResult,\n  css,\n  CSSResult,\n  html,\n  property,\n  PropertyValues,\n  query,\n} from \"lit-element\";\nimport \"../ha-icon\";\nimport computeStateDomain from \"../../common/entity/compute_state_domain\";\nimport stateIcon from \"../../common/entity/state_icon\";\nimport { HassEntity } from \"home-assistant-js-websocket\";\n// Not duplicate, this is for typing.\n// tslint:disable-next-line\nimport { HaIcon } from \"../ha-icon\";\nimport { HomeAssistant } from \"../../types\";\n\nclass StateBadge extends LitElement {\n  public hass?: HomeAssistant;\n  @property() public stateObj?: HassEntity;\n  @property() public overrideIcon?: string;\n  @query(\"ha-icon\") private _icon!: HaIcon;\n\n  protected render(): TemplateResult | void {\n    const stateObj = this.stateObj;\n\n    if (!stateObj) {\n      return html``;\n    }\n\n    return html`\n      <ha-icon\n        id=\"icon\"\n        data-domain=${computeStateDomain(stateObj)}\n        data-state=${stateObj.state}\n        .icon=${this.overrideIcon || stateIcon(stateObj)}\n      ></ha-icon>\n    `;\n  }\n\n  protected updated(changedProps: PropertyValues) {\n    if (!changedProps.has(\"stateObj\") || !this.stateObj) {\n      return;\n    }\n    const stateObj = this.stateObj;\n\n    const iconStyle: Partial<CSSStyleDeclaration> = {\n      color: \"\",\n      filter: \"\",\n    };\n    const hostStyle: Partial<CSSStyleDeclaration> = {\n      backgroundImage: \"\",\n    };\n    if (stateObj) {\n      // hide icon if we have entity picture\n      if (stateObj.attributes.entity_picture && !this.overrideIcon) {\n        let imageUrl = stateObj.attributes.entity_picture;\n        if (this.hass) {\n          imageUrl = this.hass.hassUrl(imageUrl);\n        }\n        hostStyle.backgroundImage = `url(${imageUrl})`;\n        iconStyle.display = \"none\";\n      } else {\n        if (stateObj.attributes.hs_color) {\n          const hue = stateObj.attributes.hs_color[0];\n          const sat = stateObj.attributes.hs_color[1];\n          if (sat > 10) {\n            iconStyle.color = `hsl(${hue}, 100%, ${100 - sat / 2}%)`;\n          }\n        }\n        if (stateObj.attributes.brightness) {\n          const brightness = stateObj.attributes.brightness;\n          if (typeof brightness !== \"number\") {\n            const errorMessage = `Type error: state-badge expected number, but type of ${\n              stateObj.entity_id\n            }.attributes.brightness is ${typeof brightness} (${brightness})`;\n            // tslint:disable-next-line\n            console.warn(errorMessage);\n          }\n          // lowest brighntess will be around 50% (that's pretty dark)\n          iconStyle.filter = `brightness(${(brightness + 245) / 5}%)`;\n        }\n      }\n    }\n    Object.assign(this._icon.style, iconStyle);\n    Object.assign(this.style, hostStyle);\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      :host {\n        position: relative;\n        display: inline-block;\n        width: 40px;\n        color: var(--paper-item-icon-color, #44739e);\n        border-radius: 50%;\n        height: 40px;\n        text-align: center;\n        background-size: cover;\n        line-height: 40px;\n      }\n\n      ha-icon {\n        transition: color 0.3s ease-in-out, filter 0.3s ease-in-out;\n      }\n\n      /* Color the icon if light or sun is on */\n      ha-icon[data-domain=\"light\"][data-state=\"on\"],\n      ha-icon[data-domain=\"switch\"][data-state=\"on\"],\n      ha-icon[data-domain=\"binary_sensor\"][data-state=\"on\"],\n      ha-icon[data-domain=\"fan\"][data-state=\"on\"],\n      ha-icon[data-domain=\"sun\"][data-state=\"above_horizon\"] {\n        color: var(--paper-item-icon-active-color, #fdd835);\n      }\n\n      /* Color the icon if unavailable */\n      ha-icon[data-state=\"unavailable\"] {\n        color: var(--state-icon-unavailable-color);\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"state-badge\": StateBadge;\n  }\n}\n\ncustomElements.define(\"state-badge\", StateBadge);\n","/** Compute the object ID of a state. */\nexport default function computeObjectId(entityId: string): string {\n  return entityId.substr(entityId.indexOf(\".\") + 1);\n}\n","/** Return an icon representing a sensor state. */\nimport { HassEntity } from \"home-assistant-js-websocket\";\nimport { UNIT_C, UNIT_F } from \"../const\";\nimport domainIcon from \"./domain_icon\";\n\nconst fixedDeviceClassIcons = {\n  humidity: \"hass:water-percent\",\n  illuminance: \"hass:brightness-5\",\n  temperature: \"hass:thermometer\",\n  pressure: \"hass:gauge\",\n  power: \"hass:flash\",\n  signal_strength: \"hass:wifi\",\n};\n\nexport default function sensorIcon(state: HassEntity) {\n  const dclass = state.attributes.device_class;\n\n  if (dclass && dclass in fixedDeviceClassIcons) {\n    return fixedDeviceClassIcons[dclass];\n  }\n  if (dclass === \"battery\") {\n    const battery = Number(state.state);\n    if (isNaN(battery)) {\n      return \"hass:battery-unknown\";\n    }\n    const batteryRound = Math.round(battery / 10) * 10;\n    if (batteryRound >= 100) {\n      return \"hass:battery\";\n    }\n    if (batteryRound <= 0) {\n      return \"hass:battery-alert\";\n    }\n    // Will return one of the following icons: (listed so extractor picks up)\n    // hass:battery-10\n    // hass:battery-20\n    // hass:battery-30\n    // hass:battery-40\n    // hass:battery-50\n    // hass:battery-60\n    // hass:battery-70\n    // hass:battery-80\n    // hass:battery-90\n    // We obscure 'hass' in iconname so this name does not get picked up\n    return `${\"hass\"}:battery-${batteryRound}`;\n  }\n\n  const unit = state.attributes.unit_of_measurement;\n  if (unit === UNIT_C || unit === UNIT_F) {\n    return \"hass:thermometer\";\n  }\n  return domainIcon(\"sensor\");\n}\n","/** Return an icon representing a state. */\nimport { HassEntity } from \"home-assistant-js-websocket\";\nimport { DEFAULT_DOMAIN_ICON } from \"../const\";\n\nimport computeDomain from \"./compute_domain\";\nimport domainIcon from \"./domain_icon\";\n\nimport binarySensorIcon from \"./binary_sensor_icon\";\nimport coverIcon from \"./cover_icon\";\nimport sensorIcon from \"./sensor_icon\";\nimport inputDateTimeIcon from \"./input_dateteime_icon\";\n\nconst domainIcons = {\n  binary_sensor: binarySensorIcon,\n  cover: coverIcon,\n  sensor: sensorIcon,\n  input_datetime: inputDateTimeIcon,\n};\n\nexport default function stateIcon(state: HassEntity) {\n  if (!state) {\n    return DEFAULT_DOMAIN_ICON;\n  }\n  if (state.attributes.icon) {\n    return state.attributes.icon;\n  }\n\n  const domain = computeDomain(state.entity_id);\n\n  if (domain in domainIcons) {\n    return domainIcons[domain](state);\n  }\n  return domainIcon(domain, state.state);\n}\n","import { HassEntity } from \"home-assistant-js-websocket\";\n\n/** Return an icon representing a binary sensor state. */\n\nexport default function binarySensorIcon(state: HassEntity) {\n  const activated = state.state && state.state === \"off\";\n  switch (state.attributes.device_class) {\n    case \"battery\":\n      return activated ? \"hass:battery\" : \"hass:battery-outline\";\n    case \"cold\":\n      return activated ? \"hass:thermometer\" : \"hass:snowflake\";\n    case \"connectivity\":\n      return activated ? \"hass:server-network-off\" : \"hass:server-network\";\n    case \"door\":\n      return activated ? \"hass:door-closed\" : \"hass:door-open\";\n    case \"garage_door\":\n      return activated ? \"hass:garage\" : \"hass:garage-open\";\n    case \"gas\":\n    case \"power\":\n    case \"problem\":\n    case \"safety\":\n    case \"smoke\":\n      return activated ? \"hass:shield-check\" : \"hass:alert\";\n    case \"heat\":\n      return activated ? \"hass:thermometer\" : \"hass:fire\";\n    case \"light\":\n      return activated ? \"hass:brightness-5\" : \"hass:brightness-7\";\n    case \"lock\":\n      return activated ? \"hass:lock\" : \"hass:lock-open\";\n    case \"moisture\":\n      return activated ? \"hass:water-off\" : \"hass:water\";\n    case \"motion\":\n      return activated ? \"hass:walk\" : \"hass:run\";\n    case \"occupancy\":\n      return activated ? \"hass:home-outline\" : \"hass:home\";\n    case \"opening\":\n      return activated ? \"hass:square\" : \"hass:square-outline\";\n    case \"plug\":\n      return activated ? \"hass:power-plug-off\" : \"hass:power-plug\";\n    case \"presence\":\n      return activated ? \"hass:home-outline\" : \"hass:home\";\n    case \"sound\":\n      return activated ? \"hass:music-note-off\" : \"hass:music-note\";\n    case \"vibration\":\n      return activated ? \"hass:crop-portrait\" : \"hass:vibrate\";\n    case \"window\":\n      return activated ? \"hass:window-closed\" : \"hass:window-open\";\n    default:\n      return activated ? \"hass:radiobox-blank\" : \"hass:checkbox-marked-circle\";\n  }\n}\n","/** Return an icon representing a cover state. */\nimport { HassEntity } from \"home-assistant-js-websocket\";\nimport domainIcon from \"./domain_icon\";\n\nexport default function coverIcon(state: HassEntity): string {\n  const open = state.state !== \"closed\";\n  switch (state.attributes.device_class) {\n    case \"garage\":\n      return open ? \"hass:garage-open\" : \"hass:garage\";\n    case \"door\":\n      return open ? \"hass:door-open\" : \"hass:door-closed\";\n    case \"window\":\n      return open ? \"hass:window-open\" : \"hass:window-closed\";\n    default:\n      return domainIcon(\"cover\", state.state);\n  }\n}\n","/** Return an icon representing an input datetime state. */\nimport domainIcon from \"./domain_icon\";\nimport { HassEntity } from \"home-assistant-js-websocket\";\n\nexport default function inputDateTimeIcon(state: HassEntity): string {\n  if (!state.attributes.has_date) {\n    return \"hass:clock\";\n  }\n  if (!state.attributes.has_time) {\n    return \"hass:calendar\";\n  }\n  return domainIcon(\"input_datetime\");\n}\n","export const compare = (a: string, b: string) => {\n  if (a < b) {\n    return -1;\n  }\n  if (a > b) {\n    return 1;\n  }\n\n  return 0;\n};\n\nexport const caseInsensitiveCompare = (a: string, b: string) =>\n  compare(a.toLowerCase(), b.toLowerCase());\n","import { dom } from \"@polymer/polymer/lib/legacy/polymer.dom\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nimport relativeTime from \"../common/datetime/relative_time\";\n\nimport LocalizeMixin from \"../mixins/localize-mixin\";\n\n/*\n * @appliesMixin LocalizeMixin\n */\nclass HaRelativeTime extends LocalizeMixin(PolymerElement) {\n  static get properties() {\n    return {\n      hass: Object,\n      datetime: {\n        type: String,\n        observer: \"datetimeChanged\",\n      },\n\n      datetimeObj: {\n        type: Object,\n        observer: \"datetimeObjChanged\",\n      },\n\n      parsedDateTime: Object,\n    };\n  }\n\n  constructor() {\n    super();\n    this.updateRelative = this.updateRelative.bind(this);\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    // update every 60 seconds\n    this.updateInterval = setInterval(this.updateRelative, 60000);\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    clearInterval(this.updateInterval);\n  }\n\n  datetimeChanged(newVal) {\n    this.parsedDateTime = newVal ? new Date(newVal) : null;\n\n    this.updateRelative();\n  }\n\n  datetimeObjChanged(newVal) {\n    this.parsedDateTime = newVal;\n\n    this.updateRelative();\n  }\n\n  updateRelative() {\n    const root = dom(this);\n    if (!this.parsedDateTime) {\n      root.innerHTML = this.localize(\"ui.components.relative_time.never\");\n    } else {\n      root.innerHTML = relativeTime(this.parsedDateTime, this.localize);\n    }\n  }\n}\n\ncustomElements.define(\"ha-relative-time\", HaRelativeTime);\n","import { LocalizeFunc } from \"../translations/localize\";\n\n/**\n * Calculate a string representing a date object as relative time from now.\n *\n * Example output: 5 minutes ago, in 3 days.\n */\nconst tests = [60, 60, 24, 7];\nconst langKey = [\"second\", \"minute\", \"hour\", \"day\"];\n\nexport default function relativeTime(\n  dateObj: Date,\n  localize: LocalizeFunc,\n  options: {\n    compareTime?: Date;\n    includeTense?: boolean;\n  } = {}\n): string {\n  const compareTime = options.compareTime || new Date();\n  let delta = (compareTime.getTime() - dateObj.getTime()) / 1000;\n  const tense = delta >= 0 ? \"past\" : \"future\";\n  delta = Math.abs(delta);\n\n  let timeDesc;\n\n  for (let i = 0; i < tests.length; i++) {\n    if (delta < tests[i]) {\n      delta = Math.floor(delta);\n      timeDesc = localize(\n        `ui.components.relative_time.duration.${langKey[i]}`,\n        \"count\",\n        delta\n      );\n      break;\n    }\n\n    delta /= tests[i];\n  }\n\n  if (timeDesc === undefined) {\n    delta = Math.floor(delta);\n    timeDesc = localize(\n      \"ui.components.relative_time.duration.week\",\n      \"count\",\n      delta\n    );\n  }\n\n  return options.includeTense === false\n    ? timeDesc\n    : localize(`ui.components.relative_time.${tense}`, \"time\", timeDesc);\n}\n","import computeDomain from \"./compute_domain\";\n\nexport type FilterFunc = (entityId: string) => boolean;\n\nexport interface EntityFilter {\n  include_domains: string[];\n  include_entities: string[];\n  exclude_domains: string[];\n  exclude_entities: string[];\n}\n\nexport const isEmptyFilter = (filter: EntityFilter) =>\n  filter.include_domains.length +\n    filter.include_entities.length +\n    filter.exclude_domains.length +\n    filter.exclude_entities.length ===\n  0;\n\nexport const generateFilter = (\n  includeDomains?: string[],\n  includeEntities?: string[],\n  excludeDomains?: string[],\n  excludeEntities?: string[]\n): FilterFunc => {\n  const includeDomainsSet = new Set(includeDomains);\n  const includeEntitiesSet = new Set(includeEntities);\n  const excludeDomainsSet = new Set(excludeDomains);\n  const excludeEntitiesSet = new Set(excludeEntities);\n\n  const haveInclude = includeDomainsSet.size > 0 || includeEntitiesSet.size > 0;\n  const haveExclude = excludeDomainsSet.size > 0 || excludeEntitiesSet.size > 0;\n\n  // Case 1 - no includes or excludes - pass all entities\n  if (!haveInclude && !haveExclude) {\n    return () => true;\n  }\n\n  // Case 2 - includes, no excludes - only include specified entities\n  if (haveInclude && !haveExclude) {\n    return (entityId) =>\n      includeEntitiesSet.has(entityId) ||\n      includeDomainsSet.has(computeDomain(entityId));\n  }\n\n  // Case 3 - excludes, no includes - only exclude specified entities\n  if (!haveInclude && haveExclude) {\n    return (entityId) =>\n      !excludeEntitiesSet.has(entityId) &&\n      !excludeDomainsSet.has(computeDomain(entityId));\n  }\n\n  // Case 4 - both includes and excludes specified\n  // Case 4a - include domain specified\n  //  - if domain is included, pass if entity not excluded\n  //  - if domain is not included, pass if entity is included\n  // note: if both include and exclude domains specified,\n  //   the exclude domains are ignored\n  if (includeDomainsSet.size) {\n    return (entityId) =>\n      includeDomainsSet.has(computeDomain(entityId))\n        ? !excludeEntitiesSet.has(entityId)\n        : includeEntitiesSet.has(entityId);\n  }\n\n  // Case 4b - exclude domain specified\n  //  - if domain is excluded, pass if entity is included\n  //  - if domain is not excluded, pass if entity not excluded\n  if (excludeDomainsSet.size) {\n    return (entityId) =>\n      excludeDomainsSet.has(computeDomain(entityId))\n        ? includeEntitiesSet.has(entityId)\n        : !excludeEntitiesSet.has(entityId);\n  }\n\n  // Case 4c - neither include or exclude domain specified\n  //  - Only pass if entity is included.  Ignore entity excludes.\n  return (entityId) => includeEntitiesSet.has(entityId);\n};\n","import { fireEvent } from \"../../common/dom/fire_event\";\n\nexport interface HaDomainTogglerDialogParams {\n  domains: string[];\n  toggleDomain: (domain: string, turnOn: boolean) => void;\n}\n\nexport const loadDomainTogglerDialog = () =>\n  import(/* webpackChunkName: \"dialog-domain-toggler\" */ \"./dialog-domain-toggler\");\n\nexport const showDomainTogglerDialog = (\n  element: HTMLElement,\n  dialogParams: HaDomainTogglerDialogParams\n): void => {\n  fireEvent(element, \"show-dialog\", {\n    dialogTag: \"dialog-domain-toggler\",\n    dialogImport: loadDomainTogglerDialog,\n    dialogParams,\n  });\n};\n"],"sourceRoot":""}