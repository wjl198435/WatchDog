{"version":3,"sources":["webpack:///./src/util/custom-panel/load-custom-panel.ts","webpack:///./src/util/custom-panel/create-custom-panel-element.ts","webpack:///./src/util/custom-panel/set-custom-panel-properties.ts","webpack:///./src/panels/custom/ha-panel-custom.ts","webpack:///./src/common/dom/load_resource.ts"],"names":["JS_CACHE","loadCustomPanel","panelConfig","html_url","toLoad","__webpack_require__","e","then","bind","embed_iframe","push","Promise","all","_ref","importHrefPromise","_slicedToArray","js_url","loadJS","module_url","loadModule","reject","d","__webpack_exports__","createCustomPanelElement","tagName","concat","name","document","createElement","setCustomPanelProperties","root","properties","setProperties","Object","keys","forEach","key","HaPanelCustom","_decorate","_initialize","_UpdatingElement","_UpdatingElement2","_getPrototypeOf2","_this","_classCallCheck","this","_len","arguments","length","args","Array","_key","_getPrototypeOf","call","apply","_assertThisInitialized","_inherits","F","kind","decorators","property","value","_this2","path","replace","navigate","initialize","panel","hass","narrow","route","_setProperties","_get","prototype","_cleanupPanel","changedProps","has","get","_createPanel","props","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","err","return","window","customPanel","lastChild","removeChild","_this3","config","_panel_custom","tempA","href","trust_external","location","hostname","includes","confirm","innerHTML","trim","iframeDoc","querySelector","contentWindow","open","write","customPanelJS","close","element","appendChild","alert","UpdatingElement","customElements","define","loadCSS","_load","tag","url","type","resolve","attr","parent","onload","onerror","async","rel"],"mappings":"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","file":"chunk.87648122297746b2a8b6.js","sourcesContent":["import { loadJS, loadModule } from \"../../common/dom/load_resource\";\n\n// Make sure we only import every JS-based panel once (HTML import has this built-in)\nconst JS_CACHE = {};\n\nexport const loadCustomPanel = (panelConfig): Promise<unknown> => {\n  if (panelConfig.html_url) {\n    const toLoad = [\n      import(/* webpackChunkName: \"import-href-polyfill\" */ \"../../resources/html-import/import-href\"),\n    ];\n\n    if (!panelConfig.embed_iframe) {\n      toLoad.push(\n        import(/* webpackChunkName: \"legacy-support\" */ \"../legacy-support\")\n      );\n    }\n\n    return Promise.all(toLoad).then(([{ importHrefPromise }]) =>\n      importHrefPromise(panelConfig.html_url)\n    );\n  }\n  if (panelConfig.js_url) {\n    if (!(panelConfig.js_url in JS_CACHE)) {\n      JS_CACHE[panelConfig.js_url] = loadJS(panelConfig.js_url);\n    }\n    return JS_CACHE[panelConfig.js_url];\n  }\n  if (panelConfig.module_url) {\n    return loadModule(panelConfig.module_url);\n  }\n  return Promise.reject(\"No valid url found in panel config.\");\n};\n","export const createCustomPanelElement = (panelConfig) => {\n  // Legacy support. Custom panels used to have to define element ha-panel-{name}\n  const tagName =\n    \"html_url\" in panelConfig\n      ? `ha-panel-${panelConfig.name}`\n      : panelConfig.name;\n  return document.createElement(tagName);\n};\n","export const setCustomPanelProperties = (root, properties) => {\n  if (\"setProperties\" in root) {\n    root.setProperties(properties);\n  } else {\n    Object.keys(properties).forEach((key) => {\n      root[key] = properties[key];\n    });\n  }\n};\n","import { property, PropertyValues, UpdatingElement } from \"lit-element\";\nimport { loadCustomPanel } from \"../../util/custom-panel/load-custom-panel\";\nimport { createCustomPanelElement } from \"../../util/custom-panel/create-custom-panel-element\";\nimport { setCustomPanelProperties } from \"../../util/custom-panel/set-custom-panel-properties\";\nimport { HomeAssistant, Route } from \"../../types\";\nimport { CustomPanelInfo } from \"../../data/panel_custom\";\nimport { navigate } from \"../../common/navigate\";\n\ndeclare global {\n  interface Window {\n    customPanel: HaPanelCustom | undefined;\n  }\n}\n\nexport class HaPanelCustom extends UpdatingElement {\n  @property() public hass!: HomeAssistant;\n  @property() public narrow!: boolean;\n  @property() public route!: Route;\n  @property() public panel!: CustomPanelInfo;\n  private _setProperties?: (props: {}) => void | undefined;\n\n  // Since navigate fires events on `window`, we need to expose this as a function\n  // to allow custom panels to forward their location changes to the main window\n  // instead of their iframe window.\n  public navigate = (path: string, replace?: boolean) =>\n    navigate(this, path, replace);\n\n  public registerIframe(initialize, setProperties) {\n    initialize(this.panel, {\n      hass: this.hass,\n      narrow: this.narrow,\n      route: this.route,\n    });\n    this._setProperties = setProperties;\n  }\n\n  public disconnectedCallback() {\n    super.disconnectedCallback();\n    this._cleanupPanel();\n  }\n\n  protected updated(changedProps: PropertyValues) {\n    if (changedProps.has(\"panel\")) {\n      // Clean up old things if we had a panel\n      if (changedProps.get(\"panel\")) {\n        this._cleanupPanel();\n      }\n      this._createPanel(this.panel);\n      return;\n    }\n    if (!this._setProperties) {\n      return;\n    }\n    const props = {};\n    for (const key of changedProps.keys()) {\n      props[key] = this[key];\n    }\n    this._setProperties(props);\n  }\n\n  private _cleanupPanel() {\n    delete window.customPanel;\n    this._setProperties = undefined;\n    while (this.lastChild) {\n      this.removeChild(this.lastChild);\n    }\n  }\n\n  private _createPanel(panel: CustomPanelInfo) {\n    const config = panel.config!._panel_custom;\n\n    const tempA = document.createElement(\"a\");\n    tempA.href = config.html_url || config.js_url || config.module_url || \"\";\n\n    if (\n      !config.trust_external &&\n      ![\"localhost\", \"127.0.0.1\", location.hostname].includes(tempA.hostname)\n    ) {\n      if (\n        !confirm(`Do you trust the external panel \"${config.name}\" at \"${\n          tempA.href\n        }\"?\n\nIt will have access to all data in Home Assistant.\n\n(Check docs for the panel_custom component to hide this message)`)\n      ) {\n        return;\n      }\n    }\n\n    if (!config.embed_iframe) {\n      loadCustomPanel(config).then(\n        () => {\n          const element = createCustomPanelElement(config);\n          this._setProperties = (props) =>\n            setCustomPanelProperties(element, props);\n          setCustomPanelProperties(element, {\n            panel,\n            hass: this.hass,\n            narrow: this.narrow,\n            route: this.route,\n          });\n          this.appendChild(element);\n        },\n        () => {\n          alert(`Unable to load custom panel from ${tempA.href}`);\n        }\n      );\n      return;\n    }\n\n    window.customPanel = this;\n    this.innerHTML = `\n    <style>\n      iframe {\n        border: 0;\n        width: 100%;\n        height: 100%;\n        display: block;\n      }\n    </style>\n    <iframe></iframe>\n    `.trim();\n    const iframeDoc = this.querySelector(\"iframe\")!.contentWindow!.document;\n    iframeDoc.open();\n    iframeDoc.write(\n      `<!doctype html><script src='${window.customPanelJS}'></script>`\n    );\n    iframeDoc.close();\n  }\n}\n\ncustomElements.define(\"ha-panel-custom\", HaPanelCustom);\n","// Load a resource and get a promise when loading done.\n// From: https://davidwalsh.name/javascript-loader\n\nconst _load = (\n  tag: \"link\" | \"script\" | \"img\",\n  url: string,\n  type?: \"module\"\n) => {\n  // This promise will be used by Promise.all to determine success or failure\n  return new Promise((resolve, reject) => {\n    const element = document.createElement(tag);\n    let attr = \"src\";\n    let parent = \"body\";\n\n    // Important success and error for the promise\n    element.onload = () => resolve(url);\n    element.onerror = () => reject(url);\n\n    // Need to set different attributes depending on tag type\n    switch (tag) {\n      case \"script\":\n        (element as HTMLScriptElement).async = true;\n        if (type) {\n          (element as HTMLScriptElement).type = type;\n        }\n        break;\n      case \"link\":\n        (element as HTMLLinkElement).type = \"text/css\";\n        (element as HTMLLinkElement).rel = \"stylesheet\";\n        attr = \"href\";\n        parent = \"head\";\n    }\n\n    // Inject into document to kick off loading\n    element[attr] = url;\n    document[parent].appendChild(element);\n  });\n};\n\nexport const loadCSS = (url: string) => _load(\"link\", url);\nexport const loadJS = (url: string) => _load(\"script\", url);\nexport const loadImg = (url: string) => _load(\"img\", url);\nexport const loadModule = (url: string) => _load(\"script\", url, \"module\");\n"],"sourceRoot":""}