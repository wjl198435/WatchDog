{"version":3,"sources":["webpack:///./src/panels/lovelace/common/structs/struct.ts","webpack:///./src/panels/lovelace/common/structs/is-entity-id.ts","webpack:///./src/panels/lovelace/common/structs/is-icon.ts","webpack:///./src/panels/lovelace/editor/config-elements/hui-sensor-card-editor.ts"],"names":["__webpack_require__","d","__webpack_exports__","struct","superstruct","types","entity-id","value","includes","icon","cardConfigStruct","type","entity","name","graph","unit","detail","theme","hours_to_show","HuiSensorCardEditor","_decorate","customElement","_initialize","_LitElement","F","_LitElement2","_getPrototypeOf2","_this","_classCallCheck","this","_len","arguments","length","args","Array","_key","_getPrototypeOf","call","apply","concat","_assertThisInitialized","_inherits","kind","decorators","property","key","config","_config","number","hass","html","_templateObject","graphs","_templateObject2","configElementStyle","_name","_valueChanged","_entity","_icon","indexOf","_graph","map","_templateObject3","_unit","_detail","_theme","_hours_to_show","ev","target","configValue","isNaN","Number","Object","assign","_defineProperty","fireEvent","LitElement"],"mappings":"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","file":"chunk.bc2be3500dd22bb4ee3c.js","sourcesContent":["import { superstruct } from \"superstruct\";\nimport { isEntityId } from \"./is-entity-id\";\nimport { isIcon } from \"./is-icon\";\n\nexport const struct = superstruct({\n  types: {\n    \"entity-id\": isEntityId,\n    icon: isIcon,\n  },\n});\n","export function isEntityId(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"entity id should be a string\";\n  }\n  if (!value.includes(\".\")) {\n    return \"entity id should be in the format 'domain.entity'\";\n  }\n  return true;\n}\n","export function isIcon(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"icon should be a string\";\n  }\n  if (!value.includes(\":\")) {\n    return \"icon should be in the format 'mdi:icon'\";\n  }\n  return true;\n}\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n} from \"lit-element\";\nimport \"@polymer/paper-input/paper-input\";\nimport \"@polymer/paper-dropdown-menu/paper-dropdown-menu\";\nimport \"@polymer/paper-item/paper-item\";\nimport \"@polymer/paper-listbox/paper-listbox\";\n\nimport \"../../components/hui-theme-select-editor\";\nimport \"../../../../components/entity/ha-entity-picker\";\n\nimport { struct } from \"../../common/structs/struct\";\nimport { EntitiesEditorEvent, EditorTarget } from \"../types\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { LovelaceCardEditor } from \"../../types\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { configElementStyle } from \"./config-elements-style\";\nimport { SensorCardConfig } from \"../../cards/types\";\n\nconst cardConfigStruct = struct({\n  type: \"string\",\n  entity: \"string?\",\n  name: \"string?\",\n  icon: \"string?\",\n  graph: \"string?\",\n  unit: \"string?\",\n  detail: \"number?\",\n  theme: \"string?\",\n  hours_to_show: \"number?\",\n});\n\n@customElement(\"hui-sensor-card-editor\")\nexport class HuiSensorCardEditor extends LitElement\n  implements LovelaceCardEditor {\n  @property() public hass?: HomeAssistant;\n\n  @property() private _config?: SensorCardConfig;\n\n  public setConfig(config: SensorCardConfig): void {\n    config = cardConfigStruct(config);\n    this._config = config;\n  }\n\n  get _entity(): string {\n    return this._config!.entity || \"\";\n  }\n\n  get _name(): string {\n    return this._config!.name || \"\";\n  }\n\n  get _icon(): string {\n    return this._config!.icon || \"\";\n  }\n\n  get _graph(): string {\n    return this._config!.graph || \"none\";\n  }\n\n  get _unit(): string {\n    return this._config!.unit || \"\";\n  }\n\n  get _detail(): number | string {\n    return this._config!.number || \"1\";\n  }\n\n  get _theme(): string {\n    return this._config!.theme || \"default\";\n  }\n\n  get _hours_to_show(): number | string {\n    return this._config!.hours_to_show || \"24\";\n  }\n\n  protected render(): TemplateResult | void {\n    if (!this.hass) {\n      return html``;\n    }\n\n    const graphs = [\"line\", \"none\"];\n\n    return html`\n      ${configElementStyle}\n      <div class=\"card-config\">\n        <div class=\"side-by-side\">\n          <paper-input\n            label=\"Name\"\n            .value=\"${this._name}\"\n            .configValue=\"${\"name\"}\"\n            @value-changed=\"${this._valueChanged}\"\n          ></paper-input>\n          <ha-entity-picker\n            .hass=\"${this.hass}\"\n            .value=\"${this._entity}\"\n            .configValue=${\"entity\"}\n            domain-filter=\"sensor\"\n            @change=\"${this._valueChanged}\"\n            allow-custom-entity\n          ></ha-entity-picker>\n        </div>\n        <div class=\"side-by-side\">\n          <paper-input\n            label=\"Icon\"\n            .value=\"${this._icon}\"\n            .configValue=\"${\"icon\"}\"\n            @value-changed=\"${this._valueChanged}\"\n          ></paper-input>\n          <paper-dropdown-menu\n            label=\"Graph Type\"\n            .configValue=\"${\"graph\"}\"\n            @value-changed=\"${this._valueChanged}\"\n          >\n            <paper-listbox\n              slot=\"dropdown-content\"\n              .selected=\"${graphs.indexOf(this._graph)}\"\n            >\n              ${graphs.map((graph) => {\n                return html`\n                  <paper-item>${graph}</paper-item>\n                `;\n              })}\n            </paper-listbox>\n          </paper-dropdown-menu>\n        </div>\n        <div class=\"side-by-side\">\n          <paper-input\n            label=\"Units\"\n            .value=\"${this._unit}\"\n            .configValue=\"${\"unit\"}\"\n            @value-changed=\"${this._valueChanged}\"\n          ></paper-input>\n          <paper-input\n            label=\"Graph Detail\"\n            type=\"number\"\n            .value=\"${this._detail}\"\n            .configValue=\"${\"detail\"}\"\n            @value-changed=\"${this._valueChanged}\"\n          ></paper-input>\n        </div>\n        <div class=\"side-by-side\">\n          <hui-theme-select-editor\n            .hass=\"${this.hass}\"\n            .value=\"${this._theme}\"\n            .configValue=\"${\"theme\"}\"\n            @theme-changed=\"${this._valueChanged}\"\n          ></hui-theme-select-editor>\n          <paper-input\n            label=\"Hours To Show\"\n            type=\"number\"\n            .value=\"${this._hours_to_show}\"\n            .configValue=\"${\"hours_to_show\"}\"\n            @value-changed=\"${this._valueChanged}\"\n          ></paper-input>\n        </div>\n      </div>\n    `;\n  }\n\n  private _valueChanged(ev: EntitiesEditorEvent): void {\n    if (!this._config || !this.hass) {\n      return;\n    }\n    const target = ev.target! as EditorTarget;\n\n    if (this[`_${target.configValue}`] === target.value) {\n      return;\n    }\n    if (target.configValue) {\n      if (\n        target.value === \"\" ||\n        (target.type === \"number\" && isNaN(Number(target.value)))\n      ) {\n        delete this._config[target.configValue!];\n      } else {\n        let value: any = target.value;\n        if (target.type === \"number\") {\n          value = Number(value);\n        }\n        this._config = { ...this._config, [target.configValue!]: value };\n      }\n    }\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-sensor-card-editor\": HuiSensorCardEditor;\n  }\n}\n"],"sourceRoot":""}